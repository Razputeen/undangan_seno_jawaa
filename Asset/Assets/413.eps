%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 10_03_06_henna_design_10.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: GK
%%CreationDate: 9/4/2017
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:tiff="http://ns.adobe.com/tiff/1.0/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:exif="http://ns.adobe.com/exif/1.0/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <tiff:Make>Canon</tiff:Make>
         <tiff:Model>MP495 series</tiff:Model>
         <tiff:XResolution>300/1</tiff:XResolution>
         <tiff:YResolution>300/1</tiff:YResolution>
         <tiff:ResolutionUnit>2</tiff:ResolutionUnit>
         <tiff:YCbCrPositioning>1</tiff:YCbCrPositioning>
         <tiff:Compression>6</tiff:Compression>
         <tiff:JPEGInterchangeFormat>450</tiff:JPEGInterchangeFormat>
         <tiff:JPEGInterchangeFormatLength>4289</tiff:JPEGInterchangeFormatLength>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:ModifyDate>2013-02-02T07:37:43+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2013-02-02T07:37:43+02:00</xmp:CreateDate>
         <xmp:MetadataDate>2013-02-02T07:37:43+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9K5iNrsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVcTTc9MVY7d/mL5Cs5zb3PmHT45lNHjNzESp8Go2x+eCwminGnatpepwfWN&#xA;NvIL63rT1raRJUr/AKyFhhQisVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVQup6nY6Xp1xqN/MtvZWkbSzzN0VFFT03PsB1xV5Rof5y+cfOOtT23kvy3FNpl&#xA;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&#xA;sVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <exif:ColorSpace>1</exif:ColorSpace>
         <exif:PixelXDimension>1824</exif:PixelXDimension>
         <exif:PixelYDimension>2528</exif:PixelYDimension>
         <exif:FileSource>2</exif:FileSource>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:38E516DE9A67E2118BCE811B4FBC50A6</stRef:instanceID>
            <stRef:documentID>xmp.did:38E516DE9A67E2118BCE811B4FBC50A6</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:37E516DE9A67E2118BCE811B4FBC50A6</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:2B39F3D9F96CE211BDF9C4A9C3AAEBAF</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2B39F3D9F96CE211BDF9C4A9C3AAEBAF</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:37E516DE9A67E2118BCE811B4FBC50A6</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:37E516DE9A67E2118BCE811B4FBC50A6</stEvt:instanceID>
                  <stEvt:when>2013-01-26T14:54:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:38E516DE9A67E2118BCE811B4FBC50A6</stEvt:instanceID>
                  <stEvt:when>2013-01-26T16:33:19+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2B39F3D9F96CE211BDF9C4A9C3AAEBAF</stEvt:instanceID>
                  <stEvt:when>2013-02-02T07:37:43+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.976471 .941176 .870588 rgb
f
1505.51 1804.65 mo
1504.31 1804.58 1503.52 1805.24 1503.13 1806.09 cv
1493.37 1798.84 1480.25 1789.98 1467.95 1792.79 cv
1468.76 1788.93 1468.67 1785.06 1467.61 1781.59 cv
1478.3 1786.25 1494.19 1790.05 1505.06 1785.92 cv
1515.44 1782.06 1522.11 1772.66 1517.18 1761.66 cv
1513.05 1752.47 1499.12 1749.83 1490.37 1752.26 cv
1479.4 1755.34 1468.88 1761.83 1463.63 1772.24 cv
1462.89 1770.73 1461.67 1768.76 1460.26 1767.08 cv
1461.35 1766.26 1462.4 1765.48 1463.45 1764.9 cv
1464.39 1764.45 1464.82 1763.31 1464.77 1762.29 cv
1469.61 1759.61 1469.21 1754.58 1471.44 1748.25 cv
1472.1 1746.45 1472.68 1744.57 1473.27 1742.79 cv
1473.71 1742.83 1474.2 1742.81 1474.65 1742.61 cv
1495.74 1733.33 1529.46 1726.7 1539.16 1755.54 cv
1546.56 1777.43 1530.43 1805.7 1505.51 1804.65 cv
cp
1514.41 1854.57 mo
1501.15 1878.75 1460.86 1873.42 1450.63 1848.97 cv
1450.38 1848.33 1449.86 1847.87 1449.37 1847.59 cv
1451.29 1835.36 1450.84 1822.12 1449.47 1811.25 cv
1451.62 1811.09 1453.8 1810.54 1455.79 1809.75 cv
1458.81 1823.42 1462.41 1840.35 1475.77 1847.34 cv
1484.92 1852.16 1497.18 1852.22 1502.71 1841.71 cv
1515.21 1817.99 1482.35 1804.23 1463.74 1802.9 cv
1464.64 1801.49 1465.49 1799.96 1466.18 1798.31 cv
1466.79 1798.66 1467.54 1798.79 1468.37 1798.55 cv
1479.17 1795.4 1491.46 1805.06 1499.83 1810.81 cv
1513.66 1820.38 1523.59 1837.89 1514.41 1854.57 cv
cp
1411.34 1878.03 mo
1399.43 1875.41 1387.73 1868.28 1382.35 1856.87 cv
1375.65 1842.66 1377.76 1820.36 1392.73 1811.88 cv
1397.08 1811.63 1401.34 1810.82 1405.53 1809.54 cv
1413.33 1807.17 1420.77 1803.16 1427.72 1798.02 cv
1428.41 1799.66 1429.23 1801.24 1430.22 1802.67 cv
1418.11 1806.8 1405.7 1814.48 1399.9 1826.32 cv
1395.61 1835.25 1395.28 1847.28 1405.93 1852.06 cv
1414.48 1855.96 1424.46 1853.76 1429.79 1845.61 cv
1436.25 1835.6 1436.8 1820.55 1437.31 1808.79 cv
1439.29 1809.76 1441.42 1810.5 1443.64 1810.91 cv
1446.57 1833.2 1448.28 1886.19 1411.34 1878.03 cv
cp
1377.47 1804.72 mo
1359.44 1798.54 1346.61 1774.57 1367.11 1761.63 cv
1389.48 1747.45 1410.09 1760.73 1429.7 1772.38 cv
1429.87 1772.52 1429.89 1772.63 1430.05 1772.77 cv
1428.18 1774.69 1426.87 1777.02 1426.16 1779.53 cv
1416.34 1772.17 1404.23 1767.06 1391.72 1768.39 cv
1384.59 1769.18 1373.35 1772.34 1372.98 1781.39 cv
1372.59 1791.59 1382.29 1797.44 1391.35 1798.4 cv
1402.76 1799.64 1415.75 1793.96 1425.25 1787.47 cv
1425.3 1789.19 1425.53 1790.95 1425.92 1792.62 cv
1425.54 1792.68 1425.09 1792.82 1424.63 1793.14 cv
1415.54 1799.96 1404.49 1805.53 1393.06 1806.48 cv
1392.3 1806.1 1391.39 1806.02 1390.43 1806.51 cv
1390.27 1806.61 1390.2 1806.7 1390.03 1806.73 cv
1385.84 1806.81 1381.64 1806.16 1377.47 1804.72 cv
cp
1460.29 1779.8 mo
1464.5 1785.01 1462.85 1794.53 1459.2 1799.66 cv
1453.69 1807.44 1439.88 1807.72 1434.73 1799.26 cv
1431.17 1793.3 1428.28 1781.63 1434.29 1776.46 cv
1439.7 1771.68 1446.01 1770.32 1453 1769.65 cv
1454.51 1769.49 1458.1 1773.19 1458.83 1775.44 cv
1459.12 1776.15 1459.55 1776.6 1460.11 1776.91 cv
1459.55 1777.75 1459.42 1778.74 1460.29 1779.8 cv
cp
1440.32 1701.42 mo
1459.51 1696.4 1475.57 1711.9 1470.68 1731.43 cv
1469.31 1736.84 1465.81 1756.26 1460.54 1757.86 cv
1459.07 1758.32 1458.17 1759.97 1458.63 1761.45 cv
1458.63 1761.45 1457.51 1762.07 1455.48 1763.55 cv
1455.37 1763.57 1455.39 1763.64 1455.31 1763.72 cv
1455.24 1763.69 1455.16 1763.64 1455.09 1763.65 cv
1453.5 1763.78 1451.95 1764.02 1450.47 1764.24 cv
1457.92 1756.92 1463.52 1744.53 1462 1734.37 cv
1460.66 1725.58 1452.7 1716.12 1443.33 1715.3 cv
1433.94 1714.48 1427.26 1720.53 1426.81 1729.98 cv
1426.12 1743.51 1433.69 1755.08 1439.63 1766.73 cv
1438.03 1767.35 1436.43 1768.07 1434.9 1768.95 cv
1434.74 1768.81 1434.6 1768.61 1434.32 1768.45 cv
1434.03 1768.23 1433.66 1768.06 1433.33 1767.89 cv
1416.7 1749.29 1408.96 1709.67 1440.32 1701.42 cv
cp
1544.65 1753.87 mo
1531.22 1724.02 1501.49 1725.22 1475.29 1736.18 cv
1476.67 1730.88 1477.58 1725.51 1477.25 1719.85 cv
1476.3 1704.21 1459.29 1692.13 1444.35 1694.66 cv
1410.14 1700.49 1407.39 1735.67 1421.45 1760.83 cv
1409.25 1753.84 1397.03 1748.41 1381.82 1749.9 cv
1367.29 1751.29 1354.88 1761.53 1351.47 1775.56 cv
1347.82 1790.16 1359.13 1804.46 1372.4 1809.02 cv
1376.24 1810.37 1380.05 1811.08 1383.8 1811.57 cv
1374.26 1821.25 1369.76 1838.58 1373.85 1850.84 cv
1378.65 1865.56 1390.4 1879.25 1406.16 1882.8 cv
1430.99 1888.25 1442.82 1874.38 1447.73 1855.67 cv
1463.5 1881.39 1508.28 1884.52 1520.85 1853.87 cv
1527.61 1837.46 1520.83 1821.22 1508.51 1810.28 cv
1533.84 1809.1 1555.48 1777.93 1544.65 1753.87 cv
cp
.270588 .160784 .054902 rgb
f
1580.75 1782.29 mo
1576.42 1795.14 1562.81 1818.83 1545.75 1816.03 cv
1543.88 1815.75 1542.65 1817.04 1542.34 1818.46 cv
1541.88 1819.27 1541.68 1820.26 1542.16 1821.26 cv
1553.75 1846.59 1545.87 1889.76 1515.27 1898.76 cv
1493.15 1905.25 1461.91 1904.37 1453.25 1877.44 cv
1452.56 1875.36 1450.4 1875.13 1448.94 1875.98 cv
1447.85 1876.05 1446.76 1876.66 1446.33 1878.01 cv
1436.49 1909.45 1388.73 1920.58 1364.59 1899.42 cv
1349.69 1886.37 1329.07 1843.19 1356.81 1831.59 cv
1357.78 1831.19 1358.3 1830.43 1358.53 1829.59 cv
1360.8 1828.83 1361.25 1824.86 1358.27 1824.05 cv
1330.02 1816.52 1315.8 1781.16 1328.66 1755.31 cv
1333.88 1744.87 1341.38 1737.36 1352.22 1732.96 cv
1360.41 1729.65 1372.58 1724.17 1380.81 1729.64 cv
1381.95 1730.38 1383.03 1730.17 1383.79 1729.5 cv
1385.12 1729.06 1386.18 1727.8 1385.62 1726.05 cv
1375.92 1696.46 1408.74 1660.61 1438.03 1659.22 cv
1462.99 1658.03 1497.61 1679.18 1496.89 1706.54 cv
1496.87 1707.38 1497.18 1708.01 1497.63 1708.46 cv
1497.62 1710.22 1499.07 1711.98 1501.23 1711.26 cv
1530.05 1702.05 1566.92 1711.87 1578.49 1742.62 cv
1583.25 1755.19 1585.14 1769.28 1580.75 1782.29 cv
cp
1586.64 1748.66 mo
1575.52 1712 1538.35 1695.03 1502.55 1704.98 cv
1502.07 1674.69 1461.95 1648.08 1433.36 1654.1 cv
1404.38 1660.2 1372.7 1690.7 1378.81 1722.44 cv
1368.89 1719.54 1356.48 1724.85 1347.86 1728.65 cv
1335.75 1734 1326.17 1744.01 1321.94 1756.72 cv
1312.75 1784.35 1323.82 1817.18 1351.73 1827.95 cv
1323.31 1843.94 1343.75 1890.64 1363.49 1905.79 cv
1389.95 1926.06 1436.06 1914.81 1449.9 1884.46 cv
1462.29 1909.83 1498.51 1914.11 1522.01 1902.26 cv
1541.67 1892.32 1551.94 1871.62 1552.95 1850.45 cv
1553.04 1848.32 1553.07 1846.17 1552.96 1844.04 cv
1552.68 1836.41 1551.19 1828.84 1548.49 1821.85 cv
1549.83 1821.8 1551.16 1821.61 1552.49 1821.31 cv
1554.42 1820.88 1556.35 1820.21 1558.21 1819.32 cv
1566.85 1815.34 1574.46 1807.27 1578.85 1799.99 cv
1588.05 1784.71 1591.9 1766.09 1586.64 1748.66 cv
cp
f
1508.51 1810.28 mo
1520.83 1821.22 1527.61 1837.46 1520.85 1853.87 cv
1508.28 1884.52 1463.5 1881.39 1447.73 1855.67 cv
1442.82 1874.38 1430.99 1888.25 1406.16 1882.8 cv
1390.4 1879.25 1378.65 1865.56 1373.85 1850.84 cv
1369.76 1838.58 1374.26 1821.25 1383.8 1811.57 cv
1380.05 1811.08 1376.24 1810.37 1372.4 1809.02 cv
1359.13 1804.46 1347.82 1790.16 1351.47 1775.56 cv
1354.88 1761.53 1367.29 1751.29 1381.82 1749.9 cv
1397.03 1748.41 1409.25 1753.84 1421.45 1760.83 cv
1407.39 1735.67 1410.14 1700.49 1444.35 1694.66 cv
1459.29 1692.13 1476.3 1704.21 1477.25 1719.85 cv
1477.58 1725.51 1476.67 1730.88 1475.29 1736.18 cv
1501.49 1725.22 1531.22 1724.02 1544.65 1753.87 cv
1555.48 1777.93 1533.84 1809.1 1508.51 1810.28 cv
cp
1578.49 1742.62 mo
1566.92 1711.87 1530.05 1702.05 1501.23 1711.26 cv
1499.07 1711.98 1497.62 1710.22 1497.63 1708.46 cv
1497.18 1708.01 1496.87 1707.38 1496.89 1706.54 cv
1497.61 1679.18 1462.99 1658.03 1438.03 1659.22 cv
1408.74 1660.61 1375.92 1696.46 1385.62 1726.05 cv
1386.18 1727.8 1385.12 1729.06 1383.79 1729.5 cv
1383.03 1730.17 1381.95 1730.38 1380.81 1729.64 cv
1372.58 1724.17 1360.41 1729.65 1352.22 1732.96 cv
1341.38 1737.36 1333.88 1744.87 1328.66 1755.31 cv
1315.8 1781.16 1330.02 1816.52 1358.27 1824.05 cv
1361.25 1824.86 1360.8 1828.83 1358.53 1829.59 cv
1358.3 1830.43 1357.78 1831.19 1356.81 1831.59 cv
1329.07 1843.19 1349.69 1886.37 1364.59 1899.42 cv
1388.73 1920.58 1436.49 1909.45 1446.33 1878.01 cv
1446.76 1876.66 1447.85 1876.05 1448.94 1875.98 cv
1450.4 1875.13 1452.56 1875.36 1453.25 1877.44 cv
1461.91 1904.37 1493.15 1905.25 1515.27 1898.76 cv
1545.87 1889.76 1553.75 1846.59 1542.16 1821.26 cv
1541.68 1820.26 1541.88 1819.27 1542.34 1818.46 cv
1542.65 1817.04 1543.88 1815.75 1545.75 1816.03 cv
1562.81 1818.83 1576.42 1795.14 1580.75 1782.29 cv
1585.14 1769.28 1583.25 1755.19 1578.49 1742.62 cv
cp
f
1557.69 1818.72 mo
1593.47 1862.41 1651.94 1822.36 1690.17 1803.53 cv
1728.63 1784.6 1797.89 1777.07 1817.92 1826.58 cv
1826.1 1846.78 1810.5 1864.61 1791.23 1867.43 cv
1774.89 1869.83 1764 1853.16 1764.18 1838.59 cv
1764.32 1825.69 1778.86 1818.57 1789.17 1826.04 cv
1799.65 1833.6 1798.19 1843.39 1787.62 1844.93 cv
1787.21 1847.13 1783.93 1848.5 1782.35 1846.06 cv
1781.77 1845.47 1781.2 1844.89 1780.62 1844.29 cv
1778.96 1842.71 1779.86 1839.12 1782.5 1839.32 cv
1796.52 1840.37 1787.6 1829.02 1779.07 1828.5 cv
1764.56 1827.6 1770.97 1848.34 1774.71 1854.23 cv
1781.17 1864.37 1793.75 1862.68 1802.9 1857.72 cv
1819.48 1848.74 1814.67 1827.33 1804.69 1815.57 cv
1790.62 1798.97 1764.15 1793.8 1743.6 1794.27 cv
1724.83 1794.73 1707.15 1801.55 1690.56 1809.73 cv
1649.12 1830.11 1590.8 1868.16 1552.82 1821.79 cv
1550.47 1818.93 1555.37 1815.91 1557.69 1818.72 cv
cp
f
1585.19 1829.92 mo
1596.5 1826.49 1609.29 1822.92 1614.84 1811.26 cv
1619.83 1800.76 1620.6 1788.92 1625.79 1778.48 cv
1626.8 1776.42 1624.91 1773.33 1622.39 1774.4 cv
1610.53 1779.43 1598.72 1783.25 1590.49 1793.73 cv
1583.37 1802.73 1581.48 1814.54 1581.78 1825.66 cv
1581.77 1825.8 1581.85 1825.83 1581.8 1825.9 cv
1580.94 1827.85 1582.55 1830.78 1585.19 1829.92 cv
cp
f
1631.57 1821.88 mo
1637.53 1820 1645.72 1820.65 1651.16 1817.03 cv
1656.36 1813.53 1660.48 1809.92 1664.26 1804.94 cv
1667.99 1800.02 1670.27 1794.06 1671.2 1788.01 cv
1672.28 1780.66 1670.74 1774.04 1674.97 1767.34 cv
1676.05 1765.58 1674.44 1762.83 1672.36 1763.1 cv
1644.1 1766.74 1626.11 1788.05 1627.69 1816.26 cv
1627.78 1816.9 1627.98 1817.37 1628.27 1817.76 cv
1627.26 1819.76 1628.82 1822.76 1631.57 1821.88 cv
cp
f
1689.78 1796.01 mo
1701.86 1791.68 1712.84 1789.91 1720.08 1777.94 cv
1726.01 1768.11 1727.85 1756.79 1731.21 1745.92 cv
1731.91 1743.86 1729.59 1741.91 1727.61 1742.5 cv
1715.54 1746.34 1703.72 1751.67 1695.09 1761.26 cv
1688.01 1769.17 1687.84 1780.92 1686.82 1790.84 cv
1686.77 1791.1 1686.88 1791.18 1686.88 1791.36 cv
1685.25 1793.36 1686.85 1797.08 1689.78 1796.01 cv
cp
f
1754.78 1782.68 mo
1764.12 1784.88 1773.11 1789.08 1781.97 1782.6 cv
1790.49 1776.47 1795.06 1766.56 1803.7 1760.63 cv
1805.59 1759.3 1805.44 1755.85 1802.83 1755.39 cv
1791.92 1753.64 1777.09 1750.45 1766.69 1755.59 cv
1757.54 1760.11 1754.61 1768.44 1753.44 1777.86 cv
1752.2 1779.32 1752.31 1782.04 1754.78 1782.68 cv
cp
f
1806.2 1803.36 mo
1806.52 1803.99 1807.13 1804.58 1808.02 1804.79 cv
1822.42 1808.48 1828.14 1825.66 1841.89 1831.16 cv
1852.07 1835.21 1861 1833.17 1871.09 1829.63 cv
1873.53 1828.78 1873.75 1825.71 1871.6 1824.38 cv
1864.62 1819.94 1860.92 1812.84 1855.03 1807.3 cv
1850.89 1803.39 1846.25 1800.77 1841.07 1798.51 cv
1829.28 1793.32 1818.73 1794.52 1806.71 1798.1 cv
1804.07 1798.9 1804.36 1802.25 1806.2 1803.36 cv
cp
f
1553.39 1844.23 mo
1563.77 1849.44 1572.68 1856.19 1583.85 1860.04 cv
1594.95 1863.87 1607.56 1860.52 1618.38 1857.4 cv
1641.92 1850.63 1661.45 1838.08 1681.99 1825.17 cv
1713.25 1805.55 1758.75 1783.54 1795.45 1800.89 cv
1798.81 1802.49 1796.08 1807.54 1792.72 1805.96 cv
1746.46 1784.08 1694.18 1825.79 1656.53 1847.85 cv
1640.89 1857 1621.1 1864.88 1602.95 1866.77 cv
1581.8 1868.96 1568.68 1858.34 1550.69 1849.28 cv
1547.36 1847.63 1550.08 1842.55 1553.39 1844.23 cv
cp
f
1698.08 1840.27 mo
1705.5 1849.5 1711.06 1859.93 1722.7 1864.46 cv
1733.25 1868.53 1743.78 1870.02 1754.64 1866.42 cv
1757.05 1865.63 1757.37 1862.35 1755.15 1861.17 cv
1747.47 1856.82 1747.06 1848.12 1741.24 1842.2 cv
1736.22 1837.12 1730.02 1832.76 1723.05 1830.71 cv
1713.39 1827.93 1702.42 1827.07 1696.08 1836.25 cv
1694.81 1838.13 1696.28 1839.91 1698.08 1840.27 cv
cp
f
1648.58 1862.58 mo
1648.52 1862.61 li
1648.65 1862.81 1648.82 1862.94 1648.93 1863.15 cv
1649.05 1863.34 1649.22 1863.54 1649.41 1863.72 cv
1667.37 1887.53 1692.94 1899.41 1722.82 1892.58 cv
1724.85 1892.15 1725.53 1889.06 1723.94 1887.73 cv
1711.55 1877.8 1700.41 1863.94 1685.24 1858.09 cv
1674.09 1853.84 1659.29 1849.57 1649.29 1858.22 cv
1648.92 1858.59 1648.69 1858.96 1648.56 1859.36 cv
1647.98 1860.02 1647.76 1860.84 1648.2 1861.87 cv
1648.32 1862.19 1648.43 1862.35 1648.58 1862.58 cv
cp
f
1605.45 1877.15 mo
1605.47 1877.83 1605.78 1878.5 1606.51 1879.07 cv
1610.52 1882.05 1613.44 1889.52 1616.53 1893.56 cv
1620.46 1898.8 1625.55 1902.48 1631.07 1905.83 cv
1642.75 1912.93 1657.18 1918.29 1670.62 1913.69 cv
1673.15 1912.81 1673.21 1909.77 1671.16 1908.36 cv
1658.81 1899.9 1652.33 1885.29 1639.78 1876.67 cv
1628.54 1868.97 1617.32 1866.43 1604.72 1872.16 cv
1602.18 1873.36 1603.33 1876.37 1605.45 1877.15 cv
cp
f
1570.91 1903.9 mo
1584.96 1915.57 1600.16 1926.09 1619.22 1922.46 cv
1622.01 1921.93 1621.54 1918.41 1619.8 1917.18 cv
1602.2 1904.92 1589.93 1860.43 1561.95 1867 cv
1560.67 1867.31 1560.09 1868.21 1559.96 1869.15 cv
1559.64 1869.31 1559.29 1869.53 1559 1869.8 cv
1548.54 1880.83 1561.95 1896.53 1570.91 1903.9 cv
cp
f
313.22 1634.02 mo
296.868 1629.6 279.482 1622.77 270.67 1607.27 cv
253.414 1576.92 288.53 1543.07 319.044 1547.58 cv
353.736 1552.71 369.712 1593.56 367.639 1624.58 cv
367.33 1629.19 366.701 1633.72 365.809 1638.17 cv
348.285 1640.49 330.212 1638.61 313.22 1634.02 cv
cp
142.638 1726.66 mo
121.278 1708.52 113.347 1678.05 136.886 1657.79 cv
158.893 1638.85 193.857 1635.72 218.266 1651.58 cv
243.699 1668.11 260.075 1705.28 251.478 1735.02 cv
249.912 1740.45 247.651 1745.42 244.854 1750.01 cv
209.462 1757.51 172.397 1751.94 142.638 1726.66 cv
cp
478.556 1380.37 mo
475.056 1358.71 470.1 1337.3 463.901 1316.25 cv
461.517 1308.15 459.739 1297.34 455.391 1289.86 cv
456.449 1293.37 452.816 1309.31 452.527 1311.42 cv
450.17 1328.79 447.228 1346.09 443.6 1363.23 cv
435.522 1401.41 423.726 1438.13 408.093 1473.85 cv
401.553 1488.8 395.769 1504.16 390.932 1519.74 cv
386.907 1532.68 378.296 1556.18 391.898 1566.38 cv
405.459 1576.56 426.182 1566.4 437.718 1557.87 cv
453.976 1545.85 465.854 1528.36 473.271 1509.7 cv
473.888 1508.18 474.42 1506.63 474.979 1505.09 cv
471.951 1525.66 465.672 1545.75 456.279 1564.27 cv
439.607 1597.14 411.177 1629.04 373.628 1636.85 cv
373.505 1636.88 373.379 1636.89 373.255 1636.92 cv
376.796 1618.17 375.288 1598.43 367.599 1581.16 cv
361.304 1567.02 350.078 1552.88 335.101 1547.52 cv
319.029 1541.76 300.619 1545.53 285.969 1553.47 cv
272.268 1560.9 260.546 1574.17 258.871 1590.17 cv
257.051 1607.56 269.269 1620.91 283.904 1628.3 cv
308.226 1640.57 338.151 1643.56 365.684 1638.73 cv
359.706 1667.78 341.916 1693.17 319.478 1712.51 cv
300.127 1729.19 276.525 1741.88 251.807 1748.35 cv
265.999 1724.54 262.757 1694.34 246.792 1670.86 cv
225.984 1640.26 189.64 1632.76 155.824 1645.22 cv
140.359 1650.92 124.516 1660.62 118.345 1676.7 cv
112.779 1691.21 117.208 1706.9 126.749 1718.62 cv
145.99 1742.27 178.018 1754.23 207.789 1755.19 cv
219.67 1755.57 231.707 1754.41 243.608 1751.96 cv
227.371 1776.63 195.171 1789.9 169.539 1801.36 cv
148.314 1810.85 117.751 1821.46 108.554 1845.18 cv
104.647 1855.25 106.152 1866.15 110.55 1875.8 cv
113.451 1882.16 117.447 1887.95 121.676 1893.49 cv
124.527 1897.23 128.955 1891.61 130.343 1893.4 cv
120.61 1880.88 111.019 1864.63 114.163 1848.11 cv
117.572 1830.19 135.635 1819.08 150.538 1811.18 cv
181.504 1794.76 218.178 1786.02 243.083 1759.84 cv
245.935 1756.85 248.414 1753.68 250.554 1750.38 cv
295.455 1739.13 337.54 1709.31 360.593 1670.67 cv
366.651 1660.52 370.932 1649.07 373.204 1637.21 cv
380.263 1635.58 387.11 1633.43 393.599 1630.77 cv
458.054 1604.3 488.396 1527.89 483.823 1461.42 cv
485.823 1434.14 482.666 1405.8 478.556 1380.37 cv
cp
f
473.271 1509.7 mo
468.114 1522.68 478.566 1496.71 473.271 1509.7 cv
473.271 1509.7 li
cp
f
455.391 1289.86 mo
455.311 1289.6 455.212 1289.39 455.077 1289.28 cv
455.189 1289.46 455.281 1289.67 455.391 1289.86 cv
cp
f
288.622 1001.53 mo
232.827 954.042 141.453 965.375 102.19 1028.53 cv
84.1733 1057.51 79.9448 1093.14 92.4819 1125.06 cv
104.829 1156.51 133.771 1186.48 168.345 1191.52 cv
176.964 1192.78 185.777 1192.52 194.335 1190.92 cv
199.919 1189.89 210.805 1188.28 211.137 1180.73 cv
211.406 1174.58 205.324 1169.38 201.147 1165.78 cv
194.961 1160.45 188.041 1155.98 180.671 1152.46 cv
151.843 1138.71 118.111 1140.85 93.916 1162.56 cv
72.688 1181.6 58.8232 1209.53 55.0234 1237.67 cv
53.1812 1251.31 53.7866 1265.42 57.9214 1278.61 cv
60.0391 1285.36 63.085 1291.83 67.0425 1297.7 cv
68.1494 1299.34 70.3882 1304.13 72.7173 1303.42 cv
73.541 1303.16 77.9453 1300.72 78.6216 1301.53 cv
56.7783 1275.36 58.1567 1238.5 69.873 1208.23 cv
75.7544 1193.04 84.2808 1178.5 95.3501 1166.49 cv
101.774 1159.53 109.296 1153.61 117.458 1148.81 cv
126.029 1143.77 134.134 1143.87 143.712 1145.82 cv
161.177 1149.38 178.653 1155.53 192.711 1166.79 cv
197.722 1170.8 208.424 1179.36 203.237 1186.75 cv
199.435 1192.17 190.457 1191.5 184.745 1190.95 cv
149.185 1187.53 119.739 1163.64 103.834 1132.14 cv
77.5059 1079.99 100.435 1012.79 151.994 986.032 cv
173.794 974.717 199.157 971.46 223.251 975.802 cv
235.898 978.083 248.162 982.407 259.478 988.496 cv
265.023 991.481 270.342 994.887 275.376 998.669 cv
276.726 999.684 280.414 1003.78 282.077 1003.62 cv
283.477 1003.47 287.415 1000.5 288.622 1001.53 cv
254.374 972.38 288.622 1001.53 288.622 1001.53 cv
cp
f
669.27 1423.26 mo
717.543 1459.35 736.125 1416.21 748.723 1445.34 cv
758.484 1467.9 699.617 1489.74 669.27 1423.26 cv
cp
f
698.423 1475.6 mo
745.637 1513.07 765.459 1470.48 777.208 1499.97 cv
786.317 1522.8 726.847 1542.92 698.423 1475.6 cv
cp
f
718.882 1530.68 mo
766.089 1568.14 785.913 1525.56 797.664 1555.05 cv
806.77 1577.88 747.3 1598 718.882 1530.68 cv
cp
f
726.879 1579.92 mo
764.392 1627.1 793.335 1590.1 798.117 1621.47 cv
801.814 1645.77 739.337 1651.93 726.879 1579.92 cv
cp
f
840.531 1452.06 mo
895.669 1528.52 1032.91 1483.64 980.254 1537.61 cv
1021.4 1556.78 999.266 1613.5 918.468 1568.7 cv
882.89 1603.39 857.326 1541.61 840.531 1452.06 cv
cp
f
726.47 1630.5 mo
755.502 1683.32 790.26 1651.71 789.69 1683.44 cv
789.25 1708.02 726.625 1703.57 726.47 1630.5 cv
cp
f
716.609 1679.55 mo
734.731 1737.03 775.002 1712.85 768.226 1743.86 cv
762.983 1767.87 702.439 1751.24 716.609 1679.55 cv
cp
f
688.755 1741.57 mo
712.323 1797.04 750.087 1769.1 746.325 1800.61 cv
743.416 1825.02 681.553 1814.28 688.755 1741.57 cv
cp
f
340.488 523.34 mo
320.059 533.915 302.172 545.73 286.149 562.495 cv
273.378 575.685 262.246 589.795 252.583 605.172 cv
252.932 598.668 254.278 592.77 255.37 587.358 cv
258.381 572.378 262.749 557.642 268.7 543.564 cv
279.749 517.435 297.753 489.677 325.117 478.608 cv
337.387 473.637 351.415 471.89 364.3 475.431 cv
373.829 478.053 389.944 487.793 381.067 499.476 cv
372.616 510.598 352.612 517.091 340.488 523.34 cv
335.568 525.892 340.488 523.34 340.488 523.34 cv
cp
f
321.189 465.791 mo
308.686 473.168 297.822 481.251 288.307 492.375 cv
280.709 501.128 273.774 510.327 268.637 520.438 cv
268.052 516.52 269.266 512.559 269.774 509.105 cv
271.139 499.574 273.378 490.116 276.643 481.054 cv
282.698 464.183 293.08 446.066 309.941 438.13 cv
317.499 434.568 326.288 432.98 334.531 434.766 cv
340.624 436.077 351.133 441.66 345.937 449.33 cv
341.001 456.636 328.621 461.431 321.189 465.791 cv
318.179 467.569 321.189 465.791 321.189 465.791 cv
cp
f
297.175 429.75 mo
289.38 437.439 282.912 445.336 277.995 455.211 cv
274.047 463.015 271.015 470.808 268.75 479.351 cv
267.421 476.224 267.765 473.477 267.504 470.858 cv
266.758 463.63 266.663 456.303 267.387 449.065 cv
268.72 435.632 272.997 420.473 283.873 411.581 cv
288.743 407.583 294.887 404.81 301.244 404.591 cv
305.942 404.447 314.65 406.608 312.251 413.174 cv
309.978 419.425 301.808 425.194 297.175 429.75 cv
295.286 431.603 297.175 429.75 297.175 429.75 cv
cp
f
551.509 1433.63 mo
548.817 1402.9 530.512 1372.92 512.559 1348.75 cv
503.154 1336.1 492.83 1324.15 481.749 1312.92 cv
477.582 1308.69 471.112 1299.68 465.369 1297.47 cv
467.09 1297.71 471.048 1311.27 471.604 1312.73 cv
476.673 1326.07 481.173 1339.63 484.899 1353.39 cv
492.352 1380.91 495.609 1408.28 497.662 1436.6 cv
498.669 1450.45 500.202 1500.87 522.761 1497.72 cv
548.153 1494.19 553.471 1453.05 551.509 1433.63 cv
550.63 1423.57 553.537 1453.7 551.509 1433.63 cv
cp
f
341.54 1516.29 mo
378.035 1492.3 402.634 1449.64 417.966 1409.84 cv
426.559 1387.53 432.581 1364.23 436.332 1340.63 cv
438.827 1324.86 437.66 1308.25 440.393 1292.74 cv
439.986 1296.1 436.653 1300.51 435.122 1303.43 cv
431.005 1311.27 426.571 1318.94 421.886 1326.46 cv
411.244 1343.56 399.32 1359.88 386.194 1375.16 cv
360.133 1405.52 329.443 1426.86 296.436 1448.74 cv
279.564 1460.01 214.797 1497.19 236.391 1525.01 cv
246.847 1538.48 268.483 1539.45 283.953 1537.86 cv
304.526 1535.75 324.405 1527.74 341.54 1516.29 cv
354.341 1507.87 328.79 1524.81 341.54 1516.29 cv
cp
f
303.04 756.799 mo
273.956 793.228 256.902 844.229 255.477 890.528 cv
254.663 917.001 259.567 943.921 272.306 967.327 cv
277.957 977.727 285.082 987.322 293.582 995.581 cv
296.042 997.974 304.335 1006.36 308.284 1007.24 cv
305.073 1003.17 302.79 997.888 301.879 995.925 cv
297.499 986.445 294.631 976.26 293.255 965.925 cv
290.384 944.469 294.236 922.751 302.605 902.898 cv
319.492 862.809 352.173 835 377.649 800.897 cv
390.112 784.198 434.293 721.919 398.257 707.023 cv
382.901 700.681 363.892 708.674 350.381 716.108 cv
332.056 726.189 316.116 740.554 303.04 756.799 cv
293.65 768.562 322.005 733.241 303.04 756.799 cv
cp
f
429.99 1273.81 mo
417.959 1317.63 390.749 1356.79 354.592 1384.19 cv
320.199 1410.28 272.698 1430.07 228.77 1421.82 cv
189.751 1414.5 153.098 1372.09 173.341 1331.48 cv
182.012 1314.08 210.734 1308.12 221.122 1327.17 cv
224.913 1334.13 225.376 1345.03 216.311 1348.11 cv
208.722 1350.71 209.074 1341.79 203.197 1343.64 cv
203.079 1353.02 213.588 1355.15 220.397 1351.7 cv
230.728 1346.48 231.227 1333.76 226.721 1324.35 cv
216.387 1302.79 185.317 1303.67 170.79 1320.21 cv
155.298 1337.83 156.492 1367.68 166.077 1387.71 cv
176.288 1409.05 196.396 1423.99 218.911 1430.34 cv
267.266 1443.95 322.836 1421.61 360.305 1391.52 cv
380.571 1375.23 398.299 1355.17 411.328 1332.64 cv
417.462 1322.04 422.716 1310.92 426.842 1299.39 cv
428.896 1293.64 430.671 1287.8 432.128 1281.87 cv
433.042 1278.16 435.648 1273.66 429.99 1273.81 cv
424.296 1294.57 429.99 1273.81 429.99 1273.81 cv
cp
f
1087.2 1646.76 mo
1051.59 1671.41 1098.5 1709.56 1111.02 1680.57 cv
1100.54 1679.72 1104.1 1667.94 1112.7 1671.88 cv
1141.61 1685.08 1123.47 1787.23 1024.18 1741.06 cv
1010.96 1734.92 999.023 1728.13 988.2 1720.84 cv
1018.62 1728.53 1052.89 1705.93 1041.89 1666.21 cv
1037.67 1650.92 1028.02 1637.25 1011.47 1636.75 cv
1001.58 1636.44 991.203 1640.97 987.063 1650.44 cv
982.501 1660.86 987.328 1676.11 1000.31 1676.45 cv
1017.41 1676.89 1013.15 1652.35 1002.27 1658.42 cv
1002.94 1662.82 1008.77 1660.12 1007.9 1665.67 cv
1007.31 1669.35 1003.41 1670.54 1000.19 1669.87 cv
992.456 1668.27 992.35 1657.65 996.392 1652.59 cv
999.805 1648.35 1006.08 1646.92 1011.23 1647.48 cv
1022.75 1648.75 1031.33 1659.38 1029.73 1670.13 cv
1025.35 1699.56 866.499 1724.75 811.499 1461.5 cv
796.418 1677.65 908.748 1748.07 868.433 1770.46 cv
841.197 1785.58 827.643 1754.65 843.499 1749.39 cv
838.691 1735.64 823.746 1742.81 822.966 1755.9 cv
818.455 1830.76 919.373 1829.34 947.009 1763.09 cv
943.098 1783.63 934.453 1803.28 921.988 1820.09 cv
904.99 1843.02 878.508 1864.38 849.109 1867.27 cv
823 1869.84 791.892 1849.73 797.213 1820.2 cv
799.497 1807.56 816.618 1798.46 826.733 1808.63 cv
830.427 1812.34 832.742 1819.17 827.551 1822.79 cv
823.226 1825.85 821.799 1820.13 818.41 1822.39 cv
820.063 1828.36 827.131 1827.78 830.817 1824.32 cv
836.406 1819.1 834.361 1810.93 829.766 1805.8 cv
819.221 1794.03 799.663 1800.34 793.506 1813.52 cv
786.931 1827.56 793.225 1846.29 803.02 1857.23 cv
813.455 1868.88 828.979 1874.64 844.428 1874.49 cv
877.63 1874.18 908.755 1849.71 926.973 1823.68 cv
936.804 1809.6 944.343 1793.58 948.441 1776.88 cv
950.375 1769.02 951.648 1760.99 952.132 1752.92 cv
952.279 1750.3 952.322 1747.7 952.306 1745.09 cv
952.979 1741.44 953.462 1737.65 953.719 1733.71 cv
953.719 1733.71 976.929 1744.9 969.583 1762.4 cv
942.711 1826.42 995.32 1870.34 997.053 1895.15 cv
997.053 1895.15 1033.17 1863.96 1026.77 1832.25 cv
1026.77 1832.25 1030.24 1825.25 1030.62 1832.45 cv
1033.13 1880.35 1071.79 1892.96 1064.09 1910.54 cv
1064.09 1910.54 1105.99 1892.52 1093.72 1862.43 cv
1093.72 1862.43 1092.19 1853.03 1098.57 1859.79 cv
1127.23 1890.17 1111.28 1960.1 1065.72 1968.12 cv
1080.71 1952.52 1068.07 1931.49 1044.55 1937.12 cv
1018.43 1943.36 1024.13 2003.24 1076.14 1994.59 cv
1128.15 1985.94 1157.61 1937.36 1140.77 1875.31 cv
1127.48 1826.33 1090.59 1801.94 1075.08 1790.15 cv
1075.08 1790.15 1165.55 1780.75 1156.36 1687.44 cv
1154.87 1672.2 1122.81 1622.12 1087.2 1646.76 cv
cp
f
216.374 669.059 mo
209.179 666.703 202.866 661.611 199.14 654.331 cv
191.662 639.7 197.451 621.76 212.097 614.28 cv
218.29 611.113 225.068 610.349 231.393 611.598 cv
229.561 618.63 227.688 625.649 225.847 632.67 cv
222.659 644.737 219.453 656.869 216.374 669.059 cv
cp
.65098 .384314 .129412 rgb
f
173.58 773.083 mo
166.096 758.447 171.892 740.51 186.542 733.034 cv
191.737 730.375 197.352 729.424 202.77 729.918 cv
199.166 749.448 196.458 769.099 195.233 788.872 cv
186.243 787.375 178.05 781.822 173.58 773.083 cv
cp
f
183.994 713.299 mo
176.511 698.667 182.31 680.728 196.948 673.248 cv
203.065 670.12 209.749 669.342 216.007 670.531 cv
211.162 689.731 206.65 709.063 203.018 728.526 cv
195.079 726.462 188.015 721.175 183.994 713.299 cv
cp
f
196.893 849.868 mo
186.337 849.6 176.257 843.718 171.116 833.66 cv
163.635 819.023 169.43 801.084 184.078 793.612 cv
187.632 791.778 191.401 790.757 195.166 790.452 cv
194.502 801.87 194.306 813.303 194.749 824.787 cv
195.069 833.223 195.803 841.589 196.893 849.868 cv
cp
f
214.508 595.791 mo
207.017 581.15 212.817 563.226 227.463 555.734 cv
233.129 552.837 239.299 551.958 245.164 552.792 cv
241.434 572.183 236.68 591.384 231.682 610.503 cv
224.502 608.131 218.222 603.047 214.508 595.791 cv
cp
f
251.987 491.924 mo
240.056 493.223 228.027 487.235 222.245 475.911 cv
214.753 461.273 220.554 443.345 235.187 435.85 cv
236.836 435.007 238.529 434.364 240.237 433.855 cv
241.391 436.258 242.498 438.687 243.441 441.146 cv
249.687 457.362 251.968 474.594 251.987 491.924 cv
cp
f
245.324 551.968 mo
236.914 550.139 229.364 544.692 225.142 536.44 cv
217.665 521.797 223.452 503.866 238.101 496.383 cv
242.555 494.097 247.312 493.069 252.001 493.13 cv
251.942 506.854 250.466 520.619 248.44 533.985 cv
247.534 539.999 246.455 545.994 245.324 551.968 cv
cp
f
184.52 892.584 mo
177.079 878.018 182.797 860.202 197.278 852.646 cv
200.029 871.965 204.893 890.777 211.865 908.768 cv
200.754 909.074 189.916 903.141 184.52 892.584 cv
cp
f
198.56 421.159 mo
193.178 410.626 194.689 398.414 201.4 389.584 cv
217.731 400.706 231.497 416.086 239.978 433.322 cv
239.523 433.585 239.084 433.864 238.612 434.106 cv
223.978 441.594 206.041 435.792 198.56 421.159 cv
cp
f
193.563 487.328 mo
196.626 493.308 203.953 495.681 209.935 492.622 cv
215.913 489.563 218.279 482.244 215.226 476.262 cv
212.164 470.277 204.841 467.914 198.861 470.964 cv
192.878 474.026 190.5 481.354 193.563 487.328 cv
cp
.270588 .160784 .054902 rgb
f
187.051 526.614 mo
190.105 532.593 197.432 534.967 203.414 531.907 cv
209.397 528.841 211.759 521.521 208.7 515.543 cv
205.643 509.552 198.32 507.191 192.34 510.249 cv
186.367 513.305 183.988 520.631 187.051 526.614 cv
cp
f
177.351 562.486 mo
180.407 568.464 187.728 570.835 193.71 567.773 cv
199.693 564.721 202.056 557.393 199.006 551.412 cv
195.947 545.425 188.627 543.066 182.649 546.116 cv
176.663 549.177 174.294 556.505 177.351 562.486 cv
cp
f
167.955 600.362 mo
171.017 606.343 178.343 608.713 184.321 605.654 cv
190.304 602.599 192.671 595.269 189.608 589.282 cv
186.548 583.307 179.225 580.94 173.248 583.992 cv
167.266 587.052 164.894 594.381 167.955 600.362 cv
cp
f
156.301 642.258 mo
159.363 648.241 166.685 650.605 172.67 647.554 cv
178.649 644.494 181.024 637.167 177.955 631.187 cv
174.905 625.202 167.583 622.836 161.602 625.894 cv
155.613 628.953 153.248 636.282 156.301 642.258 cv
cp
f
144.674 685.607 mo
147.721 691.582 155.05 693.953 161.032 690.888 cv
167.021 687.832 169.385 680.508 166.331 674.525 cv
163.271 668.544 155.943 666.172 149.957 669.229 cv
143.983 672.29 141.606 679.622 144.674 685.607 cv
cp
f
137.334 730.328 mo
140.396 736.305 147.725 738.673 153.711 735.617 cv
159.679 732.56 162.055 725.237 159 719.25 cv
155.945 713.273 148.611 710.9 142.628 713.955 cv
136.651 717.019 134.28 724.345 137.334 730.328 cv
cp
f
134.867 773.293 mo
137.917 779.269 145.244 781.644 151.227 778.583 cv
157.209 775.53 159.574 768.2 156.511 762.215 cv
153.463 756.232 146.135 753.867 140.148 756.922 cv
134.173 759.973 131.806 767.305 134.867 773.293 cv
cp
f
139.562 819.053 mo
142.623 825.036 149.947 827.405 155.923 824.343 cv
161.911 821.288 164.282 813.959 161.222 807.975 cv
158.162 801.992 150.841 799.634 144.852 802.69 cv
138.877 805.747 136.503 813.066 139.562 819.053 cv
cp
f
883.314 1119.86 mo
882.134 1121.22 883.35 1123.64 885.247 1123 cv
889.428 1121.56 894.555 1119.75 898.976 1121.01 cv
903.137 1122.2 908.038 1128.47 907.995 1132.78 cv
907.933 1139.76 899.233 1140.93 893.932 1141.95 cv
875.178 1145.56 856.981 1151.28 839.349 1158.69 cv
837.308 1159.54 835.291 1160.45 833.275 1161.32 cv
839.5 1157.96 845.617 1154.37 851.642 1150.58 cv
857.786 1146.7 863.843 1142.63 869.573 1137.9 cv
862.383 1139.79 855.556 1142.4 848.866 1145.29 cv
844.916 1146.99 841.034 1148.82 837.188 1150.72 cv
843.995 1145.15 850.774 1139.56 857.357 1133.68 cv
864.585 1127.3 871.675 1120.74 878.376 1113.64 cv
869.744 1118.21 861.612 1123.48 853.669 1128.99 cv
846.697 1133.77 839.974 1138.89 833.331 1144.09 cv
836.152 1141.29 838.943 1138.47 841.671 1135.56 cv
847.961 1128.93 854.084 1122.1 859.73 1114.74 cv
851.925 1119.76 844.66 1125.35 837.577 1131.18 cv
830.479 1136.96 823.69 1143.09 816.997 1149.33 cv
812.053 1154.08 807.212 1158.95 802.484 1163.93 cv
805.117 1160.1 807.737 1156.29 810.432 1152.55 cv
816.304 1144.45 822.542 1136.72 830.156 1129.81 cv
837.197 1123.4 844.517 1117.27 852.152 1111.52 cv
857.572 1107.45 864.021 1101.13 870.882 1099.63 cv
884.104 1096.74 891.879 1109.83 883.314 1119.86 cv
cp
820.774 1188.1 mo
824.851 1188.05 828.943 1188.04 833.032 1188.07 cv
857.477 1188.11 li
865.675 1188.1 873.872 1188.01 882.222 1187.45 cv
874.253 1184.85 866.082 1183.27 857.871 1182.16 cv
853.14 1181.48 848.376 1181.08 843.608 1180.81 cv
844.571 1180.68 845.532 1180.53 846.501 1180.39 cv
856.052 1178.91 865.623 1177.49 875.161 1175.74 cv
884.715 1174.05 894.26 1172.18 903.787 1169.73 cv
893.961 1169 884.193 1169.21 874.454 1169.79 cv
864.706 1170.33 855.028 1171.44 845.371 1172.8 cv
843.633 1173.07 841.909 1173.41 840.188 1173.7 cv
845.315 1172.14 850.431 1170.54 855.52 1168.78 cv
863.347 1166.12 871.141 1163.29 878.816 1159.82 cv
870.39 1160.19 862.156 1161.43 853.992 1163.01 cv
845.811 1164.53 837.764 1166.59 829.769 1168.85 cv
824.383 1170.47 819.02 1172.21 813.746 1174.18 cv
837.012 1162.79 861.292 1153.14 886.129 1147.39 cv
894.346 1145.54 900.934 1143.31 909.179 1146.26 cv
914.969 1148.34 922.207 1152.55 923.464 1159.18 cv
925.298 1168.66 918.92 1173.74 910.969 1176.95 cv
909.465 1177.54 909.016 1179.66 910.613 1180.48 cv
914.5 1182.51 920.405 1185.54 921.28 1190.38 cv
922.432 1196.91 917.456 1201.99 911.746 1204.19 cv
905.71 1206.51 900.928 1203.47 895.134 1201.96 cv
888.456 1200.22 881.634 1199.04 874.871 1197.7 cv
862.686 1195.28 850.809 1191.58 838.509 1189.79 cv
832.554 1188.93 826.656 1188.42 820.774 1188.1 cv
cp
827.764 1192.33 mo
845.636 1194.04 862.715 1199.32 880.281 1202.66 cv
885.61 1203.65 895.398 1203.95 899.849 1207.31 cv
903.591 1210.15 908.187 1217.68 909.814 1222.09 cv
911.975 1228 911.178 1234.2 907.512 1239.34 cv
900.617 1248.99 889.906 1251.39 879.003 1247.51 cv
877.215 1246.87 876.363 1249.07 876.935 1250.35 cv
881.853 1261.43 873.921 1274.6 861.058 1272.23 cv
854.667 1271.05 847.815 1269.32 842.864 1264.88 cv
837.584 1260.13 834.854 1253.17 831.438 1247.11 cv
827.416 1239.99 823.06 1233.05 818.215 1226.45 cv
810.985 1216.6 802.33 1207.33 792.058 1200.58 cv
793.851 1201.57 795.522 1202.56 796.855 1203.46 cv
802.589 1207.49 808.148 1211.81 813.768 1216.1 cv
830.726 1229 li
836.448 1233.29 842.244 1237.51 848.459 1241.42 cv
844.469 1235.23 839.721 1229.72 834.67 1224.52 cv
830.709 1220.46 826.548 1216.6 822.158 1212.98 cv
822.612 1213.23 823.085 1213.44 823.545 1213.71 cv
845.447 1225.24 li
852.81 1229.05 860.243 1232.76 868.01 1236.09 cv
862.003 1230.13 855.387 1224.95 848.545 1220.14 cv
841.836 1215.37 834.8 1211.12 827.573 1207.16 cv
848.717 1215.44 li
856.599 1218.51 864.529 1221.48 872.764 1224.07 cv
866.013 1218.66 858.735 1214.15 851.249 1210.03 cv
843.779 1205.88 835.995 1202.3 828.044 1199.09 cv
820.024 1196.04 811.822 1193.33 803.286 1191.71 cv
803.041 1191.65 802.708 1191.61 802.419 1191.58 cv
810.78 1191.27 819.194 1191.49 827.764 1192.33 cv
cp
899.533 1057.95 mo
884.12 1050.33 869.226 1056.72 858.296 1068.74 cv
850.996 1076.78 844.555 1085.57 838.669 1094.7 cv
827.996 1111.27 819.073 1128.88 809.109 1145.87 cv
804.158 1154.34 798.972 1162.66 793.206 1170.6 cv
788.696 1176.79 782.415 1187.49 775.145 1190.49 cv
773.736 1191.07 770.354 1190.55 769.411 1191.28 cv
768.207 1192.2 767.241 1194.46 769.533 1194.95 cv
788.606 1199.02 808.052 1216.35 818.381 1232.38 cv
829.828 1250.21 837.668 1271.33 852.876 1286.48 cv
862.93 1296.55 879.839 1309.02 894.519 1300.06 cv
905.193 1293.5 908.225 1281.78 904.586 1270.46 cv
920.521 1269.1 935.398 1261.94 935.068 1243.26 cv
934.9 1234.81 932.129 1227.29 927.521 1221.04 cv
934.402 1221.92 941.533 1223.32 947.881 1220.33 cv
954.122 1217.4 958.557 1212.83 961.394 1206.58 cv
966.016 1196.36 961.611 1186.19 952.763 1180.96 cv
964.412 1172.99 970.103 1159.29 960.264 1146.94 cv
953.968 1139 944.618 1136.26 934.905 1135.91 cv
954.476 1114.34 933.411 1085.01 906.622 1089.9 cv
911.741 1078.95 912.01 1064.09 899.533 1057.95 cv
cp
f
1197.93 1893.29 mo
1191.14 1891.49 1184.97 1884.89 1179.73 1880.6 cv
1172.34 1874.55 1165.3 1868.09 1158.54 1861.4 cv
1151.23 1854.16 1145.31 1846.16 1139.81 1837.82 cv
1137.27 1833.98 1134.82 1830.06 1132.35 1826.11 cv
1136.87 1831.29 1141.49 1836.36 1146.22 1841.32 cv
1152.65 1847.84 1159.16 1854.27 1166.01 1860.34 cv
1172.84 1866.46 1179.86 1872.36 1187.44 1877.7 cv
1182.11 1870.12 1176.29 1863.03 1170.29 1856.14 cv
1167.68 1853.12 1165.01 1850.18 1162.32 1847.26 cv
1168.74 1852.74 1175.24 1858.13 1182 1863.22 cv
1189.69 1869.06 1197.6 1874.67 1206.02 1879.62 cv
1199.63 1872.22 1192.83 1865.37 1185.88 1858.69 cv
1179.55 1852.53 1173.02 1846.66 1166.45 1840.81 cv
1170.22 1842.86 1174.01 1844.85 1177.89 1846.72 cv
1184.46 1849.9 1191.17 1852.8 1198.27 1855 cv
1192.74 1850.03 1186.87 1845.7 1180.89 1841.56 cv
1175.03 1837.51 1169.09 1833.67 1163 1830.04 cv
1164.98 1831 1166.96 1832 1168.95 1832.93 cv
1186.25 1841.09 1204.19 1847.6 1222.78 1852 cv
1228.03 1853.25 1236.66 1854.79 1236.43 1861.77 cv
1236.3 1866.06 1231.12 1872.11 1226.91 1873.13 cv
1222.44 1874.2 1217.4 1872.17 1213.28 1870.54 cv
1211.41 1869.84 1210.11 1872.2 1211.22 1873.61 cv
1219.35 1883.99 1211.02 1896.73 1197.93 1893.29 cv
cp
1169.45 1801.82 mo
1181.82 1800.56 1193.83 1797.36 1206.12 1795.47 cv
1212.93 1794.42 1219.8 1793.54 1226.55 1792.09 cv
1232.39 1790.82 1237.3 1787.99 1243.23 1790.56 cv
1248.85 1793.01 1253.6 1798.3 1252.17 1804.77 cv
1251.09 1809.57 1245.06 1812.36 1241.09 1814.22 cv
1239.46 1814.97 1239.81 1817.09 1241.29 1817.74 cv
1249.1 1821.3 1255.25 1826.66 1253.02 1836.03 cv
1251.47 1842.61 1244.06 1846.5 1238.18 1848.33 cv
1229.83 1850.93 1223.34 1848.42 1215.22 1846.22 cv
1190.64 1839.41 1166.81 1828.74 1144.04 1816.36 cv
1149.22 1818.54 1154.5 1820.52 1159.82 1822.38 cv
1167.7 1824.97 1175.67 1827.37 1183.77 1829.24 cv
1191.86 1831.17 1200.03 1832.75 1208.44 1833.5 cv
1200.91 1829.7 1193.25 1826.53 1185.54 1823.54 cv
1180.53 1821.57 1175.5 1819.75 1170.44 1817.97 cv
1172.15 1818.34 1173.86 1818.75 1175.58 1819.09 cv
1185.17 1820.87 1194.79 1822.38 1204.51 1823.35 cv
1214.21 1824.34 1223.96 1824.97 1233.8 1824.66 cv
1224.39 1821.8 1214.95 1819.53 1205.47 1817.43 cv
1196.01 1815.28 1186.51 1813.44 1177.03 1811.54 cv
1176.07 1811.38 1175.11 1811.19 1174.16 1811.02 cv
1178.93 1810.94 1183.72 1810.75 1188.47 1810.28 cv
1196.71 1809.52 1204.95 1808.29 1213.02 1806.04 cv
1204.71 1805.12 1196.51 1804.67 1188.33 1804.31 cv
1163.9 1803.3 li
1159.82 1803.17 1155.74 1802.97 1151.66 1802.75 cv
1157.56 1802.68 1163.46 1802.43 1169.45 1801.82 cv
cp
1133.46 1798.5 mo
1133.75 1798.46 1134.09 1798.44 1134.35 1798.4 cv
1142.94 1797.14 1151.25 1794.79 1159.39 1792.08 cv
1167.46 1789.21 1175.4 1785.97 1183.04 1782.15 cv
1190.7 1778.35 1198.17 1774.15 1205.14 1769.05 cv
1196.8 1771.27 1188.75 1773.92 1180.75 1776.63 cv
1159.27 1784 li
1166.66 1780.36 1173.88 1776.41 1180.77 1771.93 cv
1187.82 1767.41 1194.65 1762.53 1200.9 1756.84 cv
1193.01 1759.81 1185.42 1763.21 1177.9 1766.7 cv
1155.52 1777.29 li
1155.06 1777.52 1154.57 1777.72 1154.11 1777.95 cv
1158.65 1774.53 1162.96 1770.85 1167.1 1766.95 cv
1172.37 1761.97 1177.35 1756.67 1181.6 1750.67 cv
1175.23 1754.3 1169.25 1758.27 1163.35 1762.31 cv
1145.85 1774.47 li
1140.06 1778.52 1134.33 1782.6 1128.42 1786.38 cv
1127.05 1787.23 1125.33 1788.14 1123.51 1789.05 cv
1134.05 1782.74 1143.09 1773.86 1150.74 1764.33 cv
1155.87 1757.94 1160.52 1751.2 1164.84 1744.25 cv
1168.51 1738.34 1171.54 1731.52 1177.01 1726.98 cv
1182.15 1722.76 1189.07 1721.32 1195.5 1720.41 cv
1208.46 1718.62 1215.83 1732.1 1210.44 1742.96 cv
1209.81 1744.22 1210.56 1746.45 1212.38 1745.9 cv
1223.44 1742.49 1234.03 1745.34 1240.51 1755.28 cv
1243.96 1760.57 1244.48 1766.79 1242.07 1772.6 cv
1240.25 1776.96 1235.34 1784.26 1231.48 1786.94 cv
1226.89 1790.12 1217.09 1789.98 1211.73 1790.76 cv
1194.04 1793.33 1176.76 1797.88 1158.82 1798.83 cv
1150.21 1799.29 1141.81 1799.15 1133.46 1798.5 cv
cp
1233.23 1904.55 mo
1259.78 1910.57 1282.08 1882.16 1263.46 1859.77 cv
1273.17 1859.85 1282.63 1857.51 1289.26 1849.85 cv
1299.61 1837.92 1294.51 1823.99 1283.22 1815.54 cv
1292.29 1810.69 1297.12 1800.71 1292.95 1790.31 cv
1290.38 1783.94 1286.13 1779.17 1280.03 1775.98 cv
1273.82 1772.73 1266.62 1773.83 1259.72 1774.42 cv
1264.59 1768.37 1267.67 1760.96 1268.21 1752.54 cv
1269.33 1733.89 1254.78 1726.11 1238.92 1724.04 cv
1243.04 1712.9 1240.52 1701.07 1230.13 1694.05 cv
1215.84 1684.47 1198.42 1696.21 1187.95 1705.83 cv
1172.1 1720.33 1163.37 1741.09 1151.16 1758.4 cv
1140.16 1773.97 1120 1790.46 1100.76 1793.71 cv
1098.44 1794.11 1099.32 1796.4 1100.48 1797.37 cv
1101.39 1798.14 1104.79 1797.77 1106.17 1798.41 cv
1113.31 1801.73 1119.12 1812.67 1123.36 1819.06 cv
1128.78 1827.24 1133.61 1835.77 1138.2 1844.45 cv
1147.41 1861.86 1155.58 1879.82 1165.53 1896.83 cv
1171.02 1906.2 1177.08 1915.25 1184.04 1923.6 cv
1194.44 1936.08 1209.05 1943.1 1224.77 1936.14 cv
1237.5 1930.55 1237.87 1915.71 1233.23 1904.55 cv
cp
f
330.497 1033.32 mo
290.579 1015.62 259.863 1029.95 227.338 1045.13 cv
210.459 1053 193.066 1061.12 174.6 1063.96 cv
212.8 1130.07 271.962 1175.45 308.236 1165.82 cv
323.392 1161.79 li
311.816 1172.36 li
266.06 1214.14 280.714 1260.38 292.48 1297.52 cv
297.906 1314.65 302.684 1329.72 301.033 1342.13 cv
327.206 1341.25 350.414 1330.24 365.614 1320.87 cv
400.679 1299.22 426.547 1265.21 424.514 1243.44 cv
426.895 1231.96 li
432.124 1242.45 li
436.973 1271.79 482.224 1287.34 522.14 1301.06 cv
545.123 1308.96 565.393 1315.92 577.093 1324.92 cv
587.659 1285.8 585.119 1189.57 517.191 1150.91 cv
508.689 1146.07 li
518.212 1143.83 li
536.078 1139.63 551.973 1133.27 565.458 1124.95 cv
598.611 1104.49 612.274 1075.93 623.246 1052.98 cv
629.172 1040.59 634.055 1030.39 640.791 1024.13 cv
639.114 1023.23 637.458 1022.33 635.814 1021.43 cv
585.652 994.155 549.398 974.434 488 1012.33 cv
484.697 1014.37 481.286 1016.6 477.861 1018.96 cv
470.307 1024.16 li
471.902 1015.13 li
481.849 958.889 448.993 932.983 420.002 910.132 cv
403.956 897.478 388.644 885.404 382.276 869.48 cv
379.006 875.06 374.482 881.702 369.315 889.29 cv
343.8 926.76 305.239 983.398 335.237 1027.64 cv
342.763 1038.75 li
330.497 1033.32 li
cp
387.131 857.952 mo
389.478 876.284 405.831 889.181 424.755 904.094 cv
452.501 925.971 486.702 952.942 480.703 1007.84 cv
481.804 1007.14 482.892 1006.46 483.972 1005.8 cv
549.156 965.557 589.015 987.239 639.486 1014.68 cv
642.853 1016.51 646.287 1018.38 649.787 1020.26 cv
656.108 1023.66 li
649.769 1027.04 li
642.189 1031.01 636.953 1042.13 630.176 1056.29 cv
619.371 1078.89 604.568 1109.84 569.491 1131.49 cv
557.566 1138.85 543.891 1144.74 528.738 1149.04 cv
597.28 1195.18 595.569 1296.78 582.601 1333.06 cv
580.479 1339.02 li
576.171 1334.38 li
567.144 1324.65 544.075 1316.72 519.643 1308.32 cv
484.395 1296.21 445.193 1282.73 430.25 1258.66 cv
423.412 1281.48 400.093 1308.61 369.644 1327.4 cv
352.681 1337.88 326.165 1350.27 296.234 1349.86 cv
291.143 1349.79 li
292.612 1344.9 li
295.956 1333.91 290.949 1318.12 285.158 1299.84 cv
274.081 1264.88 259.149 1217.76 298.53 1174.77 cv
257.793 1175.15 201.733 1128.99 165.061 1062.71 cv
162.207 1057.54 li
168.081 1057.02 li
187.384 1055.29 205.212 1046.97 224.09 1038.17 cv
254.108 1024.16 285.073 1009.71 323.389 1022.34 cv
301.337 975.486 339.53 919.382 362.967 884.963 cv
370.984 873.2 377.899 863.032 379.656 857.316 cv
384.868 840.266 li
387.131 857.952 li
cp
f
436.739 1112.27 mo
430.896 1102.79 418.468 1099.85 408.992 1105.7 cv
399.513 1111.55 396.575 1123.97 402.425 1133.45 cv
408.273 1142.92 420.693 1145.87 430.174 1140.02 cv
439.648 1134.17 442.591 1121.74 436.739 1112.27 cv
cp
.65098 .384314 .129412 rgb
f
565.572 1044.29 mo
555.313 1077.84 535.459 1111.01 501.173 1124.03 cv
489.443 1128.49 478.857 1129.1 466.627 1128.6 cv
466.045 1128.57 462.375 1128.31 458.251 1128 cv
459.933 1118.78 458.381 1108.93 453.064 1100.32 cv
450.076 1095.48 446.21 1091.55 441.808 1088.54 cv
444.277 1085.13 446.374 1081.17 447.003 1080.03 cv
451.841 1071.26 457.165 1064.8 465.659 1059.14 cv
487.34 1044.68 512.397 1037.34 538.467 1039.24 cv
547.656 1040.14 556.677 1041.64 565.572 1044.29 cv
cp
447.173 1031.79 mo
449.13 1045.27 448.325 1059.85 440.439 1071.42 cv
437.678 1075.48 435.181 1079.68 432.812 1083.95 cv
421.94 1080.06 409.473 1080.95 398.876 1087.49 cv
398.18 1087.93 397.54 1088.41 396.87 1088.88 cv
393.415 1084.27 389.519 1080.11 385.747 1075.76 cv
375.896 1064.41 372.449 1046.51 371.233 1031.91 cv
368.924 1004.18 378.254 976.448 394.66 954.236 cv
420.15 973.293 442.467 999.343 447.173 1031.79 cv
cp
389.25 1095.9 mo
381.688 1105.05 378.662 1117.17 381.005 1128.77 cv
380.452 1128.99 379.915 1129.23 379.458 1129.42 cv
373.631 1131.82 367.69 1134.93 361.597 1136.53 cv
348.39 1140.01 331.944 1137.85 318.895 1134.66 cv
291.93 1128.06 268.552 1110.44 252.704 1087.89 cv
279.345 1069.39 311.821 1056.39 344.626 1062.94 cv
361.892 1066.39 371.982 1074.28 382.766 1087.66 cv
383.474 1088.54 386.327 1092.41 389.25 1095.9 cv
cp
370.394 1143.17 mo
374.702 1141.73 379.619 1140.23 384.232 1138.34 cv
384.787 1139.47 385.388 1140.58 386.056 1141.67 cv
392.541 1152.17 403.151 1158.54 414.505 1160.02 cv
414.398 1162.14 414.603 1164.33 414.662 1166.01 cv
415.213 1180.98 413.098 1193.58 406.748 1207.27 cv
393.416 1236.05 367.68 1256.78 337.844 1266.68 cv
328.209 1237.04 324.91 1203.75 338.762 1174.87 cv
345.738 1160.36 354.78 1148.36 370.394 1143.17 cv
cp
433.701 1145.73 mo
421.216 1153.44 404.852 1149.56 397.147 1137.08 cv
389.444 1124.59 393.315 1108.23 405.799 1100.53 cv
418.283 1092.82 434.644 1096.69 442.356 1109.18 cv
450.057 1121.66 446.185 1138.03 433.701 1145.73 cv
cp
425.138 1181.97 mo
424.802 1178.69 425.213 1168.71 424.641 1160 cv
430.017 1159.31 435.321 1157.51 440.238 1154.49 cv
447.72 1149.88 453.079 1143.14 456.094 1135.55 cv
463.475 1139.37 472.352 1143.06 474.685 1144.56 cv
486.741 1152.33 497.559 1162.1 506.034 1173.7 cv
521.913 1195.43 528.463 1222.85 526.786 1249.5 cv
498.441 1247.54 468.927 1239.67 447.585 1219.96 cv
437.128 1210.3 426.606 1196.59 425.138 1181.97 cv
cp
598.053 1022.63 mo
582.861 1016.07 566.106 1013.88 549.654 1014.01 cv
516.301 1014.29 483.164 1026.11 458.948 1049.41 cv
475.781 981.733 398.275 929.89 387.074 914.642 cv
353.018 952.739 342.423 1010.43 363.839 1057.3 cv
303.006 1019.91 238.856 1073.8 211.256 1079.88 cv
236.404 1126.39 289.909 1156.06 342.834 1149.52 cv
301.123 1185.81 299.285 1251.91 314.242 1301.5 cv
378.212 1281.91 408.94 1259.19 421.483 1205.04 cv
435.024 1242.34 481.901 1281.11 553.962 1283.31 cv
569.547 1218.36 530.192 1160.76 481.586 1137.86 cv
539.966 1139.67 585.537 1079.11 602.492 1033.07 cv
605.393 1025.21 605.038 1025.64 598.053 1022.63 cv
cp
.270588 .160784 .054902 rgb
f
479.036 1214.61 mo
455.591 1185.23 li
443.931 1170.47 li
442.598 1168.76 441.279 1167.08 439.964 1165.39 cv
451.716 1203.26 li
426.936 1159.58 li
431.521 1158.72 436.026 1157.08 440.238 1154.49 cv
447.172 1150.22 452.249 1144.12 455.365 1137.2 cv
491.809 1169.49 li
460.562 1152.39 li
462.904 1155.14 li
474.885 1169.77 li
482.79 1179.57 490.601 1189.41 498.359 1199.3 cv
489.185 1190.71 479.971 1182.17 470.696 1173.73 cv
457.726 1162.08 li
457.984 1162.45 458.246 1162.81 458.509 1163.18 cv
471.922 1181.9 li
498.855 1219.31 li
467.46 1185.55 li
454.359 1171.39 li
460.368 1181.99 li
479.036 1214.61 li
cp
f
342.035 1196.51 mo
367.572 1168.91 li
380.404 1155.16 li
381.886 1153.59 383.349 1152.04 384.827 1150.48 cv
349.15 1167.8 li
384.932 1139.62 li
385.299 1140.31 385.645 1141 386.056 1141.67 cv
392.541 1152.17 403.151 1158.54 414.505 1160.02 cv
414.47 1160.76 414.474 1161.51 414.496 1162.25 cv
388.567 1202.35 li
400.777 1168.89 li
398.404 1171.62 li
385.74 1185.67 li
377.245 1194.95 368.694 1204.16 360.075 1213.3 cv
367.202 1202.96 374.242 1192.56 381.206 1182.11 cv
390.767 1167.54 li
390.441 1167.85 390.121 1168.17 389.804 1168.48 cv
373.302 1184.55 li
340.383 1216.81 li
369.028 1180.7 li
381.057 1165.61 li
371.475 1173.15 li
342.035 1196.51 li
cp
f
406.778 1048.35 mo
403.892 1002.35 li
412.492 1047.64 li
416.039 1066.6 li
416.606 1054.42 li
418.172 1016.88 li
422.358 1054.24 li
424.374 1072.93 li
424.592 1075.08 424.812 1077.2 425.026 1079.34 cv
435.243 1041.02 li
433.333 1083.05 li
433.165 1083.35 432.982 1083.64 432.812 1083.95 cv
421.94 1080.06 409.473 1080.95 398.876 1087.49 cv
398.18 1087.93 397.54 1088.41 396.87 1088.88 cv
396.008 1087.72 395.117 1086.6 394.207 1085.5 cv
383.328 1048.26 li
400.663 1079.38 li
400.151 1075.8 li
397.807 1057.04 li
396.323 1044.53 394.958 1032.04 393.665 1019.55 cv
396.848 1031.69 400.107 1043.83 403.456 1055.92 cv
408.228 1072.69 li
408.206 1072.24 408.191 1071.79 408.149 1071.34 cv
406.778 1048.35 li
cp
f
458.804 1122.98 mo
459.214 1115.28 457.428 1107.38 453.064 1100.32 cv
450.289 1095.82 446.727 1092.15 442.71 1089.22 cv
477.971 1062.14 li
455.247 1089.57 li
458.396 1087.79 li
475.032 1078.8 li
486.153 1072.9 497.296 1067.1 508.477 1061.36 cv
498.298 1068.73 488.175 1076.16 478.114 1083.66 cv
464.221 1094.19 li
464.641 1094.01 465.045 1093.82 465.453 1093.64 cv
486.374 1084.02 li
528.215 1064.67 li
489.115 1089.09 li
472.727 1099.26 li
484.278 1095.38 li
519.842 1083.24 li
486.535 1100.68 li
469.838 1109.33 li
467.915 1110.31 466.006 1111.29 464.104 1112.27 cv
503.519 1107.9 li
458.804 1122.98 li
cp
f
368.356 1122.57 mo
350.356 1116.8 li
338.396 1112.87 326.487 1108.84 314.607 1104.75 cv
326.974 1106.98 339.345 1109.15 351.727 1111.2 cv
368.943 1113.93 li
368.525 1113.77 368.105 1113.6 367.689 1113.44 cv
346.257 1105 li
303.328 1088.22 li
348.019 1099.52 li
366.703 1104.29 li
355.902 1098.64 li
322.511 1081.4 li
358.164 1093.35 li
375.973 1099.4 li
378.015 1100.11 380.034 1100.8 382.059 1101.52 cv
351.606 1076.09 li
388.981 1095.57 li
389.072 1095.68 389.162 1095.79 389.25 1095.9 cv
381.688 1105.05 378.662 1117.17 381.005 1128.77 cv
380.452 1128.99 379.915 1129.23 379.458 1129.42 cv
377.561 1130.2 375.647 1131.05 373.72 1131.91 cv
336.301 1126.22 li
371.822 1123.62 li
368.356 1122.57 li
cp
f
261.608 789.673 mo
246.356 828.38 240.842 875.229 249.451 941.887 cv
235.569 913.995 213.985 853.757 216.699 781.598 cv
244.405 758.165 258.215 782.255 261.608 789.673 cv
cp
f
334.373 683.967 mo
321.487 698.315 310.4 711.063 300.259 724.14 cv
258.649 777.76 235.471 833.813 249.437 941.88 cv
225.636 894.048 179.209 751.131 271.618 615.924 cv
320.918 640.232 332.283 675.442 334.373 683.967 cv
cp
365.099 562.41 mo
354.211 560.471 341.039 565.117 329.217 574.963 cv
326.245 571.392 322.222 569.242 317.364 568.681 cv
306.454 567.316 294.262 574.328 287.836 581.931 cv
284.377 586.01 280.983 590.181 277.767 594.346 cv
209.841 681.901 203.861 772.979 210.828 833.995 cv
218.464 900.84 243.847 952.412 253.13 962.686 cv
261.806 972.234 li
259.757 959.458 li
240.943 841.662 263.609 783.893 306.322 728.85 cv
318.489 713.157 332.113 697.913 348.662 679.587 cv
354.808 672.794 359.014 660.74 354.856 652.319 cv
353.971 650.558 352.324 648.105 349.234 646.393 cv
358.601 640.394 370.557 631.439 379.109 620.421 cv
389.988 606.417 392.395 592.336 386.098 579.712 cv
381.288 570.005 374.013 564.026 365.099 562.41 cv
cp
f
253.145 646.522 mo
254.453 644.067 255.773 641.618 257.157 639.16 cv
303.898 670.212 317.17 692.563 320.447 699.701 cv
318.563 701.879 316.716 704.022 314.905 706.163 cv
300.365 681.156 263.639 653.979 253.145 646.522 cv
cp
f
236.325 683.629 mo
237.312 681.001 238.341 678.37 239.418 675.74 cv
277.285 692.593 295.596 715.167 301.105 723.046 cv
300.815 723.413 297.086 728.266 295.538 730.336 cv
281.082 707.052 247.486 689.118 236.325 683.629 cv
cp
f
222.252 733.628 mo
223.922 724.91 225.99 716.101 228.524 707.224 cv
263.977 712.96 289.331 738.911 289.331 738.911 cv
289.336 738.926 li
284.407 745.963 279.824 753.119 275.623 760.498 cv
257.689 735.538 232.045 733.427 222.252 733.628 cv
cp
f
247.731 773.792 mo
259.606 744.745 li
260.679 745.474 261.743 746.255 262.793 747.086 cv
251.03 775.856 li
250.008 775.093 248.908 774.391 247.731 773.792 cv
cp
f
267.882 751.519 mo
268.848 752.455 269.795 753.472 270.747 754.525 cv
257.957 783.235 li
257.174 782.108 256.28 780.934 255.281 779.806 cv
267.882 751.519 li
cp
f
253.812 741.179 mo
243.544 772.201 li
242.324 771.891 241.022 771.695 239.678 771.633 cv
250.33 739.473 li
251.483 739.996 252.644 740.563 253.812 741.179 cv
cp
f
232.991 734.355 mo
225.519 775.425 li
224.094 776.204 222.633 777.128 221.109 778.181 cv
229.17 733.879 li
230.372 733.995 231.655 734.154 232.991 734.355 cv
cp
f
244.116 737.043 mo
234.963 771.921 li
233.595 772.162 232.173 772.539 230.694 773.064 cv
240.443 735.923 li
241.644 736.248 242.874 736.621 244.116 737.043 cv
cp
f
273.779 707.094 mo
265.416 720.991 li
264.335 720.359 263.237 719.731 262.08 719.104 cv
270.726 704.729 li
271.749 705.51 272.769 706.296 273.779 707.094 cv
cp
f
289.416 722.017 mo
290.298 723.052 291.118 724.119 291.94 725.188 cv
285.4 735.286 li
284.535 734.537 283.584 733.716 282.445 732.794 cv
289.416 722.017 li
cp
f
283.614 715.825 mo
275.854 727.751 li
274.861 727.03 273.801 726.299 272.7 725.557 cv
280.791 713.118 li
281.756 714.009 282.688 714.916 283.614 715.825 cv
cp
f
265.279 700.734 mo
255.276 715.675 li
254.104 715.127 252.927 714.597 251.717 714.08 cv
262.119 698.555 li
263.166 699.277 264.22 699.986 265.279 700.734 cv
cp
f
245.742 688.572 mo
236.951 709.045 li
235.698 708.72 234.436 708.419 233.155 708.149 cv
242.349 686.727 li
243.423 687.29 244.556 687.91 245.742 688.572 cv
cp
f
256.902 695.161 mo
246.487 712.002 li
245.264 711.555 244.014 711.133 242.764 710.73 cv
253.631 693.149 li
254.703 693.793 255.785 694.463 256.902 695.161 cv
cp
f
275.253 696.914 mo
290.568 677.17 li
291.499 678.052 292.419 678.953 293.346 679.863 cv
278.264 699.276 li
277.298 698.497 276.274 697.704 275.253 696.914 cv
cp
f
266.969 690.956 mo
283.413 670.583 li
284.374 671.427 285.33 672.284 286.277 673.157 cv
270.152 693.137 li
269.116 692.405 268.046 691.681 266.969 690.956 cv
cp
f
258.841 685.777 mo
276.129 664.299 li
277.103 665.116 278.074 665.94 279.07 666.788 cv
262.125 687.807 li
261.046 687.129 259.974 686.449 258.841 685.777 cv
cp
f
252.98 682.439 mo
268.981 658.457 li
269.956 659.234 270.975 660.061 271.99 660.879 cv
256.333 684.342 li
255.22 683.703 254.13 683.069 252.98 682.439 cv
cp
f
281.702 702.168 mo
296.54 683.05 li
297.443 683.983 298.331 684.932 299.215 685.872 cv
284.581 704.729 li
283.65 703.887 282.711 703.036 281.702 702.168 cv
cp
f
286.972 706.948 mo
301.776 688.687 li
302.65 689.661 303.522 690.639 304.355 691.609 cv
289.731 709.66 li
288.865 708.776 287.935 707.874 286.972 706.948 cv
cp
f
311.177 700.403 mo
311.952 701.516 312.681 702.629 313.38 703.749 cv
299.23 720.495 li
298.522 719.561 297.72 718.54 296.796 717.423 cv
311.177 700.403 li
cp
f
247.334 679.503 mo
264.373 654.851 li
265.342 655.603 266.359 656.4 267.397 657.212 cv
250.779 681.287 li
249.646 680.69 248.515 680.091 247.334 679.503 cv
cp
f
292.039 712.04 mo
306.824 694.644 li
307.651 695.669 308.457 696.701 309.239 697.729 cv
294.645 714.907 li
293.834 713.985 292.981 713.038 292.039 712.04 cv
cp
f
260.213 651.689 mo
244.758 678.241 li
243.613 677.692 242.449 677.147 241.255 676.603 cv
257.108 649.393 li
258.064 650.089 259.105 650.862 260.213 651.689 cv
cp
f
287.828 662.027 mo
306.477 639.744 li
307.433 640.646 308.352 641.537 309.239 642.437 cv
290.741 664.535 li
289.804 663.718 288.823 662.874 287.828 662.027 cv
cp
f
263.729 643.644 mo
279.827 620.285 li
280.977 620.935 282.033 621.602 283.127 622.265 cv
266.881 645.842 li
265.847 645.115 264.794 644.385 263.729 643.644 cv
cp
f
303.456 676.677 mo
321.814 657.5 li
322.563 658.595 323.332 659.7 324.003 660.764 cv
306.076 679.492 li
305.241 678.577 304.365 677.632 303.456 676.677 cv
cp
f
281.8 657.067 mo
299.373 633.566 li
300.374 634.37 301.412 635.181 302.349 635.996 cv
284.788 659.487 li
283.819 658.689 282.82 657.881 281.8 657.067 cv
cp
f
317.016 693.539 mo
332.278 677.298 li
332.86 678.875 333.32 680.255 333.673 681.431 cv
319.057 696.973 li
318.494 695.962 317.828 694.822 317.016 693.539 cv
cp
f
293.181 666.707 mo
311.941 645.224 li
312.838 646.193 313.674 647.153 314.505 648.114 cv
296.016 669.31 li
295.103 668.462 294.153 667.585 293.181 666.707 cv
cp
f
297.96 671.155 mo
317.039 651.064 li
317.884 652.109 318.633 653.126 319.398 654.153 cv
300.702 673.84 li
299.83 672.966 298.902 672.069 297.96 671.155 cv
cp
f
308.237 681.908 mo
325.403 663.093 li
326.116 664.297 326.777 665.46 327.395 666.603 cv
310.715 684.881 li
309.937 683.923 309.122 682.948 308.237 681.908 cv
cp
f
315.167 690.769 mo
314.464 689.773 313.694 688.728 312.852 687.617 cv
329.438 670.623 li
330.075 671.952 330.627 673.202 331.122 674.385 cv
315.167 690.769 li
cp
f
278.187 654.23 mo
277.203 653.464 276.183 652.684 275.139 651.892 cv
291.849 627.905 li
292.894 628.639 293.993 629.37 294.989 630.111 cv
278.187 654.23 li
cp
f
261.554 642.156 mo
260.493 641.434 259.473 640.718 258.382 639.99 cv
273.151 616.738 li
274.322 617.33 275.419 617.938 276.555 618.542 cv
261.554 642.156 li
cp
f
272.582 649.967 mo
271.593 649.226 270.509 648.467 269.473 647.719 cv
285.94 623.979 li
287.019 624.66 288.143 625.343 289.185 626.035 cv
272.582 649.967 li
cp
f
541.354 1348.72 mo
587.463 1387.52 631.513 1430.67 658.8 1484.94 cv
688.837 1544.73 687.896 1607.93 671.345 1671.45 cv
661.739 1708.32 648.779 1744.18 638.525 1780.87 cv
631.022 1807.68 620.566 1841.34 634.502 1867.3 cv
664.509 1923.21 707.472 1910.47 724.631 1900.65 cv
680.171 1950.37 601.43 1915.78 576.072 1863 cv
562.418 1834.53 561.462 1801.76 563.634 1770.82 cv
566.002 1737.16 572.275 1703.85 578.234 1670.67 cv
589.675 1606.92 601.548 1541.58 593.821 1476.66 cv
588.184 1429.55 570.654 1385.43 541.354 1348.72 cv
cp
514.315 1324.86 mo
517.039 1327.63 519.77 1330.38 522.517 1333.15 cv
623.141 1434.86 589.767 1578.83 568.588 1704.32 cv
558.608 1763.54 545.264 1840.14 589.413 1889.36 cv
608.554 1910.69 639.192 1928.41 668.337 1929.04 cv
698.86 1929.72 728.683 1910.58 740.54 1882.36 cv
751.335 1856.6 740.069 1819.65 707.882 1818.21 cv
694.931 1817.62 681.367 1825.18 676.665 1837.58 cv
671.756 1850.51 679.854 1861.24 690.315 1868.07 cv
690.5 1859.04 699.404 1854.56 704.684 1864.3 cv
711.276 1876.47 692.217 1889.63 682.25 1889.58 cv
668.888 1889.5 658.491 1877.65 652.692 1866.75 cv
645.725 1853.69 647.672 1838.21 651.433 1824.51 cv
660.111 1792.94 676.942 1763.94 689.873 1734.05 cv
702.173 1705.59 712.37 1676.14 717.625 1645.55 cv
728.495 1582.12 717.424 1518.06 682.516 1463.6 cv
647.087 1408.33 592.661 1366.18 535.282 1335.57 cv
528.36 1331.86 521.331 1328.38 514.315 1324.86 cv
cp
f
584.761 1633.62 mo
592.123 1635.4 598.818 1639.97 603.118 1646.92 cv
611.749 1660.91 607.412 1679.25 593.419 1687.88 cv
587.499 1691.54 580.811 1692.85 574.397 1692.11 cv
575.672 1684.95 576.959 1677.81 578.24 1670.67 cv
580.443 1658.38 582.656 1646.02 584.761 1633.62 cv
cp
.65098 .384314 .129412 rgb
f
619.065 1526.5 mo
627.696 1540.5 623.353 1558.83 609.364 1567.46 cv
604.391 1570.54 598.873 1571.93 593.432 1571.88 cv
595.457 1552.12 596.57 1532.3 596.204 1512.5 cv
605.291 1513.27 613.91 1518.15 619.065 1526.5 cv
cp
f
613.483 1586.93 mo
622.117 1600.92 617.776 1619.26 603.786 1627.89 cv
597.936 1631.5 591.341 1632.82 585.001 1632.13 cv
588.281 1612.61 591.238 1592.97 593.298 1573.28 cv
601.373 1574.7 608.834 1579.41 613.483 1586.93 cv
cp
f
589.666 1451.83 mo
600.199 1451.25 610.718 1456.31 616.656 1465.92 cv
625.291 1479.91 620.947 1498.26 606.958 1506.89 cv
603.545 1509 599.874 1510.32 596.16 1510.92 cv
595.9 1499.5 595.178 1488.08 593.807 1476.66 cv
592.81 1468.29 591.41 1460 589.666 1451.83 cv
cp
f
592.501 1706.51 mo
601.138 1720.5 596.797 1738.84 582.805 1747.48 cv
577.378 1750.82 571.306 1752.2 565.4 1751.84 cv
567.559 1732.21 570.754 1712.68 574.195 1693.23 cv
581.544 1695.01 588.223 1699.57 592.501 1706.51 cv
cp
f
563.477 1813.05 mo
575.265 1810.79 587.745 1815.81 594.421 1826.62 cv
603.057 1840.61 598.714 1858.95 584.724 1867.59 cv
583.149 1868.56 581.52 1869.34 579.856 1869.99 cv
578.509 1867.7 577.215 1865.36 576.068 1862.99 cv
568.547 1847.31 564.888 1830.32 563.477 1813.05 cv
cp
f
565.305 1752.66 mo
573.835 1753.82 581.794 1758.63 586.664 1766.53 cv
595.3 1780.52 590.956 1798.86 576.975 1807.49 cv
572.708 1810.12 568.043 1811.54 563.37 1811.85 cv
562.335 1798.16 562.687 1784.33 563.635 1770.83 cv
564.063 1764.77 564.657 1758.71 565.305 1752.66 cv
cp
f
598.552 1408.26 mo
607.147 1422.19 602.883 1440.41 589.054 1449.1 cv
584.755 1430.06 578.412 1411.71 570.007 1394.34 cv
581.058 1393.14 592.327 1398.18 598.552 1408.26 cv
cp
f
622.419 1879.3 mo
628.631 1889.37 628.098 1901.66 622.123 1910.99 cv
604.957 1901.24 589.988 1886.99 580.156 1870.5 cv
580.596 1870.2 581.002 1869.89 581.456 1869.61 cv
595.447 1860.97 613.784 1865.32 622.419 1879.3 cv
cp
f
622.08 1812.94 mo
618.552 1807.22 611.06 1805.44 605.346 1808.98 cv
599.628 1812.5 597.852 1820 601.383 1825.71 cv
604.906 1831.43 612.401 1833.2 618.119 1829.67 cv
623.835 1826.15 625.607 1818.65 622.08 1812.94 cv
cp
.270588 .160784 .054902 rgb
f
625.427 1773.26 mo
621.898 1767.54 614.402 1765.77 608.687 1769.3 cv
602.973 1772.83 601.203 1780.33 604.728 1786.03 cv
608.252 1791.75 615.748 1793.53 621.461 1790 cv
627.175 1786.47 628.954 1778.98 625.427 1773.26 cv
cp
f
632.214 1736.72 mo
628.684 1731.01 621.193 1729.24 615.476 1732.76 cv
609.759 1736.29 607.987 1743.78 611.513 1749.5 cv
615.04 1755.22 622.532 1756.99 628.251 1753.47 cv
633.97 1749.94 635.741 1742.44 632.214 1736.72 cv
cp
f
638.535 1698.21 mo
635.006 1692.5 627.517 1690.73 621.8 1694.25 cv
616.082 1697.78 614.31 1705.28 617.833 1710.99 cv
621.367 1716.71 628.861 1718.48 634.574 1714.95 cv
640.293 1711.43 642.058 1703.93 638.535 1698.21 cv
cp
f
646.784 1655.52 mo
643.253 1649.8 635.767 1648.03 630.046 1651.55 cv
624.332 1655.08 622.555 1662.57 626.088 1668.29 cv
629.612 1674.01 637.103 1675.79 642.828 1672.25 cv
648.54 1668.73 650.311 1661.23 646.784 1655.52 cv
cp
f
654.902 1611.39 mo
651.377 1605.67 643.88 1603.9 638.167 1607.42 cv
632.447 1610.95 630.679 1618.44 634.205 1624.17 cv
637.729 1629.88 645.225 1631.65 650.94 1628.12 cv
656.66 1624.59 658.433 1617.1 654.902 1611.39 cv
cp
f
658.616 1566.21 mo
655.094 1560.5 647.595 1558.72 641.88 1562.25 cv
636.162 1565.78 634.393 1573.27 637.919 1578.99 cv
641.445 1584.71 648.942 1586.48 654.658 1582.95 cv
660.368 1579.42 662.15 1571.93 658.616 1566.21 cv
cp
f
657.638 1523.19 mo
654.11 1517.48 646.622 1515.71 640.902 1519.23 cv
635.186 1522.76 633.411 1530.24 636.937 1535.96 cv
640.467 1541.68 647.96 1543.45 653.677 1539.93 cv
659.395 1536.4 661.171 1528.91 657.638 1523.19 cv
cp
f
649.277 1477.95 mo
645.748 1472.24 638.259 1470.46 632.539 1473.99 cv
626.82 1477.52 625.051 1485.01 628.579 1490.72 cv
632.108 1496.44 639.596 1498.21 645.318 1494.69 cv
651.031 1491.16 652.807 1483.67 649.277 1477.95 cv
cp
f
569.319 1488.9 mo
578.758 1558.93 567.866 1597.57 552.236 1653.05 cv
544.276 1681.39 535.241 1713.47 527.267 1755.94 cv
513.531 1829.11 523.696 1890.35 555.833 1928.34 cv
569.609 1944.64 586.813 1955.69 605.744 1960.65 cv
583.718 1963.25 550.896 1963.05 525.851 1945.72 cv
504.171 1930.71 491.891 1905.35 489.357 1870.26 cv
489.156 1867.39 li
486.299 1866.8 li
486.055 1866.77 461.423 1861.28 451.442 1837.15 cv
439.97 1809.42 451.912 1767.09 486.06 1714.79 cv
486.251 1714.42 li
489.224 1708.47 552.71 1580.41 569.319 1488.9 cv
cp
567.324 1432.3 mo
565.112 1462.06 li
558.579 1550.06 482.656 1704.36 479.478 1710.81 cv
443.439 1766.07 431.641 1809.63 444.412 1840.23 cv
453.976 1863.18 474.389 1871.27 481.926 1873.55 cv
485.062 1909.68 498.376 1936.06 521.514 1952.06 cv
565.758 1982.64 629.367 1964.28 632.037 1963.48 cv
659.256 1955.4 li
630.86 1955.94 li
604.488 1956.48 579.895 1944.9 561.714 1923.39 cv
531.06 1887.17 521.526 1828.21 534.834 1757.38 cv
542.745 1715.2 551.698 1683.3 559.636 1655.14 cv
576.731 1594.4 589.087 1550.51 572.735 1461.68 cv
567.324 1432.3 li
cp
f
569.485 1540.54 mo
565.891 1558.72 562.713 1576.94 559.43 1595.2 cv
557.705 1604.31 555.824 1613.4 553.718 1622.49 cv
551.628 1631.52 549.125 1640.53 546.604 1649.45 cv
536.475 1685.17 523.958 1720.08 517.622 1756.19 cv
514.287 1774.25 512.716 1792.35 512.805 1810.76 cv
512.735 1829.1 514.077 1847.42 517.773 1865.28 cv
521.545 1883.08 527.984 1900.39 537.801 1915.84 cv
547.416 1931.43 560.471 1944.79 574.982 1956.28 cv
559.443 1946.18 545.614 1933.2 534.69 1917.91 cv
523.838 1902.57 516.351 1884.88 511.951 1866.6 cv
507.428 1848.31 505.892 1829.48 505.559 1810.81 cv
505.196 1792.19 506.804 1773.22 510.057 1754.84 cv
516.709 1717.88 529.656 1682.85 540.862 1647.71 cv
552.613 1612.73 559.246 1576.23 569.485 1540.54 cv
cp
553.985 1564.28 mo
551.079 1578.73 547.716 1593.04 544.513 1607.41 cv
541.011 1621.7 537.872 1636.1 533.2 1650.26 cv
524.01 1678.49 511.012 1705.04 502.29 1732.73 cv
497.744 1746.55 494.714 1760.58 492.967 1775.05 cv
491.079 1789.45 490.374 1803.99 490.648 1818.52 cv
491.002 1833.05 492.48 1847.58 495.525 1861.83 cv
497.007 1868.96 498.904 1876.01 501.287 1882.92 cv
503.745 1889.81 506.586 1896.56 509.963 1903.12 cv
501.726 1890.86 496.067 1876.96 491.89 1862.73 cv
487.906 1848.42 485.562 1833.63 484.686 1818.78 cv
483.686 1803.93 484.245 1789.01 485.762 1774.2 cv
487.284 1759.42 490.457 1744.57 494.977 1730.41 cv
504.092 1701.97 517.393 1675.62 527.537 1648.29 cv
530.093 1641.44 532.306 1634.57 534.442 1627.52 cv
540.872 1606.44 li
545.309 1592.41 549.393 1578.28 553.985 1564.28 cv
cp
524.352 1638.36 mo
523.48 1642.69 521.863 1646.8 520.447 1650.94 cv
515.9 1663.27 li
506.443 1687.72 li
500.139 1703.99 493.686 1720.18 487.696 1736.51 cv
481.587 1752.79 475.864 1769.2 470.968 1785.81 cv
468.582 1794.13 466.361 1802.51 464.791 1811.01 cv
463.207 1819.49 462.12 1828.13 462.963 1836.87 cv
460.433 1828.4 460.493 1819.32 461.073 1810.53 cv
461.792 1801.69 463.252 1792.94 465.181 1784.34 cv
468.975 1767.08 474.47 1750.33 480.497 1733.84 cv
486.676 1717.39 493.477 1701.21 500.932 1685.36 cv
504.617 1677.41 508.515 1669.57 512.451 1661.75 cv
518.494 1650.09 li
520.459 1646.19 522.715 1642.41 524.352 1638.36 cv
cp
569.319 1488.9 mo
552.71 1580.41 489.224 1708.47 486.251 1714.42 cv
486.06 1714.79 li
451.912 1767.09 439.97 1809.42 451.442 1837.15 cv
461.423 1861.28 486.055 1866.77 486.299 1866.8 cv
489.156 1867.39 li
489.357 1870.26 li
491.891 1905.35 504.171 1930.71 525.851 1945.72 cv
550.896 1963.05 583.718 1963.25 605.744 1960.65 cv
586.813 1955.69 569.609 1944.64 555.833 1928.34 cv
523.696 1890.35 513.531 1829.11 527.267 1755.94 cv
535.241 1713.47 544.276 1681.39 552.236 1653.05 cv
567.866 1597.57 578.758 1558.93 569.319 1488.9 cv
cp
f
246.768 1451.05 mo
244.169 1446.84 238.646 1445.53 234.444 1448.13 cv
230.22 1450.73 228.916 1456.25 231.519 1460.46 cv
234.124 1464.68 239.647 1465.99 243.849 1463.39 cv
248.063 1460.79 249.374 1455.27 246.768 1451.05 cv
cp
.65098 .384314 .129412 rgb
f
214.724 1443 mo
212.124 1438.79 206.598 1437.48 202.389 1440.08 cv
198.171 1442.68 196.869 1448.21 199.47 1452.4 cv
202.077 1456.63 207.588 1457.93 211.802 1455.33 cv
216.016 1452.73 217.329 1447.22 214.724 1443 cv
cp
f
188.614 1427.51 mo
186.02 1423.3 180.489 1422 176.283 1424.6 cv
172.067 1427.19 170.763 1432.71 173.36 1436.93 cv
175.955 1441.14 181.478 1442.45 185.696 1439.85 cv
189.907 1437.25 191.217 1431.73 188.614 1427.51 cv
cp
f
171.069 1411.27 mo
168.468 1407.06 162.945 1405.75 158.732 1408.35 cv
154.517 1410.95 153.214 1416.47 155.813 1420.69 cv
158.41 1424.9 163.933 1426.2 168.143 1423.61 cv
172.356 1421.01 173.667 1415.49 171.069 1411.27 cv
cp
f
156.944 1388.39 mo
154.343 1384.18 148.822 1382.87 144.602 1385.47 cv
140.398 1388.07 139.09 1393.59 141.695 1397.8 cv
144.291 1402.02 149.813 1403.32 154.019 1400.72 cv
158.231 1398.12 159.546 1392.61 156.944 1388.39 cv
cp
f
152.725 1366.93 mo
150.121 1362.71 144.6 1361.41 140.39 1364 cv
136.178 1366.61 134.864 1372.13 137.471 1376.34 cv
140.071 1380.56 145.592 1381.86 149.805 1379.26 cv
154.013 1376.66 155.325 1371.14 152.725 1366.93 cv
cp
f
151.515 1340.6 mo
148.915 1336.38 143.389 1335.07 139.177 1337.67 cv
134.966 1340.27 133.66 1345.79 136.256 1350.01 cv
138.859 1354.21 144.385 1355.53 148.59 1352.93 cv
152.803 1350.32 154.112 1344.81 151.515 1340.6 cv
cp
f
159.945 1312.82 mo
157.351 1308.6 151.821 1307.3 147.611 1309.89 cv
143.402 1312.5 142.09 1318.02 144.699 1322.23 cv
147.296 1326.45 152.817 1327.75 157.033 1325.15 cv
161.24 1322.55 162.555 1317.04 159.945 1312.82 cv
cp
f
179.722 1296.1 mo
177.122 1291.88 171.602 1290.58 167.39 1293.18 cv
163.171 1295.78 161.867 1301.31 164.474 1305.52 cv
167.069 1309.73 172.591 1311.03 176.799 1308.44 cv
181.013 1305.83 182.326 1300.32 179.722 1296.1 cv
cp
f
204.459 1289.87 mo
201.859 1285.65 196.334 1284.34 192.123 1286.94 cv
187.905 1289.54 186.599 1295.06 189.199 1299.27 cv
191.797 1303.49 197.323 1304.8 201.533 1302.19 cv
205.742 1299.59 207.056 1294.08 204.459 1289.87 cv
cp
f
233.065 1294.77 mo
230.467 1290.56 224.938 1289.25 220.728 1291.85 cv
216.514 1294.45 215.211 1299.97 217.804 1304.18 cv
220.413 1308.4 225.935 1309.7 230.136 1307.1 cv
234.361 1304.51 235.663 1298.98 233.065 1294.77 cv
cp
f
249.619 1319.16 mo
247.019 1314.94 241.491 1313.64 237.285 1316.24 cv
233.07 1318.83 231.762 1324.36 234.365 1328.57 cv
236.966 1332.79 242.484 1334.09 246.697 1331.49 cv
250.907 1328.89 252.215 1323.36 249.619 1319.16 cv
cp
f
948.891 1450.32 mo
964.214 1447.52 978.516 1440.94 989.775 1430.4 cv
996.663 1438.37 999.905 1445.07 1001.25 1450.14 cv
984.861 1451.88 968.396 1452.45 951.976 1450.71 cv
950.955 1450.6 949.937 1450.44 948.891 1450.32 cv
cp
1033.43 1445.48 mo
1031.61 1435.25 1025.54 1419.82 1007.08 1405.24 cv
1007.55 1404.04 1008.05 1402.85 1008.5 1401.61 cv
1010.12 1397.05 1011.23 1392.4 1011.88 1387.72 cv
1043.22 1401.62 1050.1 1427.83 1051.37 1442.28 cv
1045.41 1443.37 1039.43 1444.45 1033.43 1445.48 cv
cp
1058.78 1440.89 mo
1058.62 1439.38 1058.37 1437.72 1058.09 1436.02 cv
1079.97 1431.22 li
1080.18 1433.32 1080.29 1435.27 1080.33 1437.01 cv
1073.13 1438.23 1065.95 1439.54 1058.78 1440.89 cv
cp
1009.36 1359.62 mo
1012.72 1360.28 1015.89 1361.05 1018.93 1361.9 cv
1012.57 1379.63 li
1012.54 1379.61 1012.5 1379.6 1012.46 1379.58 cv
1012.54 1372.71 1011.5 1365.95 1009.36 1359.62 cv
cp
1065.87 1392.43 mo
1067.15 1394.21 1068.32 1396 1069.39 1397.81 cv
1048.03 1408.82 li
1047.51 1407.97 1046.95 1407.13 1046.37 1406.28 cv
1065.87 1392.43 li
cp
1058.83 1384.11 mo
1060.53 1385.83 1062.09 1387.6 1063.54 1389.38 cv
1044.11 1403.18 li
1043.28 1402.08 1042.41 1401 1041.48 1399.93 cv
1058.83 1384.11 li
cp
1041.54 1371.04 mo
1043.36 1372.06 1045.11 1373.11 1046.77 1374.21 cv
1032.98 1391.7 li
1031.95 1390.84 1030.92 1389.99 1029.79 1389.17 cv
1041.54 1371.04 li
cp
1032.55 1366.63 mo
1034.48 1367.46 1036.36 1368.32 1038.13 1369.22 cv
1026.61 1387.03 li
1025.45 1386.27 1024.27 1385.54 1023.03 1384.82 cv
1032.55 1366.63 li
cp
1016.08 1381.23 mo
1022.62 1363 li
1024.82 1363.68 1026.95 1364.41 1028.98 1365.19 cv
1019.67 1382.96 li
1018.53 1382.35 1017.3 1381.8 1016.08 1381.23 cv
cp
1056.05 1381.44 mo
1038.91 1397.08 li
1037.96 1396.1 1036.93 1395.15 1035.89 1394.21 cv
1049.92 1376.41 li
1052.12 1378.03 1054.16 1379.7 1056.05 1381.44 cv
cp
1052.43 1417.14 mo
1051.69 1415.49 1050.85 1413.83 1049.95 1412.16 cv
1071.26 1401.16 li
1072.59 1403.69 1073.71 1406.23 1074.7 1408.73 cv
1052.43 1417.14 li
cp
1055.35 1424.81 mo
1054.91 1423.45 1054.44 1422.08 1053.89 1420.7 cv
1076.01 1412.34 li
1076.75 1414.54 1077.37 1416.71 1077.88 1418.81 cv
1055.35 1424.81 li
cp
1056.44 1428.49 mo
1078.71 1422.57 li
1079.04 1424.23 1079.31 1425.83 1079.52 1427.39 cv
1057.35 1432.25 li
1057.1 1431.03 1056.79 1429.77 1056.44 1428.49 cv
cp
715.2 1049.76 mo
684.928 1080.75 738.248 1109.28 745.02 1078.4 cv
734.571 1079.58 735.82 1067.32 744.977 1069.57 cv
775.892 1077.02 777.518 1180.77 671.271 1154.33 cv
657.135 1150.84 631.418 1131.64 600.72 1160.51 cv
600.72 1160.51 625.617 1167.1 621.705 1185.66 cv
607.523 1253.61 667.537 1286.72 673.958 1310.74 cv
673.958 1310.74 703.464 1273.28 691.183 1243.35 cv
691.183 1243.35 693.242 1235.84 694.979 1242.83 cv
706.572 1289.37 746.926 1294.37 742.674 1313.1 cv
742.674 1313.1 780.41 1287.45 762.622 1260.23 cv
762.622 1260.23 759.363 1251.29 766.887 1256.73 cv
800.806 1281.1 798.443 1352.78 755.289 1369.33 cv
767.02 1351.14 750.586 1332.9 728.576 1342.92 cv
704.109 1354.03 721.117 1411.71 770.535 1393.36 cv
793.57 1384.76 810.164 1368.55 818.417 1347.88 cv
819.884 1353.89 821.66 1359.82 823.795 1365.63 cv
842.998 1418.38 891.731 1464.49 945.033 1481.44 cv
987.664 1495.01 1033.27 1491.53 1077.08 1487.5 cv
1119.08 1483.59 1164.62 1476.38 1202.76 1498.84 cv
1230.67 1515.26 1247.79 1544.28 1232.61 1574.7 cv
1225.07 1593.11 1205 1603.2 1185.61 1597.35 cv
1175.64 1594.81 1169.52 1585.27 1171.54 1575.02 cv
1172.32 1569.09 1177.74 1564.92 1183.91 1566.2 cv
1185.87 1568.76 1189.69 1568.22 1188.63 1573.47 cv
1191.84 1576.98 1193.65 1573.47 1194.11 1570.19 cv
1195.39 1561.52 1187.42 1555.6 1179.82 1554.25 cv
1158.49 1550.58 1147.32 1574.47 1149.31 1592.19 cv
1152.62 1622.02 1184.97 1636.46 1211.92 1635.08 cv
1237.91 1633.7 1259.81 1618.65 1273.22 1596.91 cv
1303.99 1547.18 1285.95 1489.18 1239.54 1457.35 cv
1196.43 1427.5 1148.11 1427.22 1099.54 1434.03 cv
1099.29 1432.26 1098.4 1430.5 1096.91 1429.24 cv
1095.99 1428.46 1094.91 1427.96 1093.85 1427.67 cv
1094.22 1427.37 1094.57 1427.06 1094.89 1426.68 cv
1097.61 1423.46 1097.2 1418.58 1093.97 1415.86 cv
1092.39 1414.52 1090.41 1413.95 1088.51 1414.06 cv
1089.58 1413.61 1090.57 1412.93 1091.36 1411.99 cv
1094.11 1408.73 1093.67 1403.89 1090.44 1401.16 cv
1088.92 1399.88 1087.04 1399.3 1085.16 1399.38 cv
1087.54 1396.15 1087.07 1391.59 1083.98 1388.98 cv
1082.35 1387.6 1080.28 1387.01 1078.31 1387.2 cv
1079.63 1384.2 1078.91 1380.52 1076.25 1378.27 cv
1074.22 1376.57 1071.56 1376.08 1069.19 1376.75 cv
1070.07 1373.91 1069.22 1370.69 1066.79 1368.63 cv
1065.03 1367.14 1062.8 1366.63 1060.67 1366.94 cv
1060.65 1364.82 1059.74 1362.69 1057.98 1361.2 cv
1055.72 1359.29 1052.69 1358.95 1050.16 1359.98 cv
1049.97 1358.06 1049.06 1356.18 1047.47 1354.84 cv
1044.91 1352.69 1041.41 1352.5 1038.68 1354.06 cv
1038.39 1352.31 1037.57 1350.66 1036.1 1349.43 cv
1033.32 1347.08 1029.36 1347.05 1026.57 1349.17 cv
1026.1 1348.12 1025.45 1347.11 1024.5 1346.32 cv
1021.63 1343.89 1017.49 1343.96 1014.68 1346.22 cv
1014.25 1344.95 1013.49 1343.75 1012.38 1342.82 cv
1009.12 1340.07 1004.31 1340.47 1001.56 1343.73 cv
1001.41 1343.91 1001.28 1344.11 1001.17 1344.3 cv
997.222 1339.22 992.236 1334.77 986.133 1331.22 cv
971.206 1322.59 951.554 1320.97 937.339 1332.1 cv
921.746 1344.33 916.564 1371.71 936.213 1382.97 cv
962.112 1397.79 975.823 1356.59 954.103 1356.9 cv
951.499 1364.21 962.683 1364.9 956.746 1372.7 cv
952.813 1377.84 945.829 1376.46 941.458 1372.77 cv
930.902 1363.91 939.512 1347.51 949.906 1343.12 cv
958.643 1339.38 969.468 1342.38 976.904 1347.51 cv
993.552 1358.99 994.971 1380.54 986.619 1397.57 cv
967.539 1436.55 915.821 1436.02 883.931 1414.49 cv
853.639 1394.05 832.415 1357.68 824.197 1321.14 cv
825.161 1303.46 821.108 1283.96 811.27 1263.94 cv
788.909 1218.38 748.058 1201.44 730.569 1192.81 cv
730.569 1192.81 817.598 1166.4 790.84 1076.57 cv
786.463 1061.87 745.454 1018.8 715.2 1049.76 cv
cp
.270588 .160784 .054902 rgb
f
1043.51 1432.95 mo
1041.48 1431.24 1038.45 1431.49 1036.75 1433.52 cv
1035.03 1435.55 1035.29 1438.57 1037.32 1440.29 cv
1039.35 1442 1042.37 1441.75 1044.08 1439.71 cv
1045.79 1437.69 1045.54 1434.66 1043.51 1432.95 cv
cp
.65098 .384314 .129412 rgb
f
1039.66 1419.65 mo
1037.63 1417.94 1034.6 1418.19 1032.89 1420.22 cv
1031.18 1422.25 1031.44 1425.28 1033.47 1426.98 cv
1035.49 1428.69 1038.52 1428.44 1040.24 1426.41 cv
1041.94 1424.39 1041.68 1421.36 1039.66 1419.65 cv
cp
f
1031.19 1408.1 mo
1029.16 1406.38 1026.13 1406.65 1024.42 1408.67 cv
1022.72 1410.69 1022.97 1413.72 1024.99 1415.43 cv
1027.02 1417.14 1030.05 1416.89 1031.76 1414.87 cv
1033.47 1412.84 1033.21 1409.8 1031.19 1408.1 cv
cp
f
1020.49 1398.44 mo
1018.46 1396.73 1015.44 1396.99 1013.73 1399.01 cv
1012.01 1401.04 1012.27 1404.07 1014.3 1405.78 cv
1016.32 1407.49 1019.35 1407.23 1021.06 1405.2 cv
1022.78 1403.19 1022.51 1400.15 1020.49 1398.44 cv
cp
f
1148.3 1417.19 mo
1158.71 1416.99 1167.92 1409.13 1168.87 1398.53 cv
1169.81 1387.96 1160.33 1378.48 1147.61 1378.71 cv
1134.97 1378.89 1125.38 1388.88 1127.11 1399.41 cv
1128.8 1409.88 1137.82 1417.34 1148.3 1417.19 cv
cp
f
1192.83 1419.17 mo
1201.96 1421 1211.46 1415.94 1214.43 1406.88 cv
1215.83 1402.34 1215.06 1397.56 1212.39 1393.59 cv
1209.74 1389.62 1205.21 1386.49 1199.7 1385.37 cv
1188.55 1383.11 1178.68 1389.9 1177.76 1399.37 cv
1176.83 1408.85 1183.69 1417.29 1192.83 1419.17 cv
cp
f
1234.02 1431.07 mo
1241.25 1434.69 1250.49 1432.7 1255.24 1425.74 cv
1257.55 1422.22 1258.05 1417.98 1256.73 1413.95 cv
1255.42 1409.92 1252.26 1406.15 1247.77 1403.88 cv
1238.66 1399.28 1228.62 1402.9 1225.75 1410.78 cv
1222.87 1418.71 1226.8 1427.41 1234.02 1431.07 cv
cp
f
1266.13 1451.11 mo
1271.25 1455.95 1279.48 1456.6 1285.13 1451.94 cv
1290.76 1447.31 1290.76 1438 1284.34 1431.92 cv
1277.93 1425.83 1268.65 1426.3 1264.3 1432.17 cv
1259.94 1438.04 1261.02 1446.25 1266.13 1451.11 cv
cp
f
1289.99 1478.03 mo
1293.13 1483.33 1299.84 1485.72 1305.45 1483.06 cv
1311.04 1480.42 1313.05 1472.93 1309.32 1466.62 cv
1305.59 1460.29 1298.03 1458.42 1293.03 1462.08 cv
1288.02 1465.75 1286.88 1472.74 1289.99 1478.03 cv
cp
f
1305.47 1507.55 mo
1307.1 1512.51 1312.21 1515.55 1317.13 1514.24 cv
1322.05 1512.93 1324.8 1507.3 1322.97 1501.75 cv
1321.13 1496.18 1315.5 1493.31 1310.8 1495.23 cv
1306.07 1497.15 1303.84 1502.6 1305.47 1507.55 cv
cp
f
1314.02 1532.78 mo
1314.79 1536.88 1318.49 1539.75 1322.44 1539.16 cv
1326.37 1538.58 1329.02 1534.5 1328.2 1530.09 cv
1327.35 1525.67 1323.4 1522.85 1319.52 1523.75 cv
1315.63 1524.66 1313.23 1528.68 1314.02 1532.78 cv
cp
f
257.964 374.234 mo
250.621 365.364 238.451 364.432 231.775 371.354 cv
225.069 378.295 225.094 389.23 231.099 396.514 cv
237.19 403.804 247.716 405.643 255.878 400.559 cv
264.102 395.452 265.304 383.036 257.964 374.234 cv
cp
f
222.208 342.379 mo
218.06 339.28 213.108 338.095 208.799 338.745 cv
204.463 339.38 200.801 341.821 198.675 345.57 cv
196.544 349.328 196.213 353.623 197.104 357.505 cv
198.01 361.404 200.146 364.918 203.519 367.439 cv
210.151 372.372 219.979 372.037 225.922 365.761 cv
231.843 359.509 230.615 348.666 222.208 342.379 cv
cp
f
178.797 322.112 mo
174.224 320.784 169.604 321.405 166.226 323.375 cv
162.821 325.356 160.691 328.615 160.27 332.4 cv
159.836 336.189 161.05 339.794 163.009 342.641 cv
164.986 345.515 167.724 347.664 171.121 348.643 cv
174.511 349.617 178.043 349.292 181.289 347.914 cv
184.502 346.527 187.422 344.094 189.011 340.618 cv
190.598 337.148 190.471 333.275 188.656 329.827 cv
186.874 326.401 183.372 323.432 178.797 322.112 cv
cp
f
135.322 321.052 mo
131.255 321.709 127.909 323.896 125.999 326.662 cv
124.065 329.451 123.544 332.781 124.549 335.93 cv
126.724 342.208 133.194 345.676 139.131 344.745 cv
142.176 344.258 144.796 342.687 146.812 340.41 cv
148.813 338.129 150.211 335.158 150.209 331.835 cv
150.205 328.537 148.689 325.503 145.967 323.468 cv
143.276 321.43 139.386 320.407 135.322 321.052 cv
cp
f
98.7573 336.41 mo
92.9409 339.792 91.2681 346.658 94.5786 351.194 cv
97.8799 355.745 104.234 356.755 108.998 354.009 cv
113.712 351.216 115.924 345.295 113.691 340.126 cv
111.476 334.972 104.573 332.995 98.7573 336.41 cv
cp
f
72.5293 358.439 mo
68.6465 362.039 68.396 367.715 71.7202 370.901 cv
75.0474 374.112 80.4395 373.905 83.9185 370.676 cv
87.3779 367.441 87.9565 362.124 85.0356 358.55 cv
82.1128 354.973 76.3979 354.826 72.5293 358.439 cv
cp
f
55.9766 378.525 mo
53.356 381.612 53.627 386.01 56.4478 388.245 cv
59.2861 390.493 63.5049 389.88 65.9619 386.978 cv
68.4238 384.076 68.3179 379.822 65.647 377.393 cv
62.9727 374.966 58.5889 375.429 55.9766 378.525 cv
cp
f
243.446 441.143 mo
254.784 470.592 253.096 503.34 248.447 533.979 cv
243.388 567.378 234.438 600.067 225.842 632.658 cv
209.328 695.282 192.252 759.464 194.736 824.788 cv
196.568 872.205 210.497 917.587 236.765 956.519 cv
193.918 914.135 153.468 867.597 130.652 811.341 cv
105.477 749.314 111.52 686.391 133.101 624.407 cv
145.632 588.423 161.448 553.72 174.61 517.99 cv
184.239 491.849 192.275 460.825 185.569 432.13 cv
172.338 375.506 109.808 380.397 97.3989 392.601 cv
145.674 345.083 222.265 386.105 243.446 441.143 cv
cp
156.79 367.895 mo
126.417 364.778 95.1406 381.43 81.0889 408.633 cv
68.2349 433.432 76.5054 471.163 108.452 475.203 cv
121.305 476.826 135.449 470.376 141.138 458.378 cv
147.067 445.9 139.838 434.552 129.988 426.891 cv
129.07 435.876 119.826 439.63 115.361 429.496 cv
109.767 416.82 129.827 405.27 139.733 406.1 cv
153.064 407.25 162.47 419.922 167.393 431.224 cv
173.266 444.787 170.068 460.09 165.244 473.432 cv
156.56 497.256 143.172 519.167 130.476 541.197 cv
130.654 532.496 128.655 523.572 123.857 516.288 cv
114.841 502.55 93.5581 496.75 81.6494 510.328 cv
76.0303 516.733 74.5459 526.047 80.0562 533.041 cv
83.3667 537.213 88.8062 539.922 94.1309 538.33 cv
100 536.616 104.585 529.367 100.244 523.916 cv
94.5107 516.709 85.9033 526.947 92.1436 529.336 cv
93.7354 527.534 90.5981 526.052 93.1812 524.517 cv
94.9009 523.471 96.7466 524.663 97.5791 526.226 cv
99.606 529.958 95.2856 533.672 91.7871 533.777 cv
88.8672 533.839 86.1094 531.731 84.5581 529.426 cv
81.1094 524.242 83.1519 517.92 87.4819 513.979 cv
97.377 504.979 112.116 511.024 118.804 520.799 cv
124.25 528.782 126.4 539.335 125.799 549.349 cv
123.716 553.064 121.658 556.784 119.67 560.519 cv
112.153 574.672 105.167 589.162 99.1318 603.979 cv
98.4546 597.335 96.4419 590.775 92.7334 585.168 cv
83.71 571.459 62.4268 565.657 50.5444 579.24 cv
44.9253 585.648 43.417 594.955 48.9463 601.953 cv
52.2339 606.118 57.6743 608.827 63.0225 607.241 cv
68.8906 605.526 73.479 598.277 69.1235 592.798 cv
63.4009 585.623 54.7744 595.854 61.0376 598.247 cv
62.605 596.439 59.4897 594.967 62.0801 593.404 cv
63.7939 592.381 65.6406 593.573 66.4697 595.141 cv
68.4741 598.867 64.1528 602.577 60.6846 602.662 cv
57.7563 602.75 55.0024 600.643 53.4277 598.333 cv
49.9756 593.147 52.0459 586.835 56.3467 582.885 cv
66.2695 573.894 81.0122 579.937 87.6919 589.733 cv
92.5498 596.857 94.8047 606.018 94.8291 615.053 cv
90.9961 625.342 87.6294 635.841 84.8901 646.497 cv
82.7505 654.905 81.04 663.341 79.6836 671.809 cv
78.2261 668.805 76.3633 665.985 74.1396 663.469 cv
63.3472 651.129 41.4712 648.295 31.542 663.381 cv
26.8555 670.502 26.6553 679.922 33.0786 686.108 cv
36.9248 689.767 42.7051 691.707 47.7651 689.409 cv
53.335 686.901 56.8823 679.067 51.8213 674.264 cv
45.1479 667.941 38.0322 679.258 44.5605 680.763 cv
45.8691 678.764 42.5684 677.732 44.9316 675.836 cv
46.4673 674.588 48.458 675.508 49.4995 676.943 cv
52.0166 680.355 48.252 684.641 44.7998 685.192 cv
41.9277 685.68 38.8979 683.97 37.0557 681.903 cv
32.8882 677.236 34.0674 670.682 37.8237 666.214 cv
46.3882 655.918 61.8101 659.888 69.7983 668.666 cv
73.5132 672.756 76.2612 677.872 78.0933 683.358 cv
75.7153 704.004 75.7534 724.646 78.2764 745.011 cv
77.5195 744.313 76.731 743.634 75.9097 742.998 cv
62.9468 732.912 40.9448 734.319 34.0664 751.018 cv
30.8203 758.898 32.4268 768.191 39.9009 773.01 cv
44.3711 775.896 50.3994 776.713 54.9365 773.49 cv
59.9326 769.966 61.9336 761.604 56.0562 757.839 cv
48.3008 752.896 43.4521 765.356 50.1367 765.588 cv
51.0562 763.392 47.6294 762.997 49.5742 760.692 cv
50.8423 759.171 52.9834 759.69 54.2798 760.907 cv
57.3901 763.797 54.5034 768.704 51.2231 769.915 cv
48.4863 770.922 45.1963 769.845 42.9824 768.149 cv
38.0347 764.377 37.9312 757.69 40.7349 752.584 cv
47.2231 740.881 63.1235 741.829 72.6221 748.914 cv
75.3164 750.955 77.7793 753.434 79.9146 756.188 cv
83.6768 778.347 90.4312 800.047 100.337 820.842 cv
97.9258 819.536 95.354 818.477 92.7075 817.706 cv
76.8833 813.279 57.0371 822.875 56.9814 840.945 cv
56.9443 849.476 61.9248 857.477 70.6553 859.127 cv
75.896 860.112 81.7808 858.555 84.7656 853.877 cv
88.0688 848.739 86.7837 840.242 79.9155 838.965 cv
70.8496 837.31 71.0815 850.691 77.3511 848.379 cv
77.3682 845.987 74.0503 846.934 74.9819 844.047 cv
75.5933 842.163 77.7808 841.845 79.4248 842.473 cv
83.3848 843.976 82.5586 849.612 79.9844 851.95 cv
77.8271 853.945 74.3823 854.164 71.6772 853.435 cv
65.6689 851.796 63.085 845.692 63.7515 839.859 cv
65.3223 826.58 80.4028 821.465 91.8735 824.451 cv
96.7104 825.723 101.36 828.088 105.569 831.189 cv
116.174 851.021 129.173 869.451 143.8 886.581 cv
137.913 884.225 131.568 883.021 125.249 883.521 cv
108.88 884.827 93.5854 900.698 99.7412 917.651 cv
102.661 925.664 110.107 931.453 118.875 929.977 cv
124.132 929.093 129.115 925.619 130.301 920.193 cv
131.618 914.238 127.476 906.698 120.578 907.883 cv
111.528 909.446 116.353 921.934 121.44 917.584 cv
120.652 915.331 117.84 917.38 117.72 914.367 cv
117.639 912.37 119.567 911.317 121.337 911.337 cv
125.599 911.365 126.743 916.941 125.166 920.055 cv
123.793 922.633 120.646 924.053 117.882 924.31 cv
111.658 924.834 107.095 919.995 105.742 914.318 cv
102.625 901.294 115.007 891.277 126.809 890.127 cv
135.217 889.307 144.17 891.635 151.979 895.815 cv
178.325 924.553 209.354 949.363 241.753 970.127 cv
248.36 974.375 255.103 978.403 261.802 982.498 cv
259.312 979.504 256.79 976.526 254.29 973.579 cv
162.162 864.092 206.996 723.268 238.157 599.889 cv
252.881 541.691 272.318 466.378 232.257 413.76 cv
214.911 390.984 185.781 370.856 156.79 367.895 cv
cp
.270588 .160784 .054902 rgb
f
621.956 531.642 mo
630.914 538.684 645.124 535.945 654.397 531.282 cv
665.884 525.509 675.109 521.178 688.27 525.015 cv
692.886 526.36 701.239 531.356 701.836 537.033 cv
702.205 540.522 707.708 540.559 707.338 537.033 cv
706.197 526.191 694.322 521.047 685.116 518.364 cv
678.083 516.313 670.639 518.157 664.031 520.611 cv
658.588 522.634 653.542 525.732 648.181 527.947 cv
644.314 529.424 640.289 530.222 636.118 530.348 cv
623.618 530.33 619.57 525.136 623.944 514.787 cv
623.828 516.947 626.615 518.945 628.596 516.97 cv
629.104 516.465 629.616 515.959 630.122 515.454 cv
630.807 514.773 631.108 513.71 630.829 512.777 cv
628.997 506.616 621.86 505.842 617.371 510.331 cv
610.005 517.697 615.254 526.377 621.956 531.642 cv
cp
f
499.661 709.868 mo
496.624 709.868 494.16 712.33 494.16 715.369 cv
494.16 718.407 496.624 720.87 499.661 720.87 cv
502.699 720.87 505.162 718.407 505.162 715.369 cv
505.162 712.33 502.699 709.868 499.661 709.868 cv
cp
f
520.749 716.743 mo
517.712 716.743 515.249 719.207 515.249 722.245 cv
515.249 725.283 517.712 727.747 520.749 727.747 cv
523.789 727.747 526.251 725.283 526.251 722.245 cv
526.251 719.207 523.789 716.743 520.749 716.743 cv
cp
f
543.671 720.412 mo
540.633 720.412 538.17 722.875 538.17 725.913 cv
538.17 728.952 540.633 731.414 543.671 731.414 cv
546.71 731.414 549.173 728.952 549.173 725.913 cv
549.173 722.875 546.71 720.412 543.671 720.412 cv
cp
f
567.053 722.703 mo
564.014 722.703 561.55 725.166 561.55 728.204 cv
561.55 731.243 564.014 733.705 567.053 733.705 cv
570.09 733.705 572.554 731.243 572.554 728.204 cv
572.554 725.166 570.09 722.703 567.053 722.703 cv
cp
f
590.892 720.87 mo
587.854 720.87 585.392 723.334 585.392 726.371 cv
585.392 729.409 587.854 731.873 590.892 731.873 cv
593.931 731.873 596.394 729.409 596.394 726.371 cv
596.394 723.334 593.931 720.87 590.892 720.87 cv
cp
f
613.358 719.495 mo
610.317 719.495 607.855 721.958 607.855 724.995 cv
607.855 728.035 610.317 730.498 613.358 730.498 cv
616.394 730.498 618.859 728.035 618.859 724.995 cv
618.859 721.958 616.394 719.495 613.358 719.495 cv
cp
f
635.362 716.743 mo
632.322 716.743 629.862 719.207 629.862 722.245 cv
629.862 725.283 632.322 727.747 635.362 727.747 cv
638.398 727.747 640.864 725.283 640.864 722.245 cv
640.864 719.207 638.398 716.743 635.362 716.743 cv
cp
f
655.075 711.701 mo
652.036 711.701 649.573 714.164 649.573 717.202 cv
649.573 720.239 652.036 722.703 655.075 722.703 cv
658.113 722.703 660.576 720.239 660.576 717.202 cv
660.576 714.164 658.113 711.701 655.075 711.701 cv
cp
f
676.163 703.449 mo
673.125 703.449 670.662 705.911 670.662 708.95 cv
670.662 711.987 673.125 714.451 676.163 714.451 cv
679.202 714.451 681.665 711.987 681.665 708.95 cv
681.665 705.911 679.202 703.449 676.163 703.449 cv
cp
f
691.752 696.113 mo
688.711 696.113 686.25 698.577 686.25 701.615 cv
686.25 704.653 688.711 707.116 691.752 707.116 cv
694.787 707.116 697.253 704.653 697.253 701.615 cv
697.253 698.577 694.787 696.113 691.752 696.113 cv
cp
f
813.179 233.866 mo
820.208 271.702 834.559 306.499 853.44 339.881 cv
866.544 363.038 882.625 385.352 894.625 409.381 cv
917.495 440.376 931.709 478.708 936.88 516.311 cv
937.215 518.605 937.551 521.244 937.869 524.284 cv
924.22 474.63 901.339 423.896 862.479 388.818 cv
844.982 373.018 820.39 358.458 795.924 364.582 cv
774.073 370.051 760.21 389.675 750.467 408.633 cv
757.862 384.592 773.977 360.86 800.243 355.919 cv
825.117 351.24 849.162 364.155 867.652 380.026 cv
858.201 366.688 849.043 353.158 841.232 338.735 cv
823.806 306.568 811.619 270.878 813.179 233.866 cv
cp
773.003 334.11 mo
754.577 338.405 739.604 350.974 729.708 370.488 cv
719.148 391.317 719.068 419.14 729.531 441.378 cv
738.167 459.787 752.954 472.2 771.216 476.34 cv
794.969 481.758 813.541 467.515 825.361 456.291 cv
833.927 448.186 li
822.385 450.549 li
797.637 455.54 779.081 441.77 773.494 425.61 cv
768.97 412.583 772.102 394.747 794.26 383.611 cv
808.723 376.341 830.06 381.12 851.353 396.347 cv
884.963 420.439 917.662 471.067 912.088 526.657 cv
912.108 526.685 912.14 526.698 912.156 526.73 cv
912.704 528.043 911.847 534.393 911.283 538.105 cv
915.642 538.992 919.958 540.312 924.144 542.087 cv
931.234 545.085 937.551 549.24 943.074 554.272 cv
949.499 482.241 920.005 401.734 880.518 335.023 cv
864.253 307.593 851.292 277.917 839.668 251.012 cv
829.344 220.094 826.968 191.31 827.82 165.905 cv
828.735 138.932 835.935 120.684 848.81 111.146 cv
859.434 103.246 870.304 102.379 876.848 103.056 cv
890.467 110.31 899.246 128.337 894.3 143.93 cv
891.208 153.676 884.706 162.227 873.394 161.774 cv
861.622 161.299 857.368 149.842 861.343 143.726 cv
868.23 147.083 869.697 140.627 870.006 139.399 cv
871.256 134.478 867.17 130.556 862.4 129.888 cv
846.765 127.703 840.725 167.537 873.911 168.51 cv
889.931 168.979 902.48 153.906 901.995 137.449 cv
901.583 123.633 897.791 111.334 888.697 102.978 cv
881.211 95.1221 867.666 89.8281 857.556 89.7217 cv
822.437 89.2847 791.553 121.161 787.257 162.308 cv
786.911 165.681 li
783.54 197.304 777.389 255.022 822.087 342.158 cv
805.997 333.276 788.928 330.435 773.003 334.11 cv
cp
f
680.15 534.026 mo
670.077 532.078 660.686 536.807 659.179 544.592 cv
657.671 552.373 664.618 560.267 674.691 562.215 cv
684.763 564.166 694.15 559.435 695.657 551.651 cv
697.167 543.869 690.216 535.975 680.15 534.026 cv
cp
f
815.773 710.435 mo
819.917 706.316 826.476 704.921 831.771 707.839 cv
836.426 710.404 840.942 715.247 839.08 721.06 cv
837.366 726.439 826.796 729.133 826.632 721.22 cv
826.544 716.807 833.716 716.41 832.259 720.065 cv
831.465 722.077 834.49 723.592 835.292 721.568 cv
837.88 715.043 830.793 712.371 825.833 715.601 cv
819.297 719.855 825.574 729.634 831.921 729.604 cv
842.776 729.551 845.299 717.393 839.609 709.787 cv
833.237 701.265 820.488 701.003 813.238 708.207 cv
811.686 709.746 814.243 711.96 815.773 710.435 cv
cp
f
793.71 747.489 mo
791.555 747.75 791.803 751.125 793.97 750.858 cv
800.563 750.056 808.743 751.135 812.772 757.17 cv
816.427 762.642 818.899 773.69 811.598 777.655 cv
805.176 781.143 796.547 774.8 800.95 767.651 cv
804.363 762.109 810.974 768.894 807.31 770.527 cv
805.336 771.41 806.43 774.604 808.428 773.718 cv
815.427 770.598 810.833 761.929 804.342 762.034 cv
795.259 762.179 794.371 775.704 800.88 780.063 cv
811.415 787.108 821.385 775.508 819.382 764.867 cv
816.963 752.027 806.255 745.963 793.71 747.489 cv
cp
f
754.075 778.854 mo
751.942 778.398 751.303 781.715 753.433 782.17 cv
758.145 783.179 763.646 785.085 765.314 790.199 cv
766.59 794.116 767.785 800.534 765.505 804.337 cv
762.729 808.962 754.414 811.313 750.239 806.963 cv
748.146 804.773 747.252 801.721 747.977 798.717 cv
748.226 797.249 748.799 795.917 749.696 794.728 cv
753.352 791.433 755.62 792.322 756.487 797.393 cv
755.898 799.489 759.225 800.121 759.802 798.035 cv
762.228 789.345 749.911 786.547 746.172 793.933 cv
742.544 801.08 745.156 811.78 754.5 812.402 cv
764.075 813.04 770.923 806.658 769.958 796.907 cv
768.931 786.619 764.293 781.04 754.075 778.854 cv
cp
f
800.576 322.183 mo
796.869 317.024 794.819 312.294 793.069 308.766 cv
788.704 299.988 784.995 290.869 781.905 281.566 cv
776.414 265.046 774.319 248.133 770.452 231.258 cv
768.328 221.992 761.499 191.459 746.899 194.839 cv
731.018 198.518 733.412 228.161 735.951 239.182 cv
744.096 274.984 773.528 300.4 800.576 322.183 cv
cp
f
749.836 313.45 mo
757.605 316.323 765.674 318.336 773.863 319.543 cv
776.61 319.947 780.867 320.785 784.778 320.595 cv
781.152 318.572 763.643 306.682 761.911 305.231 cv
751.273 296.34 742.9 285.958 735.738 274.147 cv
732.096 268.135 720.999 247.356 711.474 251.841 cv
699.498 257.482 707.628 279.458 712.492 286.924 cv
720.714 299.795 735.881 308.293 749.836 313.45 cv
cp
f
756.589 324.48 mo
754.097 323.756 745.641 321.938 743.518 321.721 cv
737.378 320.973 730.208 320.671 724.199 322.46 cv
720.579 323.475 713.414 326.448 713.25 331.138 cv
713.069 336.146 722.291 334.444 726.092 333.52 cv
724.856 333.872 723.972 334.133 727.234 333.225 cv
728.031 332.988 728.031 332.98 727.688 333.074 cv
733.176 331.387 738.39 328.891 743.923 327.295 cv
745.854 326.703 753.489 325.057 756.589 324.48 cv
cp
f
1187.59 856.038 mo
1162.81 862.743 1134.07 856.423 1122.6 853.295 cv
1131.23 849.465 1139.36 845.375 1146.96 841.108 cv
1148.86 841.648 1151.71 842.377 1155.32 843.08 cv
1166.43 845.243 1184.37 847.12 1200.74 841.908 cv
1196.58 846.673 1192.21 851.367 1187.59 856.038 cv
cp
1165.07 876.776 mo
1133.72 883.334 1100.07 871.277 1087.91 866.189 cv
1098.63 862.939 1108.56 859.302 1117.72 855.403 cv
1120.24 856.208 1126.17 857.945 1134.16 859.502 cv
1147.12 862.026 1165.42 864.042 1182.92 860.603 cv
1177.28 866.074 1171.34 871.458 1165.07 876.776 cv
cp
1145.72 892.212 mo
1142.62 894.53 1139.5 896.75 1136.35 898.953 cv
1098.94 901.992 1059.98 882.568 1047.08 875.447 cv
1059.79 873.479 1071.77 870.821 1082.91 867.692 cv
1087.01 869.557 1101.56 875.83 1120.09 879.44 cv
1132.26 881.809 1146.18 882.976 1159.97 881.046 cv
1155.35 884.827 1150.63 888.552 1145.72 892.212 cv
cp
1104.74 919.192 mo
1045.21 918.302 1007.16 888.762 996.309 879.078 cv
1012.35 879.21 1027.48 878.198 1041.7 876.255 cv
1046.45 879.074 1072.7 894.126 1103.77 900.178 cv
1112.62 901.903 1121.83 902.868 1131.06 902.637 cv
1122.44 908.53 1113.63 914.039 1104.74 919.192 cv
cp
1066.35 938.764 mo
994.116 924.768 954.225 887.539 941.943 874.238 cv
959.207 877.119 975.669 878.672 991.291 879.031 cv
995.83 883.458 1024.54 909.909 1072.79 919.308 cv
1081.01 920.904 1089.79 921.962 1099.09 922.396 cv
1088.32 928.418 1077.38 933.859 1066.35 938.764 cv
cp
1020.65 955.675 mo
936.528 930.688 904.992 879.842 897.003 863.971 cv
909.055 867.49 920.786 870.322 932.161 872.537 cv
933.651 872.827 935.088 873.041 936.587 873.299 cv
944.512 882.62 984.017 924.862 1060.93 941.116 cv
1047.53 946.835 1034.09 951.687 1020.65 955.675 cv
cp
964.021 967.29 mo
892.936 929.737 864.591 869.084 857.261 850.346 cv
869.343 855.109 881.131 859.23 892.645 862.676 cv
898.147 874.725 927.747 929.836 1014.67 957.4 cv
997.576 962.161 980.61 965.496 964.021 967.29 cv
cp
902.969 966.587 mo
847.267 920.602 833.277 857.757 830.232 838.75 cv
837.936 842.316 845.552 845.621 853.019 848.659 cv
858.324 863.254 885.165 927.429 957.951 967.862 cv
938.91 969.526 920.432 969.162 902.969 966.587 cv
cp
893.634 965.043 mo
886.905 963.732 880.308 962.065 874.014 960.119 cv
859.248 955.525 845.441 949.911 832.555 943.442 cv
807.728 904.785 804.315 844.313 803.893 826.161 cv
804.044 826.064 804.194 825.972 804.339 825.873 cv
811.829 829.849 819.262 833.562 826.578 837.041 cv
828.856 852.904 841.245 917.225 896.5 965.53 cv
895.563 965.383 894.593 965.229 893.634 965.043 cv
cp
856.4 993.181 mo
848.321 991.865 843.037 987.234 838.994 980.903 cv
843.129 980.232 847.17 979.492 851.114 978.675 cv
851.101 978.734 851.074 978.788 851.058 978.844 cv
850.26 982.964 852.947 986.953 857.064 987.756 cv
861.184 988.56 865.18 985.869 865.981 981.748 cv
866.426 979.47 865.77 977.245 864.421 975.565 cv
867.326 974.807 870.138 974.007 872.901 973.179 cv
876.34 983.997 868.602 995.168 856.4 993.181 cv
cp
809.142 977.637 mo
810.453 976.73 811.643 975.656 812.739 974.448 cv
812.75 974.458 812.755 974.469 812.766 974.474 cv
819.208 978.036 831.252 976.559 836.577 970.459 cv
837.527 971.643 838.884 972.705 839.832 973.965 cv
830.091 975.629 819.822 976.881 809.142 977.637 cv
cp
827.804 997.91 mo
822.538 1000.85 816.078 998.408 812.062 994.397 cv
809.357 991.697 807.302 987.861 804.89 984.578 cv
807.976 984.397 811.055 984.214 814.077 983.962 cv
813.9 984.397 813.757 984.849 813.663 985.327 cv
812.862 989.446 815.552 993.438 819.673 994.243 cv
823.79 995.046 827.782 992.351 828.585 988.232 cv
828.981 986.191 828.518 984.185 827.451 982.576 cv
829.252 982.354 830.975 982.063 832.754 981.807 cv
833.91 987.368 832.741 995.151 827.804 997.91 cv
cp
788.101 1000.11 mo
777.689 1000.23 770.541 992.546 765.094 984.526 cv
769.162 984.778 773.203 984.973 777.206 985.071 cv
776.763 985.806 776.416 986.614 776.248 987.502 cv
775.441 991.621 778.132 995.613 782.251 996.416 cv
786.369 997.219 790.362 994.524 791.166 990.41 cv
791.532 988.518 791.14 986.667 790.231 985.127 cv
792.63 985.095 794.978 984.985 797.341 984.9 cv
797.057 991.458 795.439 1000.04 788.101 1000.11 cv
cp
752.157 976.81 mo
756.234 974.456 759.872 971.089 762.904 967.735 cv
763.013 967.844 763.121 967.957 763.253 968.053 cv
767.097 970.929 771.71 972.656 776.37 973.19 cv
775.143 974.28 773.95 975.405 772.785 976.572 cv
772.279 977.079 772.086 977.637 772.037 978.193 cv
765.486 977.935 758.851 977.476 752.157 976.81 cv
cp
752.598 997.068 mo
748.458 999.287 743.392 999.602 739.105 997.471 cv
731.578 993.728 729.624 987.31 727.457 980.181 cv
731.331 980.835 735.202 981.448 739.063 981.973 cv
738.03 983.005 737.287 984.341 736.988 985.879 cv
736.182 990 738.875 993.992 742.993 994.792 cv
747.112 995.593 751.107 992.905 751.908 988.787 cv
752.284 986.846 751.859 984.944 750.908 983.381 cv
753.739 983.669 756.527 983.862 759.337 984.082 cv
758.531 989.097 757.55 994.397 752.598 997.068 cv
cp
711.265 970.137 mo
714.81 970.38 718.445 970.073 722.029 969.404 cv
722.112 970.127 722.499 970.814 723.369 971.265 cv
724.421 971.803 725.356 972.485 726.26 973.214 cv
721.271 972.316 716.27 971.284 711.265 970.137 cv
cp
698.782 989.644 mo
693.101 985.107 689.353 978.617 689.993 971.44 cv
693.645 972.532 697.298 973.57 700.958 974.523 cv
699.913 975.557 699.158 976.903 698.855 978.455 cv
698.054 982.573 700.744 986.56 704.863 987.366 cv
708.981 988.169 712.973 985.476 713.779 981.362 cv
714.039 980.024 713.894 978.713 713.491 977.505 cv
715.785 978.004 718.076 978.481 720.365 978.926 cv
720.948 979.041 721.528 979.126 722.106 979.233 cv
720.678 990.85 708.541 997.437 698.782 989.644 cv
cp
675.791 959.743 mo
676.576 959.001 677.258 958.148 677.843 957.222 cv
682.253 958.745 686.234 961.212 690.898 961.902 cv
692.751 962.177 694.61 962.179 696.463 962.036 cv
696.012 962.937 696.092 964.025 697.14 964.875 cv
698.696 966.135 700.35 967.096 702.056 967.876 cv
693.28 965.583 684.509 962.886 675.791 959.743 cv
cp
655.399 979.492 mo
647.919 973.035 647.407 964.691 648.722 955.83 cv
652.573 957.626 656.442 959.338 660.339 960.951 cv
657.967 961.857 656.092 963.906 655.571 966.581 cv
654.766 970.7 657.46 974.693 661.577 975.493 cv
665.693 976.297 669.69 973.606 670.491 969.487 cv
670.819 967.797 670.536 966.135 669.824 964.701 cv
674.915 966.605 680.018 968.359 685.135 969.972 cv
683.441 983.618 664.814 987.61 655.399 979.492 cv
cp
618.534 958.447 mo
611.511 951.479 611.815 944.429 613.064 936.016 cv
616.529 938.28 620.015 940.486 623.535 942.572 cv
621.134 943.463 619.232 945.524 618.708 948.215 cv
617.908 952.34 620.599 956.328 624.721 957.132 cv
628.835 957.932 632.83 955.243 633.63 951.125 cv
633.816 950.156 633.8 949.202 633.628 948.29 cv
636.682 949.933 639.752 951.492 642.837 953.009 cv
638.376 963.721 627.643 967.495 618.534 958.447 cv
cp
579.259 931.042 mo
576.317 926.691 573.809 921.528 575.346 916.098 cv
576.06 913.569 576.986 911.128 577.816 908.652 cv
581.392 911.929 585.018 915.09 588.699 918.12 cv
585.886 918.788 583.568 921.029 582.978 924.053 cv
582.178 928.171 584.871 932.167 588.988 932.966 cv
593.107 933.767 597.097 931.078 597.898 926.958 cv
597.996 926.46 598.038 925.969 598.038 925.477 cv
601.536 928.111 605.078 930.63 608.652 933.063 cv
601.044 944.463 586.683 942.046 579.259 931.042 cv
cp
548.92 897.726 mo
547.575 893.691 546.995 889.253 548.236 885.089 cv
548.487 884.24 549.49 881.589 550.505 879.713 cv
552.635 882.318 554.785 884.891 556.98 887.384 cv
554.516 888.246 552.555 890.327 552.018 893.075 cv
551.217 897.195 553.909 901.184 558.026 901.986 cv
561.576 902.68 565.019 900.767 566.421 897.591 cv
568.797 900.042 571.218 902.405 573.655 904.731 cv
565.204 911.421 552.684 909.003 548.92 897.726 cv
cp
514.586 861.917 mo
512.952 855.564 514.121 850.101 518.241 845.162 cv
518.921 844.348 521.467 841.853 522.8 840.071 cv
525.273 844.13 527.862 848.196 530.539 852.269 cv
530.732 852.582 530.94 852.891 531.145 853.201 cv
531.313 853.455 531.474 853.71 531.643 853.965 cv
528.016 853.889 524.743 856.41 524.027 860.089 cv
523.228 864.21 525.915 868.202 530.034 869.004 cv
533.755 869.729 537.342 867.593 538.606 864.143 cv
541.582 868.327 544.628 872.381 547.742 876.311 cv
535.369 884.214 518.335 876.452 514.586 861.917 cv
cp
494.45 826.08 mo
491.828 815.818 493.018 806.424 501.702 800.142 cv
503.918 805.067 506.268 810.015 508.787 814.973 cv
508.77 814.968 508.751 814.958 508.73 814.954 cv
504.612 814.153 500.623 816.845 499.816 820.961 cv
499.016 825.081 501.705 829.072 505.827 829.875 cv
509.428 830.576 512.922 828.611 514.287 825.354 cv
516.167 828.788 518.151 832.23 520.185 835.67 cv
509.498 843.247 497.929 839.662 494.45 826.08 cv
cp
473.954 778.49 mo
473.93 771.766 478.281 759.778 486.012 757.894 cv
487.562 763.163 489.263 768.455 491.14 773.784 cv
490.815 773.667 490.484 773.546 490.133 773.478 cv
486.017 772.676 482.024 775.365 481.223 779.487 cv
480.419 783.606 483.111 787.598 487.231 788.398 cv
490.491 789.033 493.638 787.462 495.224 784.75 cv
496.778 788.713 498.451 792.693 500.192 796.679 cv
487.903 799.422 474.016 792.852 473.954 778.49 cv
cp
459.426 735.495 mo
459.628 725.032 466.234 716.295 476.627 715.014 cv
477.228 719.204 477.897 723.42 478.695 727.667 cv
478.107 727.38 477.486 727.136 476.818 727.007 cv
472.7 726.204 468.707 728.896 467.904 733.013 cv
467.104 737.134 469.795 741.125 473.914 741.929 cv
476.707 742.473 479.413 741.387 481.134 739.36 cv
482.203 744.037 483.43 748.748 484.755 753.479 cv
472.645 754.116 459.145 750.212 459.426 735.495 cv
cp
456.99 684.395 mo
458.345 679.642 460.77 674.996 465.221 672.449 cv
466.214 671.875 470.784 669.039 473.788 668.336 cv
473.685 672.927 473.669 677.563 473.801 682.253 cv
473.006 681.736 472.106 681.353 471.121 681.161 cv
467.004 680.359 463.013 683.049 462.209 687.168 cv
461.409 691.287 464.098 695.278 468.216 696.079 cv
470.497 696.526 472.712 695.869 474.399 694.529 cv
474.77 699.796 475.301 705.125 475.99 710.5 cv
463.505 707.636 452.921 698.606 456.99 684.395 cv
cp
456.788 643.729 mo
456.864 632.87 467.773 625.927 477.471 629.689 cv
476.999 632.541 476.5 635.376 476.116 638.28 cv
475.195 637.555 474.118 637.008 472.884 636.766 cv
468.767 635.964 464.774 638.653 463.972 642.773 cv
463.171 646.891 465.863 650.885 469.98 651.687 cv
471.645 652.013 473.281 651.743 474.702 651.056 cv
474.352 655.155 474.111 659.31 473.949 663.499 cv
465.17 660.825 456.726 653.511 456.788 643.729 cv
cp
466.713 602.464 mo
469.089 593.261 477.782 586.644 486.901 591.131 cv
485.827 594.401 484.788 597.704 483.826 601.076 cv
482.747 599.785 481.264 598.822 479.478 598.475 cv
475.364 597.673 471.37 600.364 470.57 604.482 cv
469.766 608.601 472.457 612.593 476.575 613.396 cv
478.022 613.677 479.443 613.506 480.728 613.018 cv
479.805 616.951 478.982 620.953 478.232 625.01 cv
470.419 619.951 464.092 612.621 466.713 602.464 cv
cp
482.373 557.995 mo
483.837 553.496 486.157 548.219 490.465 545.731 cv
494.984 543.127 502.844 542.521 506.328 547.253 cv
504.583 550.302 502.878 553.403 501.233 556.609 cv
500.222 555.652 498.949 554.946 497.477 554.661 cv
493.359 553.859 489.368 556.548 488.569 560.67 cv
487.764 564.785 490.452 568.779 494.573 569.581 cv
494.743 569.614 494.913 569.607 495.087 569.626 cv
492.582 575.358 490.277 581.317 488.157 587.458 cv
479.785 581.102 479.371 567.192 482.373 557.995 cv
cp
514.239 547.053 mo
554.986 479.17 622.62 471.846 668.172 486.195 cv
716.042 501.282 746.185 540.242 743.178 583.143 cv
739.714 632.554 708.262 657.235 682.49 669.243 cv
646.204 686.141 608.32 684.626 604.128 681.576 cv
600.152 687.04 li
608.201 692.891 649.689 691.97 685.337 675.362 cv
685.366 675.35 685.391 675.337 685.419 675.325 cv
687.536 679.42 689.946 683.054 692.488 686.311 cv
659.99 703.062 625.607 710.06 594.062 711.602 cv
586.108 710.72 580.604 703.645 581.837 695.394 cv
582.425 691.443 585.643 686.507 590.427 688.643 cv
594.312 690.378 593.002 695.973 590.352 695.633 cv
590.087 694.252 589.187 693.637 587.317 694.33 cv
586.367 694.682 585.936 695.844 586.71 696.628 cv
587.049 696.972 587.4 697.228 587.753 697.477 cv
587.951 698.172 588.672 698.445 589.326 698.305 cv
592.071 699.177 594.758 697.462 595.644 693.962 cv
597.055 688.384 590.95 684.562 586.111 685.543 cv
579.28 686.929 578.335 696.954 579.431 702.203 cv
580.333 706.516 583.04 709.78 586.514 711.867 cv
575.758 712.106 565.4 711.741 555.62 710.939 cv
548.52 707.69 546.369 696.431 549.444 689.932 cv
550.758 687.154 554.419 685.635 557.285 685.531 cv
560.648 685.408 562.019 688.904 561.543 691.68 cv
560.997 693.422 559.939 694.504 558.366 694.928 cv
557.646 695.167 557.183 695.221 556.882 695.151 cv
556.922 695.022 556.968 694.895 556.968 694.737 cv
556.968 693.363 li
556.968 691.936 555.142 691.563 554.405 692.668 cv
550.847 697.984 558.685 698.315 561.814 696.206 cv
567.224 692.561 564.006 684.395 558.672 682.938 cv
552.506 681.256 546.337 687.391 545.592 693.041 cv
544.818 698.898 546.256 706.016 550.42 710.463 cv
541.06 709.534 532.301 708.232 524.316 706.708 cv
519.329 702.107 515.685 693.069 519.195 687.009 cv
520.387 684.951 522.756 683.682 525.071 683.493 cv
527.424 683.298 531.013 686.831 529.915 689.361 cv
529.612 690.061 527.884 691.029 526.616 691.212 cv
526.592 691.088 526.582 690.963 526.521 690.835 cv
525.924 689.57 525.972 689.625 524.932 688.722 cv
524.199 688.088 522.868 688.25 522.634 689.33 cv
521.71 693.567 525.784 694.753 529.138 693.428 cv
534.755 691.212 532.927 685.492 529.412 682.292 cv
523.987 677.354 516.632 683.975 515.298 689.33 cv
513.956 694.709 516.305 701.135 519.909 705.841 cv
510.993 703.988 503.21 701.895 496.776 699.817 cv
496.24 699.399 495.694 698.966 495.213 698.483 cv
492.769 696.025 492.257 691.815 492.209 688.55 cv
492.152 684.666 493.639 681.206 496.808 678.88 cv
499.421 676.964 502.97 677.477 504.153 680.894 cv
504.436 681.798 504.561 682.726 504.533 683.678 cv
502.826 686.482 501.636 687.438 500.951 686.589 cv
501.013 686.427 501.046 686.242 501.037 686.028 cv
500.974 684.841 500.935 684.514 500.391 683.499 cv
499.911 682.606 498.494 682.601 498.016 683.499 cv
495.119 688.934 502.51 691.206 505.953 687.61 cv
510.347 683.019 505.343 675.247 499.947 674.978 cv
493.042 674.636 489.665 683.016 489.459 688.55 cv
489.335 691.843 490.176 695.156 491.666 698.076 cv
487.124 696.426 483.582 694.846 481.091 693.455 cv
477.104 635.525 491.775 584.479 514.239 547.053 cv
cp
705.463 699.255 mo
643.404 751.044 521.189 740.065 484.43 721.206 cv
483.218 714.026 482.298 706.93 481.654 699.928 cv
497.342 707.308 534.689 717.775 579.832 717.775 cv
615.99 717.775 657.132 711.021 696.117 690.621 cv
699.214 694.011 702.4 696.867 705.463 699.255 cv
cp
711.16 718.109 mo
711.07 717.412 710.98 716.72 710.922 716.047 cv
710.544 711.849 710.303 707.662 710.547 703.449 cv
710.56 703.202 710.506 703.002 710.427 702.826 cv
713.372 704.775 716.046 706.266 718.171 707.332 cv
715.565 710.734 713.247 714.347 711.16 718.109 cv
cp
771.745 682.399 mo
774.747 681.902 777.837 681.55 781.018 681.351 cv
782.195 695.445 781.987 723.972 764.116 741.195 cv
751.417 753.418 731.97 757.836 706.329 754.386 cv
706.913 749.604 707.85 744.986 709.078 740.526 cv
774.377 756.919 772.704 694.709 771.745 682.399 cv
cp
788.196 729.575 mo
792.311 730.38 796.307 727.687 797.102 723.569 cv
797.912 719.451 795.216 715.459 791.096 714.654 cv
790.454 714.529 789.818 714.519 789.199 714.556 cv
789.823 711.724 790.326 708.911 790.685 706.129 cv
794.836 707.943 799.502 709.191 803.942 709.099 cv
803.877 709.717 804.092 710.375 804.728 710.796 cv
813.165 716.377 816.199 730.579 808.635 738.185 cv
800.811 746.051 789.073 741.492 781.38 735.768 cv
781.321 735.708 781.254 735.675 781.193 735.631 cv
782.632 733.162 783.84 730.61 784.929 728.035 cv
785.856 728.774 786.946 729.335 788.196 729.575 cv
cp
794.663 683.087 mo
793.511 682.862 792.38 682.939 791.311 683.214 cv
791.268 682.536 791.226 681.843 791.174 681.191 cv
798.29 681.415 805.796 682.272 813.735 683.81 cv
816.749 688.805 817.604 695.398 814.246 700.453 cv
809.059 708.248 798.625 706.125 791.088 702.595 cv
791.242 701.012 791.354 699.448 791.432 697.91 cv
791.545 697.937 791.648 697.986 791.76 698.008 cv
795.878 698.813 799.874 696.121 800.67 692.001 cv
801.476 687.882 798.784 683.888 794.663 683.087 cv
cp
770.601 748.976 mo
770.775 748.809 770.965 748.657 771.14 748.491 cv
774.302 745.443 776.959 742.118 779.255 738.647 cv
782.524 744.312 788.018 750.231 787.87 757.046 cv
787.728 763.717 784.131 770.112 778.242 773.472 cv
765.427 780.766 756.554 773.149 749.752 763.118 cv
749.647 762.576 749.519 762.067 749.396 761.549 cv
752.925 760.346 756.251 758.876 759.375 757.14 cv
759.999 760.014 762.268 762.38 765.334 762.981 cv
769.462 763.784 773.452 761.091 774.253 756.973 cv
774.888 753.712 773.311 750.559 770.601 748.976 cv
cp
724.249 775.198 mo
728.364 775.997 732.359 773.309 733.161 769.187 cv
733.438 767.773 733.27 766.383 732.808 765.123 cv
737.259 764.651 741.479 763.859 745.46 762.757 cv
745.812 763.321 746.156 763.879 746.514 764.456 cv
747.975 776.195 740.934 795.968 725.849 787.461 cv
717.333 782.66 711.656 774.318 709.343 764.956 cv
712.46 765.281 715.492 765.497 718.45 765.598 cv
718.374 765.825 718.284 766.042 718.241 766.283 cv
717.434 770.399 720.129 774.392 724.249 775.198 cv
cp
786.648 913.956 mo
776.891 887.239 778.163 852.929 779.258 838.584 cv
786.881 835.708 793.976 832.269 800.554 828.245 cv
801.2 847.995 804.984 902.478 826.777 940.423 cv
812.097 932.575 798.697 923.631 786.648 913.956 cv
cp
803.745 974.387 mo
799.3 975.892 792.866 973.792 788.321 971.681 cv
792.855 969.836 796.71 966.475 798.938 961.42 cv
802.773 964.797 807.936 965.959 813.046 965.394 cv
810.493 968.988 807.85 972.996 803.745 974.387 cv
cp
781.619 975.85 mo
782.036 975.53 782.371 975.142 782.611 974.719 cv
782.82 974.968 783.075 975.205 783.428 975.39 cv
785.559 976.52 787.945 977.585 790.438 978.428 cv
786.581 978.486 782.683 978.473 778.75 978.396 cv
779.669 977.498 780.609 976.624 781.619 975.85 cv
cp
775.253 952.649 mo
779.521 955.799 787.154 957.397 790.309 957.395 cv
791.861 957.395 793.406 957.222 794.918 956.922 cv
794.779 957.136 794.629 957.335 794.54 957.614 cv
790.541 970.49 775.004 970.015 766.03 963.305 cv
765.693 963.052 765.356 962.901 765.032 962.83 cv
769.7 960.83 773.408 957.186 775.253 952.649 cv
cp
756.871 959.382 mo
750.451 960.151 744.579 955.518 738.645 953.38 cv
740.413 952.849 742.221 952.175 744.131 951.201 cv
748.12 949.165 754.784 945.049 756.793 940.133 cv
760.787 943.617 764.094 945.867 771.015 945.812 cv
771.041 945.812 771.064 945.806 771.091 945.806 cv
771.089 945.867 771.061 945.907 771.061 945.968 cv
771.167 953.908 764.114 958.511 756.871 959.382 cv
cp
703.378 960.828 mo
709.359 959.21 714.286 955.362 716.159 949.76 cv
722.275 953.206 727.731 954.977 733.573 954.453 cv
733.53 954.675 733.455 954.875 733.468 955.134 cv
733.758 961.107 725.687 962.951 721.123 964.009 cv
714.737 965.488 706.929 965.408 701.46 961.273 cv
702.1 961.131 702.744 961.001 703.378 960.828 cv
cp
698.525 939.909 mo
703.131 941.874 707.283 944.303 711.724 945.022 cv
711.6 945.31 711.489 945.608 711.463 945.968 cv
710.932 953.398 702.507 955.984 696.249 956.583 cv
691.344 957.051 687.186 955.085 682.887 953.289 cv
689.775 951.55 694.73 945.726 698.525 939.909 cv
cp
662.843 940.773 mo
669.634 938.784 674.141 934.779 676.228 928.972 cv
680.658 934.564 685.901 938.184 693.649 937.334 cv
691.199 941.068 688.652 944.128 684.645 946.608 cv
676.326 951.756 669.053 945.952 662.843 940.773 cv
cp
626.303 918.792 mo
630.21 922.847 634.579 927.453 640.069 928.091 cv
638.286 930.917 633.432 936.012 629.206 938.092 cv
624.743 935.497 620.321 932.76 615.946 929.875 cv
620.801 927.72 624.076 923.729 626.303 918.792 cv
cp
582.906 887.674 mo
585.833 894.07 590.371 900.039 597.117 902.021 cv
598.287 902.365 599.441 902.456 600.569 902.371 cv
598.965 905.447 596.031 910.914 592.372 912.388 cv
586.471 907.49 580.7 902.282 575.088 896.732 cv
578.57 895.461 581.311 891.731 582.906 887.674 cv
cp
559.822 877.377 mo
564.814 875.71 567.676 871.688 568.323 866.915 cv
569.492 869.027 569.997 871.963 571.58 873.755 cv
573.591 876.033 576.104 878.197 578.995 879.333 cv
578.995 879.393 578.968 879.431 578.975 879.492 cv
579.116 882.161 575.708 891.781 571.734 893.347 cv
566.966 888.463 562.314 883.33 557.799 877.944 cv
558.631 877.744 559.343 877.537 559.822 877.377 cv
cp
545.998 859.607 mo
549.689 857.456 551.977 853.169 553.669 848.706 cv
555.473 854.198 558.516 860.198 563.212 862.246 cv
563.039 862.687 562.939 863.165 563.024 863.718 cv
563.528 867.029 562.099 870.571 558.935 871.859 cv
557.623 872.393 556.227 872.727 554.838 872.996 cv
554.758 873.01 554.438 873.159 554.029 873.35 cv
550.678 869.175 547.406 864.855 544.217 860.381 cv
544.805 860.193 545.401 859.956 545.998 859.607 cv
cp
538.111 834.529 mo
540.228 839.219 544.526 842.162 549.963 842.258 cv
548.867 845.436 547.659 848.568 545.981 851.504 cv
545.135 852.99 543.489 855.69 541.432 855.337 cv
541.13 855.285 540.821 855.154 540.513 855.02 cv
538.345 851.857 536.214 848.694 534.179 845.538 cv
536.177 841.902 537.515 838.292 538.111 834.529 cv
cp
510.983 787.219 mo
513.928 791.942 517.621 797.156 522.45 798.003 cv
522.023 799.814 522.023 801.798 521.701 803.558 cv
521.492 804.7 521.185 806.174 520.162 806.883 cv
517.846 808.49 514.429 806.398 513.037 804.523 cv
512.395 803.653 511.495 803.317 510.62 803.346 cv
509.546 801.077 508.538 798.816 507.527 796.557 cv
509.614 794.689 510.557 790.885 510.983 787.219 cv
cp
505.799 781.379 mo
505.746 783.286 505.635 785.193 505.366 787.075 cv
505.217 788.125 504.972 789.155 504.7 790.176 cv
503.216 786.667 501.802 783.168 500.466 779.68 cv
501.986 780.593 503.754 781.199 505.799 781.379 cv
cp
493.876 758.933 mo
493.856 758.999 493.813 759.037 493.799 759.106 cv
493.743 759.367 493.708 759.64 493.661 759.906 cv
493.545 759.527 493.413 759.148 493.297 758.772 cv
493.493 758.827 493.675 758.879 493.876 758.933 cv
cp
497.146 739.669 mo
495.241 743.672 493.328 747.711 491.243 751.628 cv
489.009 743.623 487.135 735.696 485.626 727.862 cv
489.841 729.692 494.827 731.428 500.473 733.02 cv
499.064 735.033 498.124 737.61 497.146 739.669 cv
cp
516.454 762.868 mo
515.68 767.963 512.764 774.119 507.748 775.781 cv
499.717 778.443 498.049 765.513 499.104 760.569 cv
499.133 760.427 499.099 760.31 499.11 760.176 cv
504.013 761.199 509.861 762.108 516.454 762.868 cv
cp
514.595 745.417 mo
511.79 748.711 509.465 752.41 506.683 755.706 cv
505.089 748.956 506.999 741.367 505.694 734.401 cv
510.248 735.536 515.158 736.572 520.347 737.499 cv
519.155 740.47 516.583 743.081 514.595 745.417 cv
cp
526.611 758.301 mo
520.415 757.798 514.712 757.172 509.657 756.442 cv
512.243 753.218 514.524 749.731 517.207 746.577 cv
519.145 744.3 521.417 741.792 522.693 738.967 cv
525.134 744.808 526.269 752.018 526.611 758.301 cv
cp
529.348 758.118 mo
528.995 751.609 527.843 744.438 525.387 738.358 cv
530.362 739.148 535.583 739.822 540.974 740.386 cv
536.736 746.033 532.717 751.904 529.348 758.118 cv
cp
547.809 750.836 mo
548.754 753.679 549.753 756.589 550.489 759.526 cv
544.082 759.37 537.939 759.092 532.161 758.71 cv
535.592 752.523 539.635 746.665 543.9 741.037 cv
543.974 741.146 544.057 741.284 544.155 741.459 cv
544.646 742.335 545.032 743.285 545.415 744.211 cv
546.31 746.38 547.064 748.611 547.809 750.836 cv
cp
553.202 759.087 mo
552.13 754.706 549.616 745.731 546.935 740.955 cv
551.645 741.356 556.463 741.663 561.385 741.867 cv
557.811 747.021 557.435 754.507 553.202 759.087 cv
cp
572.869 759.573 mo
567.16 759.687 561.554 759.706 556.111 759.635 cv
559.8 754.232 560.176 746.621 564.853 741.986 cv
564.854 741.986 564.854 741.986 564.857 741.986 cv
568.887 747.139 571.146 753.296 572.869 759.573 cv
cp
575.592 759.131 mo
573.95 753.103 571.818 747.225 568.318 742.084 cv
570.578 742.131 572.849 742.163 575.138 742.163 cv
578.432 742.163 581.758 742.104 585.095 742.002 cv
581.835 747.661 579.065 753.598 575.592 759.131 cv
cp
595.926 758.584 mo
590.113 758.969 584.33 759.245 578.627 759.422 cv
582.023 753.816 584.792 747.85 588.139 742.215 cv
592.036 746.925 592.951 753.306 595.926 758.584 cv
cp
604.1 750.055 mo
602.527 752.619 601.383 755.892 599.475 758.335 cv
599.341 758.345 599.206 758.354 599.072 758.364 cv
595.682 753.215 594.707 746.836 591.255 741.747 cv
597.227 741.453 603.236 740.984 609.247 740.332 cv
608.096 743.821 606.018 746.938 604.1 750.055 cv
cp
619.42 756.421 mo
613.975 757.073 608.485 757.617 602.999 758.062 cv
604.262 755.902 605.243 753.497 606.476 751.443 cv
608.581 747.938 610.897 744.514 612.063 740.575 cv
615.775 745.265 616.57 751.289 619.42 756.421 cv
cp
622.244 755.766 mo
620.337 752.467 619.619 748.716 618.129 745.187 cv
617.322 743.287 616.196 741.389 614.887 739.661 cv
619.877 739.023 624.861 738.281 629.804 737.367 cv
627.681 743.657 624.307 749.448 622.244 755.766 cv
cp
638.747 748.247 mo
639.206 749.199 639.937 751.438 640.924 753.216 cv
635.749 754.153 630.479 754.978 625.144 755.696 cv
627.32 749.393 630.732 743.58 632.742 737.212 cv
635.487 740.037 637.281 745.211 638.747 748.247 cv
cp
643.972 752.555 mo
643.899 752.453 643.829 752.362 643.744 752.202 cv
643.271 751.34 642.852 750.449 642.422 749.564 cv
641.385 747.419 640.365 745.267 639.289 743.139 cv
638.242 741.062 637.049 738.362 635.427 736.223 cv
641.439 734.971 647.364 733.495 653.19 731.787 cv
651.523 739.14 646.882 745.599 643.972 752.555 cv
cp
664.393 747.917 mo
658.851 749.456 653.074 750.823 647.129 752.027 cv
650.018 745.503 654.075 739.452 655.768 732.536 cv
658.8 737.563 660.479 743.598 664.393 747.917 cv
cp
670.152 727.875 mo
669.623 730.828 668.752 733.714 668.191 736.663 cv
667.591 739.814 667.931 743.583 666.996 746.745 cv
662.542 742.573 660.764 735.777 657.572 730.483 cv
661.954 729.092 666.238 727.526 670.447 725.846 cv
670.381 726.372 670.311 726.982 670.152 727.875 cv
cp
680.84 731.359 mo
683.736 733.717 686.704 736.157 689.017 739.114 cv
683.135 741.833 676.671 744.23 669.788 746.345 cv
670.133 744.573 670.251 742.734 670.404 740.978 cv
670.665 737.997 671.286 735.083 671.987 732.182 cv
672.458 730.237 672.594 727.466 673.346 725.381 cv
675.995 727.163 678.347 729.328 680.84 731.359 cv
cp
690.876 736.996 mo
688.792 734.457 686.27 732.297 683.736 730.194 cv
681.084 727.991 678.528 725.642 675.715 723.657 cv
681.088 721.307 686.28 718.701 691.249 715.821 cv
691.188 722.881 690.968 729.937 690.876 736.996 cv
cp
703.028 737.803 mo
701.879 741.806 700.981 745.94 700.31 750.174 cv
699.988 750.396 699.695 750.691 699.462 751.115 cv
698.209 753.388 694.588 753.009 692.445 752.557 cv
690.431 752.132 689.227 750.512 688.126 748.773 cv
688.008 747.77 687.75 746.799 687.348 745.881 cv
693.047 743.459 698.295 740.764 703.028 737.803 cv
cp
707.047 726.426 mo
706.523 727.643 706.056 728.893 705.586 730.139 cv
705.232 729.67 li
701.776 732.255 697.882 734.635 693.643 736.836 cv
693.734 729.597 693.958 722.361 694.009 715.12 cv
698.994 717.991 702.276 723.196 707.047 726.426 cv
cp
697.334 816.901 mo
697.175 816.624 696.972 816.445 696.77 816.258 cv
700.071 814.155 702.424 809.788 704.216 806.064 cv
705.924 812.283 708.07 818.615 710.642 825.005 cv
704.753 827.711 700.243 821.991 697.334 816.901 cv
cp
707.687 851.138 mo
707.391 850.425 707.052 849.729 706.631 849.076 cv
710.873 845.904 713.438 840.627 715.162 835.388 cv
718.201 841.839 721.673 848.314 725.564 854.762 cv
719.91 863.188 712.403 857.199 707.687 851.138 cv
cp
749.353 876.962 mo
741.965 867.839 735.524 858.474 729.999 849.06 cv
736.963 848.461 743.62 847.593 749.992 846.461 cv
748.859 853.022 747.609 864.322 749.353 876.962 cv
cp
786.749 923.936 mo
782.905 927.272 776.021 928.338 771.8 926.345 cv
768.71 924.884 765.934 920.505 763.389 917.91 cv
766.725 916.325 769.666 913.726 772.091 910.779 cv
772.142 910.716 772.15 910.647 772.196 910.583 cv
776.899 914.775 781.848 918.843 786.995 922.791 cv
786.831 923.17 786.736 923.555 786.749 923.936 cv
cp
800.758 933.367 mo
795.13 937.705 789.521 934.707 784.039 931.55 cv
787.048 930.535 789.753 928.912 791.873 926.474 cv
794.88 928.672 797.981 930.805 801.13 932.901 cv
801 933.054 800.854 933.194 800.758 933.367 cv
cp
783.744 937.646 mo
791.177 941.482 798.259 943.057 805.437 936.619 cv
805.625 936.453 805.712 936.217 805.83 936.002 cv
806.063 936.152 806.307 936.292 806.542 936.44 cv
805.87 936.861 805.39 937.565 805.443 938.631 cv
805.875 946.774 799.109 950.913 791.754 951.804 cv
789.132 952.124 786.023 951.985 783.609 950.845 cv
782.14 950.149 777.615 945.42 776.561 944.673 cv
779.801 943.346 782.374 940.918 783.744 937.646 cv
cp
762.351 924.846 mo
765.994 928.93 770.088 933.515 775.648 933.13 cv
776.926 933.041 778.202 932.88 779.468 932.674 cv
779.452 932.738 779.422 932.793 779.412 932.859 cv
778.56 938.564 773.917 940.288 768.892 940.327 cv
762.982 940.37 760.487 936.032 756.64 932.687 cv
759.187 930.617 761.137 928.01 762.351 924.846 cv
cp
741.463 930.04 mo
738.683 928.147 736.354 925.811 734.468 923.03 cv
734.36 922.88 734.242 922.75 734.124 922.632 cv
736.772 920.581 738.86 917.48 739.949 913.091 cv
743.317 916.391 748.447 917.894 752.981 919.038 cv
754.797 919.497 756.541 919.575 758.219 919.396 cv
756.739 928.451 751.155 932 741.463 930.04 cv
cp
721.631 943.317 mo
727.366 940.305 731.018 935.546 732.834 929.744 cv
736.95 934.363 742.644 938.524 748.796 936.747 cv
749.653 936.497 750.475 936.212 751.265 935.892 cv
751.265 935.895 751.268 935.895 751.268 935.895 cv
754.236 940.235 742.832 945.693 739.929 947.177 cv
732.026 951.208 725.386 948.803 718.259 944.636 cv
719.353 944.324 720.467 943.928 721.631 943.317 cv
cp
710.415 919.951 mo
716.293 924.446 722.837 926.367 728.343 925.297 cv
727.306 932.08 723.005 937.416 716.349 939.403 cv
710.607 941.116 705.738 937.425 700.78 934.995 cv
706.163 931.857 709.508 926.077 710.415 919.951 cv
cp
686.033 910.649 mo
691.478 917.166 698.623 918.635 704.85 916.035 cv
701.75 931.21 694.585 935.537 683.336 928.95 cv
681.287 926.826 679.541 924.481 677.987 921.994 cv
682.125 919.453 684.703 915.293 686.033 910.649 cv
cp
656.605 907.547 mo
660.829 905.747 664.127 902.55 665.633 898.29 cv
669.87 902.298 676.174 905.667 681.531 904.667 cv
680.18 921.452 664.626 919.614 656.605 907.547 cv
cp
655.032 914.858 mo
659.221 920.362 664.6 925.241 671.777 924.245 cv
669.59 937.538 653.672 936.271 646.76 926.852 cv
651.362 924.586 653.364 919.846 655.032 914.858 cv
cp
636.405 901.594 mo
640.287 906.002 645.234 909.436 651.217 908.933 cv
650.421 911.191 649.685 913.467 648.928 915.742 cv
644.205 929.852 633.17 917.991 628.448 913.149 cv
633.592 911.233 635.481 906.77 636.405 901.594 cv
cp
609.338 898.401 mo
612.971 895.593 613.9 890.953 613.948 886.528 cv
618.392 891.434 624.607 894.491 631.435 894.435 cv
631.656 894.432 631.849 894.385 632.064 894.376 cv
631.873 894.706 631.742 895.094 631.693 895.54 cv
630.952 902.518 630.708 908.379 622.071 908.761 cv
616.858 908.992 610.698 905.217 608.392 900.568 cv
608.188 900.149 607.923 899.849 607.628 899.622 cv
608.218 899.236 608.791 898.825 609.338 898.401 cv
cp
596.265 869.118 mo
599.265 874.146 603.912 878.726 609.391 880.497 cv
608.71 880.914 608.227 881.622 608.313 882.702 cv
608.656 887.113 608.738 891.104 605.449 894.511 cv
602.328 897.748 597.914 897.231 594.68 894.712 cv
590.17 891.196 587.435 885.162 585.797 879.826 cv
591.228 878.748 594.656 874.347 596.265 869.118 cv
cp
578.625 850.709 mo
581.828 856.227 586.012 861.134 592.501 862.091 cv
592.141 862.505 591.863 863.006 591.808 863.675 cv
591.301 869.9 587.198 877.166 580.014 873.767 cv
574.31 871.068 575.079 865.477 571.334 861.765 cv
575.342 859.711 577.878 855.287 578.625 850.709 cv
cp
562.432 835.575 mo
565.006 840.386 568.441 845.806 573.343 846.572 cv
574.08 850.751 571.694 856.284 567.37 857.473 cv
561.648 859.045 558.032 844.541 557.328 840.94 cv
557.3 840.796 557.222 840.71 557.178 840.583 cv
559.464 839.424 561.382 837.732 562.432 835.575 cv
cp
542.484 819.954 mo
546.656 824.351 551.806 828.984 557.457 829.446 cv
557.479 829.639 557.457 829.814 557.522 830.023 cv
560.156 838.143 543.496 839.484 542.296 829.979 cv
542.151 828.828 541.554 827.83 540.535 827.428 cv
540.09 826.665 539.658 825.896 539.17 825.152 cv
539.014 824.916 538.837 824.729 538.651 824.563 cv
540.112 823.226 541.423 821.664 542.484 819.954 cv
cp
533.292 804.149 mo
530.999 801.774 529.789 799.599 528.592 796.587 cv
530.718 794.978 531.901 792.227 532.554 789.333 cv
535.552 794.06 540.145 797.56 546.001 797.251 cv
546.121 797.652 546.294 798.032 546.586 798.328 cv
546.57 798.467 546.559 798.582 546.525 798.784 cv
546.337 799.945 545.961 801.077 545.596 802.192 cv
544.943 804.207 544.01 806.372 542.635 808.008 cv
540.322 810.759 534.767 805.671 533.292 804.149 cv
cp
524.582 810.276 mo
525.901 808.9 526.555 807.041 526.946 805.187 cv
528.463 807.383 530.324 809.335 532.757 811.011 cv
534.16 811.978 535.813 812.836 537.534 813.39 cv
537.483 814.067 537.689 814.784 538.289 815.42 cv
538.385 815.522 538.487 815.636 538.586 815.741 cv
537.579 817.606 536.274 819.282 534.715 820.766 cv
532.798 822.595 527.961 824.052 526.694 820.652 cv
525.881 818.469 524.751 813.811 522.742 811.737 cv
523.388 811.356 524.006 810.878 524.582 810.276 cv
cp
527.877 782.412 mo
527.872 782.455 527.856 782.488 527.855 782.531 cv
527.757 785.346 527.445 789.584 525.663 791.87 cv
522.257 796.238 514.867 783.109 512.734 779.673 cv
515.304 778.009 517.381 775.358 518.92 772.384 cv
520.309 776.898 522.971 780.709 527.877 782.412 cv
cp
530.307 777.467 mo
523.924 776.257 523.157 768.976 523.058 763.548 cv
529.094 764.112 535.621 764.555 542.511 764.855 cv
540.806 770.583 537.706 778.867 530.307 777.467 cv
cp
555.217 781.462 mo
554.53 786.166 552.091 790.295 547.231 791.628 cv
541.421 793.224 537.346 787.75 535.42 782.803 cv
540.325 781.353 543.683 776.462 545.89 771.474 cv
547.397 776.328 550.145 780.299 555.217 781.462 cv
cp
560.561 776.026 mo
552.929 778.324 550.984 770.873 550.076 765.128 cv
554.438 765.247 558.91 765.312 563.48 765.312 cv
565.704 765.312 567.957 765.292 570.222 765.261 cv
568.022 769.801 565.714 774.475 560.561 776.026 cv
cp
584.399 782.341 mo
582.523 786.058 580.054 789.601 576.035 791.168 cv
569.319 793.792 564.346 786.427 562.217 781.289 cv
567.541 779.832 570.837 775.435 573.539 770.595 cv
575.417 776.273 578.968 781.268 584.399 782.341 cv
cp
589.093 776.658 mo
582.047 779.199 578.668 770.965 577.749 765.109 cv
584.271 764.925 590.901 764.61 597.56 764.154 cv
597.611 764.248 597.621 764.338 597.686 764.435 cv
601.221 769.768 593.414 775.098 589.093 776.658 cv
cp
615.893 779.126 mo
616.183 784.577 611.934 787.553 606.863 788.672 cv
599.985 790.192 596.832 785.278 592.89 781.072 cv
596.83 779.297 600.78 775.991 602.771 772.104 cv
605.805 776.196 610.681 778.937 615.893 779.126 cv
cp
621.089 772.644 mo
614.647 776.689 605.702 770.333 605.154 763.567 cv
613.36 762.869 621.567 761.946 629.631 760.771 cv
630.106 764.885 623.806 770.939 621.089 772.644 cv
cp
643.502 774.486 mo
644.724 779.324 640.295 785.907 635.384 786.421 cv
631.038 786.875 626.77 781.011 623.686 777.141 cv
627.688 774.938 631.709 771.116 633.783 766.92 cv
635.926 770.716 639.298 773.651 643.502 774.486 cv
cp
649.434 767.935 mo
643.533 772.446 637.925 765.316 636.889 759.632 cv
643.234 758.572 649.454 757.346 655.488 755.942 cv
655.233 760.46 653.025 765.192 649.434 767.935 cv
cp
670.589 766.75 mo
669.231 771.477 666.915 776.282 662.515 778.754 cv
657.815 781.393 654.021 777.003 651.62 773.246 cv
655.901 770.831 658.916 765.701 660.247 760.682 cv
662.757 763.899 666.573 766.123 670.589 766.75 cv
cp
676.458 760.527 mo
671.99 763.473 663.76 759.458 662.913 754.102 cv
669.389 752.383 675.578 750.433 681.404 748.246 cv
681.517 748.656 681.705 749.055 682.012 749.404 cv
682.329 749.767 682.62 750.174 682.898 750.598 cv
682.724 754.371 678.884 758.927 676.458 760.527 cv
cp
699.032 763.078 mo
698.86 763.182 698.679 763.242 698.516 763.395 cv
695.633 766.072 693.401 769.351 690.619 772.131 cv
684.961 777.794 680.204 771.432 678.477 765.678 cv
682.034 763.938 685.254 760.232 686.952 756.095 cv
687.021 756.145 687.08 756.206 687.153 756.252 cv
688.987 757.422 691.118 758.03 693.273 758.244 cv
695.293 758.441 697.453 758.33 699.386 757.706 cv
699.225 759.48 699.106 761.272 699.032 763.078 cv
cp
701.149 794.22 mo
693.309 794.53 691.423 786.911 690.833 780.467 cv
690.78 779.885 690.575 779.413 690.286 779.027 cv
693.794 777.385 696.359 774.143 698.934 771.072 cv
699.096 778.588 699.939 786.338 701.462 794.259 cv
701.353 794.252 701.267 794.217 701.149 794.22 cv
cp
690.483 811.278 mo
687.878 810.01 685.769 807.298 683.927 805.133 cv
683.105 804.165 682.522 803.223 681.931 802.142 cv
681.877 800.734 681.663 799.446 681.23 798.391 cv
684.187 796.892 686.375 794.05 687.754 790.798 cv
690.045 796.083 694.137 799.999 701.149 799.723 cv
701.243 799.718 701.304 799.674 701.396 799.662 cv
701.191 799.867 700.987 800.081 700.836 800.396 cv
699.102 804.019 696.356 814.133 690.483 811.278 cv
cp
704.645 843.588 mo
698.795 850.347 692.81 838.548 690.458 834.092 cv
690.313 833.813 690.116 833.638 689.928 833.449 cv
692.827 831.386 694.971 828.203 696.114 824.733 cv
699.993 829.307 705.107 832.463 710.776 830.89 cv
709.502 835.451 707.725 840.031 704.645 843.588 cv
cp
726.05 863 mo
726.711 864.136 724.535 867.411 723.946 868.524 cv
722.359 871.522 720.303 873.723 717.351 875.454 cv
711.437 878.93 707.233 872.287 702.891 868.956 cv
705.833 866.71 707.754 863.281 708.45 859.641 cv
713.835 864.083 720.199 866.168 725.808 862.282 cv
725.872 862.52 725.911 862.755 726.05 863 cv
cp
715.291 905.667 mo
718.711 908.864 724.48 910.11 729.229 910.426 cv
731.25 910.56 733.302 910.195 735.307 909.476 cv
734.881 916.602 729.225 919.935 718.238 919.409 cv
715.203 917.511 712.547 915.196 710.243 912.5 cv
712.189 910.69 713.918 908.42 715.291 905.667 cv
cp
694.153 891.472 mo
694.998 892.498 695.845 893.952 696.366 894.53 cv
697.989 896.318 700.111 897.703 702.212 898.847 cv
705.132 900.439 708.584 900.466 711.756 899.657 cv
707.327 912.903 693.982 915.704 687.169 902.188 cv
690.671 899.654 693.022 895.75 694.153 891.472 cv
cp
676.537 879.556 mo
679.801 883.496 684.443 886.35 689.487 886.245 cv
689.485 886.292 689.458 886.322 689.458 886.37 cv
689.259 891.328 686.882 896.941 682.001 898.932 cv
677.434 900.791 670.142 895.91 667.533 892.316 cv
667.516 892.292 667.495 892.275 667.479 892.253 cv
671.809 889.573 675.866 884.496 676.537 879.556 cv
cp
658.735 888.752 mo
653.408 887.665 651.389 882.035 649.401 877.579 cv
654.387 876.295 657.278 872.439 658.451 867.894 cv
661.699 871.898 665.969 875.3 670.348 875.857 cv
670.415 876.003 670.482 876.149 670.579 876.296 cv
674.087 881.672 663.353 889.696 658.735 888.752 cv
cp
645.824 882.556 mo
649.148 888.806 653.647 894.851 660.995 894.396 cv
660.506 899.579 655.913 902.865 650.986 903.447 cv
644.829 904.179 640.268 898.209 637.275 893.691 cv
637.179 893.546 637.071 893.423 636.962 893.305 cv
641.449 891.421 644.39 887.344 645.824 882.556 cv
cp
617.51 880.901 mo
622.351 879.807 627.473 874.541 628.935 868.994 cv
632.131 873.247 635.991 876.479 640.924 877.639 cv
640.763 878.244 640.813 878.771 641.017 879.219 cv
638.584 892.461 623.506 890.313 616.581 881.038 cv
616.892 880.989 617.198 880.973 617.51 880.901 cv
cp
605.659 852.622 mo
610.344 858.659 614.888 863.933 622.969 863.386 cv
623.02 863.486 623.06 863.588 623.13 863.689 cv
624.542 865.797 622.778 869.451 621.792 871.375 cv
620.21 874.453 617.258 875.675 613.957 875.585 cv
606.919 875.392 601.536 868.966 599.276 862.944 cv
599.055 862.365 598.689 861.98 598.274 861.677 cv
602.144 860.265 604.176 856.56 605.659 852.622 cv
cp
585.435 837.727 mo
589.281 843.637 594.175 847.844 601.544 847.931 cv
600.459 851.695 599.618 855.257 595.161 856.692 cv
588.394 858.872 583.522 848.517 581.217 843.92 cv
583.101 842.296 584.502 840.134 585.435 837.727 cv
cp
568.912 822.636 mo
569.385 821.399 569.578 820.142 569.68 818.879 cv
572.428 823.962 575.681 828.519 581.488 829.67 cv
581.37 833.799 579.895 840.46 575.25 841.04 cv
569.972 841.699 566.549 831.388 564.613 827.903 cv
564.57 827.825 564.503 827.791 564.458 827.72 cv
566.433 826.544 568.072 824.839 568.912 822.636 cv
cp
571.867 796.972 mo
571.366 802.071 568.046 806.792 562.4 805.753 cv
557.154 804.788 555.012 799.503 552.609 795.264 cv
555.631 793.457 557.801 790.633 559.166 787.332 cv
562.002 792.231 565.984 795.955 571.895 796.838 cv
571.887 796.886 571.871 796.922 571.867 796.972 cv
cp
584.918 809.661 mo
586.952 810.92 589.229 811.596 591.564 811.839 cv
590.162 817.116 590.218 824.315 583.414 824.525 cv
576.295 824.746 573.607 814.324 570.92 809.412 cv
573.714 807.458 575.605 804.291 576.608 800.88 cv
579.268 803.95 581.313 807.431 584.918 809.661 cv
cp
597.068 806.131 mo
588.292 809.109 584.416 800.89 579.425 795.813 cv
583.687 793.72 586.963 789.282 589.123 785.13 cv
591.763 788.042 593.861 791.19 597.69 792.966 cv
599.982 794.028 602.414 794.322 604.864 794.26 cv
604.885 798.606 600.862 804.845 597.068 806.131 cv
cp
622.214 810.31 mo
622.279 810.453 622.345 810.595 622.441 810.739 cv
624.143 813.284 623.707 816.069 623.022 818.899 cv
621.669 824.495 617.285 827.33 611.689 824.798 cv
605.745 822.109 603.066 816.084 599.298 811.194 cv
603.23 809.963 606.942 805.636 608.931 801.039 cv
612.243 805.903 616.466 810.098 622.214 810.31 cv
cp
627.555 802.849 mo
619.434 808.579 614.241 799.835 610.709 793.432 cv
615.88 791.838 620.137 787.703 621.212 782.537 cv
624.564 786.392 628.586 790.774 633.198 791.839 cv
633.157 792.495 633.349 793.137 633.717 793.671 cv
632.91 797.213 629.947 801.161 627.555 802.849 cv
cp
649.89 805.506 mo
650.008 805.873 650.18 806.22 650.421 806.504 cv
650.42 806.715 650.416 807.031 650.4 807.531 cv
650.352 809.041 650.083 810.541 649.82 812.023 cv
649.145 815.795 648.337 818.511 644.979 820.774 cv
639.193 824.672 633.487 813.979 629.147 808.607 cv
632.649 806.597 636.013 802.712 637.904 798.598 cv
641.291 802.341 645.482 805.13 649.89 805.506 cv
cp
656.8 796.962 mo
650.678 804.165 643.389 797.619 639.446 791.642 cv
639.441 791.575 639.446 791.505 639.441 791.438 cv
639.43 791.311 639.371 791.22 639.346 791.101 cv
639.47 791.042 639.591 791.006 639.718 790.94 cv
644.126 788.639 647.892 783.956 648.933 778.882 cv
651.743 782.32 655.238 784.674 659.912 784.709 cv
660.453 787.083 657.76 795.836 656.8 796.962 cv
cp
674.684 799.504 mo
674.778 799.734 674.905 799.95 675.057 800.146 cv
675.275 801.169 675.688 802.231 676.194 803.236 cv
676.183 804.397 676.064 805.559 675.938 806.71 cv
675.667 809.167 675.227 811.868 673.985 814.025 cv
670.259 820.513 660.288 808.59 656.978 803.845 cv
658.018 803.241 659.053 802.474 660.077 801.506 cv
661.541 800.117 663.891 796.688 665.443 793.019 cv
667.67 796.432 670.589 799.05 674.684 799.504 cv
cp
699.456 864.606 mo
693.329 870.31 686.332 859.771 685.234 854.692 cv
685.053 853.848 684.593 853.305 684.021 853.003 cv
686.538 850.254 687.988 846.261 688.875 842.322 cv
691.924 846.98 696.162 851.608 701.185 851.327 cv
701.267 851.548 701.369 851.774 701.525 851.998 cv
702.019 852.715 702.545 853.418 703.088 854.11 cv
704.179 857.76 702.088 862.153 699.456 864.606 cv
cp
701.149 874.541 mo
703.614 876.743 705.633 879.546 708.853 880.713 cv
712.377 881.991 715.541 881.934 718.711 880.726 cv
718.735 880.817 718.758 880.91 718.789 881.001 cv
718.598 886.912 716.149 892.82 709.992 894.478 cv
705.613 895.658 701.426 892.397 698.938 889.114 cv
697.508 887.227 696.992 885.842 694.701 885.203 cv
694.664 885.125 694.64 885.034 694.597 884.962 cv
698.446 882.958 700.863 878.847 701.149 874.541 cv
cp
679.256 872.191 mo
680.664 870.647 682.41 867.526 683.551 864.138 cv
686.494 868.264 690.79 871.383 695.486 871.483 cv
695.502 871.648 695.469 871.794 695.515 871.972 cv
696.656 876.228 694.005 879.645 689.941 880.774 cv
685.391 882.039 680.486 876.326 678.63 872.775 cv
678.837 872.575 679.051 872.417 679.256 872.191 cv
cp
665.432 846.276 mo
668.911 851.56 673.558 856.975 678.794 856.125 cv
678.915 856.222 678.984 856.338 679.128 856.423 cv
678.53 856.073 678.871 856.281 678.928 857.088 cv
679.009 858.257 678.85 859.434 678.644 860.578 cv
678.152 863.309 677.109 866.12 675.364 868.302 cv
669.478 875.661 661.062 863.058 658.825 858.161 cv
658.728 857.949 658.585 857.831 658.464 857.67 cv
658.453 857.632 658.448 857.594 658.44 857.559 cv
661.935 854.854 664.172 850.698 665.432 846.276 cv
cp
668.14 823.103 mo
668.801 835.83 652.265 834.727 647.944 825.376 cv
649.848 824.333 651.513 822.842 652.635 821.054 cv
653.36 819.901 654.795 815.405 655.461 811.026 cv
659.082 815.35 664.119 819.887 668.952 821.078 cv
668.43 821.519 668.092 822.187 668.14 823.103 cv
cp
666.448 836.228 mo
669.112 834.883 671.313 832.749 672.546 829.794 cv
673.517 831.361 674.684 832.798 676.331 834.013 cv
678.669 835.735 681.694 836.145 684.509 835.686 cv
683.826 840.362 682.831 845.663 679.933 849.337 cv
676.27 853.982 669.613 842.828 666.741 837.912 cv
666.743 837.791 666.762 837.664 666.764 837.544 cv
666.777 837.019 666.644 836.597 666.448 836.228 cv
cp
639.204 842.13 mo
642.775 840.043 645.33 836.564 646.21 832.638 cv
649.968 836.548 655.453 838.25 660.538 837.822 cv
660.583 838.18 660.715 838.555 660.952 838.932 cv
661.013 839.032 661.086 839.154 661.15 839.259 cv
660.731 844.38 658.997 849.596 655.225 853.175 cv
648.541 859.523 642.316 846.692 639.204 842.13 cv
cp
637.772 849.806 mo
641.647 855.524 646.521 861.615 653.338 860.067 cv
654.411 865.61 652.864 870.949 646.764 872.56 cv
639.043 874.6 633.918 867.175 630.63 861.599 cv
630.528 861.427 630.388 861.337 630.269 861.2 cv
634.331 858.75 636.921 854.465 637.772 849.806 cv
cp
620.975 830.473 mo
625.687 828.582 628.545 822.827 629.045 817.205 cv
629.539 817.986 630.039 818.752 630.576 819.463 cv
632.418 821.906 634.541 823.988 637.141 825.597 cv
638.258 826.289 639.468 826.65 640.694 826.83 cv
640.714 826.981 640.684 827.113 640.73 827.273 cv
642.385 832.957 638.227 837.245 632.995 838.668 cv
627.283 840.222 623.496 834.944 620.975 830.473 cv
cp
601.316 842.633 mo
593.743 843.071 590.001 835.508 587.142 829.662 cv
593.275 828.23 594.689 821.764 596.137 815.98 cv
599.104 819.875 601.431 823.955 605.433 827.246 cv
607.834 829.22 610.463 830.492 613.266 831.016 cv
614.39 837.304 606.315 842.344 601.316 842.633 cv
cp
617.943 835.963 mo
621.501 841.122 626.128 844.717 632.484 844.202 cv
632.492 844.293 632.462 844.369 632.478 844.464 cv
633.923 852.18 627.589 858.985 619.729 857.922 cv
614.453 857.207 611.085 851.211 608.039 846.874 cv
612.378 845.065 616.312 840.679 617.943 835.963 cv
cp
685.294 829.794 mo
679.191 833.203 676.183 825.11 674.185 820.83 cv
675.532 820.286 676.807 819.321 677.961 817.814 cv
678.917 816.567 680.091 813.647 680.924 810.33 cv
683.172 812.885 685.947 815.172 688.756 816.538 cv
689.737 817.016 690.658 817.275 691.542 817.412 cv
691.542 817.48 691.516 817.529 691.521 817.603 cv
691.997 822.597 689.715 827.319 685.294 829.794 cv
cp
678.382 793.542 mo
672.081 797.402 668.28 787.269 666.669 783.175 cv
666.636 783.093 666.577 783.046 666.539 782.969 cv
670.423 780.547 673.127 775.874 674.826 771.408 cv
676.768 775.374 679.841 779.017 683.967 779.878 cv
683.945 780.065 683.936 780.255 683.956 780.467 cv
684.459 785.427 682.825 790.821 678.382 793.542 cv
cp
544.902 813.093 mo
545.469 812.782 546.015 812.393 546.525 811.899 cv
547.659 810.798 549.796 806.934 551.091 803.032 cv
554.264 807.722 557.986 811.563 564.765 811.408 cv
564.774 811.408 564.783 811.404 564.794 811.402 cv
564.141 815.746 565.678 820.344 561.247 823.35 cv
556.367 826.664 549.351 819.534 544.983 814.667 cv
545.151 814.066 545.09 813.542 544.902 813.093 cv
cp
768.191 906.902 mo
765.203 910.528 762.02 913.569 757.1 913.956 cv
753.325 914.248 744.136 911.527 742.54 907.643 cv
742.258 906.956 741.791 906.489 741.249 906.196 cv
746.663 902.163 750.929 895.942 752.03 890.436 cv
757.064 896.061 762.45 901.563 768.191 906.902 cv
cp
748.125 886.746 mo
748.284 886.641 748.44 886.581 748.595 886.519 cv
748.733 886.679 748.861 886.838 749 886.997 cv
746.019 892.553 738.857 900.82 734.482 903.499 cv
730.348 906.026 717.217 905.479 717.883 897.831 cv
717.921 897.399 717.837 897.025 717.695 896.692 cv
720.483 894.33 722.305 890.95 723.303 887.336 cv
725.858 889.365 729.02 890.714 731.879 891.022 cv
737.573 891.633 743.139 887.798 745.413 882.763 cv
746.411 883.976 747.447 885.178 748.477 886.38 cv
748.169 886.66 747.977 886.845 748.125 886.746 cv
cp
742.317 878.894 mo
741.525 879.121 740.807 879.639 740.442 880.597 cv
737.506 888.344 724.956 886 723.745 878.303 cv
723.714 878.126 723.627 878.015 723.579 877.862 cv
727.18 874.772 731.245 869.078 731.605 864.274 cv
734.919 869.194 738.506 874.071 742.317 878.894 cv
cp
781.746 909.944 mo
771.344 901.171 761.984 891.809 753.679 882.14 cv
750.508 867.005 752.297 852.725 753.569 845.808 cv
761.421 844.263 768.816 842.285 775.783 839.865 cv
774.788 854.275 773.977 884.494 781.746 909.944 cv
cp
708.313 717.632 mo
708.459 719.291 708.24 721.549 708.345 723.627 cv
708.284 723.757 708.224 723.887 708.165 724.017 cv
703.63 720.991 700.543 715.923 695.911 713 cv
700.061 710.37 704.006 707.507 707.77 704.453 cv
707.595 708.86 707.917 713.239 708.313 717.632 cv
cp
503.837 755.504 mo
499.816 754.785 496.359 753.995 493.55 753.149 cv
495.516 749.472 497.329 745.676 499.115 741.915 cv
500.195 739.636 501.228 736.472 502.903 734.335 cv
504.451 741.199 502.54 748.697 503.837 755.504 cv
cp
514.971 812.224 mo
515.842 812.529 516.737 812.734 517.63 812.817 cv
517.366 813.942 517.785 814.826 518.473 815.409 cv
518.815 816.001 519.086 816.643 519.372 817.263 cv
520.107 818.851 520.758 820.481 521.389 822.113 cv
522.642 825.352 525.831 827.831 529.376 828.149 cv
530.643 828.263 531.842 828.123 532.991 827.83 cv
533.37 832.239 532.528 836.201 530.774 840.12 cv
524.963 830.784 519.676 821.476 514.971 812.224 cv
cp
596.913 916.073 mo
597.938 915.748 598.943 915.25 599.875 914.472 cv
602.682 912.124 603.483 908.691 605.053 905.613 cv
608.906 911.023 615.775 914.111 622.335 914.162 cv
620.734 920.017 616.753 923.944 610.333 925.894 cv
610.268 925.904 610.235 925.945 610.174 925.958 cv
605.691 922.832 601.269 919.53 596.913 916.073 cv
cp
634.434 941.052 mo
638.027 939.007 641.449 935.605 643.797 932.263 cv
646.825 936.193 650.72 939.699 655.332 940.918 cv
653.635 942.852 650.024 945.79 646.532 947.359 cv
642.471 945.369 638.436 943.259 634.434 941.052 cv
cp
670.189 956.887 mo
669.918 957.002 669.725 957.207 669.537 957.416 cv
663.721 955.171 657.938 952.719 652.195 950.061 cv
654.873 948.784 657.348 946.929 659.207 944.855 cv
663.853 948.682 668.242 952.097 673.757 953.342 cv
672.905 954.974 671.912 956.141 670.189 956.887 cv
cp
728.169 967.727 mo
732.664 966.056 736.915 963.32 738.403 959.053 cv
745.559 961.58 751.072 965.16 758.397 964.531 cv
754.502 968.69 750.155 972.123 744.625 973.997 cv
737.11 976.536 733.335 971.211 728.169 967.727 cv
cp
826.632 947.987 mo
824.854 958.33 807.533 965.477 800.941 955.581 cv
800.807 955.376 800.652 955.203 800.491 955.051 cv
806.622 952.104 811.106 946.507 810.934 939.137 cv
816.003 942.207 821.24 945.148 826.648 947.947 cv
826.643 947.96 826.634 947.971 826.632 947.987 cv
cp
833.696 964.658 mo
832.332 970.294 821.2 972.003 816.284 970.057 cv
817.131 968.924 817.976 967.791 818.853 966.707 cv
819.61 965.771 828.131 958.544 830.376 954.124 cv
830.432 954.187 830.489 954.25 830.543 954.326 cv
831.295 955.385 831.897 956.555 832.496 957.706 cv
833.708 960.037 834.333 962.021 833.696 964.658 cv
cp
839.395 963.342 mo
839.531 960.463 838.634 957.772 837.247 954.931 cv
836.893 954.209 836.479 953.398 836.013 952.582 cv
839.684 954.308 843.44 955.957 847.257 957.544 cv
845.365 960.119 842.536 963.181 839.395 963.342 cv
cp
845.581 972.923 mo
844.784 971.199 843.442 969.826 842.12 968.432 cv
846.423 967.154 850.007 963.196 852.471 959.663 cv
858.744 962.129 865.183 964.417 871.825 966.484 cv
863.703 968.965 854.91 971.131 845.581 972.923 cv
cp
818.068 684.766 mo
830.04 687.396 842.417 691.345 855.001 696.233 cv
840.33 787.433 801.968 830.399 722.936 836.021 cv
716.339 822.692 711.625 809.434 708.839 796.802 cv
706.36 785.522 705.327 774.727 705.615 764.504 cv
705.669 764.512 705.729 764.523 705.787 764.526 cv
708.805 777.763 719.613 794.232 734.976 791.871 cv
745.574 790.242 750.029 779.893 750.282 770.053 cv
753.408 774.216 757.178 777.876 762.195 779.146 cv
768.945 780.856 776.478 779.61 781.931 775.007 cv
786.691 771.005 791.051 765.481 791.193 758.94 cv
791.335 752.338 788.418 747.267 785.232 742.084 cv
794.239 746.681 805.081 747.939 812.169 739.181 cv
819.644 729.951 816.382 715.631 807.482 708.699 cv
810.882 707.993 814.001 706.315 816.436 703.21 cv
820.524 697.998 820.599 690.734 818.068 684.766 cv
cp
863.446 727.788 mo
871.04 725.109 884.104 719.951 893.347 713.287 cv
901.418 717.265 909.488 721.416 917.434 725.684 cv
900.847 741.195 869.7 751.664 855.222 755.922 cv
858.349 747.214 861.072 737.836 863.446 727.788 cv
cp
868.546 701.777 mo
875.642 704.839 882.769 708.117 889.897 711.58 cv
881.943 716.938 871.465 721.261 864.349 723.86 cv
865.922 716.831 867.31 709.466 868.546 701.777 cv
cp
940.856 738.472 mo
918.495 761.565 857.711 787.493 834.15 796.98 cv
841.855 786.364 848.338 774.042 853.733 759.903 cv
867.314 756.102 902.512 744.99 920.582 727.367 cv
927.4 731.034 934.177 734.761 940.856 738.472 cv
cp
943.901 740.162 mo
948.277 742.599 952.621 745.028 956.899 747.444 cv
959.783 749.075 962.672 750.67 965.524 752.292 cv
940.676 775.981 876.439 805.422 857.757 813.689 cv
846.865 808.474 838.602 803.904 833.474 800.907 cv
855.89 792.025 920.521 764.967 943.901 740.162 cv
cp
968.633 753.999 mo
976.325 758.319 983.879 762.477 991.235 766.417 cv
966.194 793.03 902.668 820.235 887.48 826.466 cv
877.936 822.816 869.335 819.11 861.824 815.619 cv
883.797 805.823 944.646 777.514 968.633 753.999 cv
cp
891.714 186.815 mo
883.351 332.065 1151.34 554.673 1013.55 693.505 cv
1100.66 523.295 846.658 303.477 891.714 186.815 cv
cp
1052.95 792.859 mo
1018.67 825.896 977.16 843.103 965.421 847.529 cv
962.718 847.107 960.045 846.687 957.422 846.213 cv
946.982 844.318 937 842.029 927.482 839.485 cv
947.982 830.882 993.989 809.181 1016.98 779.484 cv
1022.37 782.016 1027.63 784.347 1032.61 786.316 cv
1039.19 788.937 1046 791.091 1052.95 792.859 cv
cp
1061.75 794.848 mo
1069.11 796.281 1076.44 797.19 1083.67 797.671 cv
1069.28 819.956 1032.52 844.763 1022.2 851.461 cv
1004.4 851.818 987.605 850.61 972.141 848.53 cv
988.831 841.659 1025.97 824.151 1056.83 793.786 cv
1058.45 794.135 1060.09 794.524 1061.75 794.848 cv
cp
1109.7 797.44 mo
1095.35 823.585 1080.23 839.743 1073.5 846.178 cv
1058.1 849.127 1043.09 850.715 1028.67 851.277 cv
1043.22 841.553 1074.95 818.789 1087.53 797.834 cv
1095.04 798.164 1102.44 797.986 1109.7 797.44 cv
cp
1113.76 797.095 mo
1125.47 795.972 1136.76 793.834 1147.47 790.996 cv
1140.07 813.097 1132.21 824.811 1127.36 830.442 cv
1111.16 836.922 1095.13 841.648 1079.48 844.966 cv
1087.6 836.564 1101.08 820.675 1113.76 797.095 cv
cp
892.124 828.231 mo
912.102 819.868 970.466 794.07 994.324 768.052 cv
1001.02 771.628 1007.56 774.968 1013.86 777.983 cv
989.703 808.552 939.361 830.959 922.13 837.996 cv
911.395 834.976 901.335 831.642 892.124 828.231 cv
cp
955.995 852.818 mo
1015.4 863.561 1098.67 862.913 1181.5 810.254 cv
1164.78 823.169 1143.37 836.931 1117.54 848.179 cv
1053.71 875.959 948.9 893.555 810.493 821.445 cv
816.702 816.689 822.41 811.325 827.62 805.288 cv
841.29 813.524 890.544 841.005 955.995 852.818 cv
cp
1223.34 674.587 mo
1206.83 671.371 1189.53 677.671 1181.19 689.919 cv
1176.03 697.517 1175.35 708.945 1179.52 719.016 cv
1183.13 727.838 1189.68 733.795 1197.48 735.313 cv
1201.92 736.181 1206.58 735.575 1211.35 733.542 cv
1221.45 729.21 li
1210.67 727.112 li
1210.27 727.034 1200.49 724.96 1201.4 717.29 cv
1201.59 715.607 1202.48 714.195 1204.09 712.995 cv
1209.51 709.023 1220.36 709.349 1224.73 711.647 cv
1225.57 712.086 1230.36 715.942 1231.66 722.531 cv
1232.97 729.045 1230.46 736.128 1224.22 743.583 cv
1219.58 749.144 1209.96 756.676 1196.79 764.111 cv
1199.64 758.334 1199.63 751.651 1194.36 745.532 cv
1189.27 739.62 1178.06 735.86 1171.49 741.576 cv
1168.16 744.465 1166.92 750.253 1170.83 753.261 cv
1172.95 754.896 1180.23 755.793 1179.08 751.047 cv
1179.25 756.406 1164.41 751.101 1172.93 743.985 cv
1178.6 739.242 1188.67 743.617 1192.32 748.916 cv
1196.14 754.214 1194.94 761.438 1191.68 766.897 cv
1181.65 772.169 1169.88 777.25 1156.87 781.408 cv
1162.95 774.739 1165.27 765.549 1158.21 757.367 cv
1153.12 751.454 1141.92 747.693 1135.35 753.408 cv
1132.02 756.303 1130.78 762.088 1134.68 765.094 cv
1136.8 766.73 1144.08 767.628 1142.94 762.882 cv
1143.11 768.24 1128.27 762.938 1136.79 755.823 cv
1142.46 751.078 1152.53 755.452 1156.17 760.753 cv
1160.92 767.329 1157.99 776.934 1152.88 782.361 cv
1152.74 782.505 1152.59 782.626 1152.45 782.765 cv
1140.73 786.242 1128.1 788.912 1114.88 790.279 cv
1125.84 784.306 1133.4 771.37 1123.86 760.295 cv
1118.76 754.381 1107.56 750.62 1100.99 756.335 cv
1097.66 759.229 1096.42 765.015 1100.32 768.02 cv
1102.45 769.658 1109.72 770.553 1108.58 765.807 cv
1108.75 771.167 1093.91 765.866 1102.43 758.748 cv
1108.1 754.005 1118.17 758.379 1121.82 763.679 cv
1126.56 770.255 1123.63 779.862 1118.52 785.289 cv
1116.41 787.527 1113.88 789.303 1111.12 790.658 cv
1098.12 791.745 1084.59 791.523 1070.87 789.53 cv
1085.33 786.606 1099.25 770.225 1087.57 756.667 cv
1082.48 750.754 1071.27 746.994 1064.7 752.71 cv
1061.37 755.601 1060.13 761.392 1064.03 764.393 cv
1066.16 766.03 1073.44 766.926 1072.29 762.18 cv
1072.46 767.542 1057.62 762.239 1066.14 755.122 cv
1071.81 750.378 1081.88 754.753 1085.53 760.055 cv
1090.27 766.631 1087.34 776.235 1082.23 781.663 cv
1078.66 785.452 1073.9 787.926 1068.88 789.224 cv
1066.94 788.918 1064.99 788.595 1063.04 788.216 cv
1054.06 786.467 1045.23 783.887 1036.78 780.661 cv
1036.88 780.47 1036.99 780.25 1037.13 780.071 cv
1066.43 731.748 1088.7 677.306 1092 620.413 cv
1095.33 563.07 1077.8 508.896 1050.2 459.232 cv
1021.76 408.059 984.561 362.27 956.903 310.632 cv
930.999 262.329 911.525 202.235 936.812 149.623 cv
953.8 114.318 991.174 87.4927 1031.17 98.3804 cv
1072.06 109.509 1094.32 148.429 1091.53 189.457 cv
1090.04 211.023 1083.36 233.81 1065.87 247.816 cv
1050.72 260.077 1025.87 263.429 1009.49 251.599 cv
995.132 241.199 986.778 214.106 1003.3 201.701 cv
1007.19 198.738 1012.73 196.962 1017.94 197.253 cv
1013.16 198.284 1009.22 202.062 1008.22 207.201 cv
1006.89 214.066 1011.38 220.686 1018.24 222.021 cv
1021.69 222.693 1025.08 221.909 1027.78 220.059 cv
1030.06 219.163 1031.53 217.073 1032.33 214.543 cv
1032.66 213.749 1032.92 212.907 1033.09 212.043 cv
1033.51 209.923 1033.33 207.822 1032.7 205.913 cv
1032.22 203.098 1031.11 200.474 1029.54 198.688 cv
1020.89 188.985 1004.34 191.99 995.715 200.049 cv
977.113 217.453 987.069 249.574 1005.46 262.722 cv
1026.94 278.089 1057.73 274.245 1077.84 258.649 cv
1099.73 241.677 1111.5 214.822 1113.49 187.954 cv
1116.26 152.529 1101.82 116.784 1077.68 94.9448 cv
1059.61 74.8062 1010.21 44.3286 955.452 56.377 cv
930.247 61.9287 907.882 76.7446 889.823 99.519 cv
889.964 99.8218 910.605 113.477 905.401 145.671 cv
903.215 159.186 890.34 176.707 875.156 174.814 cv
867.999 173.938 860.599 172.872 856.149 167.467 cv
845.374 197.338 835.668 237.638 889.141 328.651 cv
929.773 397.817 969.765 490.92 960.045 578.606 cv
971.178 606.104 965.754 638.186 945.919 662.304 cv
930.538 681.021 908.97 691.926 885.576 693.463 cv
916.637 687.193 942.998 666.859 952.477 634.636 cv
963.932 595.78 946.944 548.695 902.818 542.922 cv
868.817 538.502 822.324 570.503 843.254 608.271 cv
852.021 624.053 874.615 632.93 887.166 615.86 cv
889.592 612.409 890.798 608.341 889.901 604.141 cv
888.342 596.921 878.019 588.956 872.553 597.597 cv
872.816 597.82 873.089 598.012 873.359 598.236 cv
878.797 592.206 885.981 599.491 885.898 605.598 cv
885.828 610.198 882.603 613.695 878.839 615.857 cv
863.884 624.438 850.043 608.25 848.481 594.319 cv
846.64 577.65 859.834 563.769 873.891 556.974 cv
889.645 549.409 908.683 549.914 923.714 558.967 cv
953.717 575.962 955.053 619.48 942.102 647.447 cv
935.206 662.346 923.641 674.721 909.348 682.745 cv
903.501 686.008 897.268 688.51 890.862 690.374 cv
907.117 681.741 918.455 662.6 904.385 646.268 cv
896.941 637.629 880.558 632.129 870.95 640.491 cv
866.09 644.712 864.274 653.179 869.983 657.565 cv
873.082 659.956 883.722 661.266 882.055 654.331 cv
882.298 662.166 860.61 654.412 873.058 644.006 cv
881.348 637.078 896.068 643.473 901.398 651.226 cv
908.336 660.835 904.047 674.875 896.576 682.813 cv
892.609 687.026 887.625 690.134 882.236 692.222 cv
879.177 692.55 875.347 692.832 872.021 693.299 cv
869.01 693.022 865.974 692.674 862.925 692.079 cv
846.666 685.473 830.591 680.206 815.17 677.202 cv
778.696 670.1 750.432 676.16 728.795 695.726 cv
726.61 697.702 724.585 699.804 722.629 701.968 cv
716.317 698.962 700.777 690.125 691.47 672.296 cv
713.961 660.437 738.624 639.348 747.153 602.378 cv
766.072 577.107 790.946 574.822 790.946 574.822 cv
779.656 547.385 754.711 548.834 754.711 548.834 cv
751.184 536.156 743.528 533.458 738.634 533.104 cv
725.364 508.972 701.321 489.559 670.203 479.75 cv
660.846 476.802 650.599 474.736 639.851 473.828 cv
630.281 467.993 622.048 459.426 617.954 448.887 cv
613.03 436.224 614.647 418 627.16 410.145 cv
636.932 403.679 656.925 403.182 663.266 415.065 cv
672.777 432.904 644.096 431.713 648.044 422.779 cv
642.873 430.014 655.773 433.472 660.474 432.162 cv
669.118 429.758 670.981 419.138 667.345 411.984 cv
660.154 397.838 638.662 396.529 626.02 403.026 cv
596.76 418.074 609.553 455.823 632.375 470.36 cv
630.267 469.752 632.138 471.359 638.691 473.743 cv
624.97 472.694 610.464 473.573 595.956 476.991 cv
580.623 475.06 565.935 468.142 554.913 457.209 cv
540.9 443.204 530.372 420.477 536.816 400.635 cv
542.514 383.069 566.506 365.455 584.245 378.281 cv
591.261 383.354 596.665 394.052 591.62 402.218 cv
587.431 408.999 574.816 412.003 572.639 401.792 cv
573.628 414.292 589.487 410.33 594.403 403.149 cv
600.03 394.955 596.276 383.503 589.977 376.86 cv
573.551 359.53 546.003 371.45 535.024 388.867 cv
521.824 409.804 529.868 437.091 545.079 454.712 cv
556.576 468.028 573.163 476.608 590.518 478.392 cv
579.743 481.418 569.027 485.897 558.679 492.082 cv
545.395 495.74 531.858 498.296 518.072 498.105 cv
494.737 497.786 470.748 485.706 464.827 461.422 cv
460.925 445.438 467.818 424.25 484.311 418.032 cv
494.022 414.351 506.232 418.18 511.463 427.351 cv
516.656 436.714 505.176 453.866 496.054 443.123 cv
503.845 454.933 516.357 440.353 515.732 431.16 cv
514.94 419.747 502.348 412.087 491.89 411.747 cv
468.697 410.99 454.9 437.707 457.468 458.036 cv
460.851 484.807 485.383 502.053 511.026 503.567 cv
523.735 504.319 536.317 502.297 548.586 498.774 cv
543.876 502.209 539.266 506.022 534.805 510.277 cv
502.239 531.386 462.551 553.525 428.005 532.497 cv
409.601 521.294 403.545 490.439 420.48 475.057 cv
428.24 468.008 442.587 466.572 450.317 474.608 cv
457.227 481.79 452.776 500.664 440.728 494.104 cv
450.87 501.257 458 486.709 455.602 478.356 cv
451.919 465.525 434.84 462.419 423.917 467.039 cv
397.573 478.186 400.303 518.013 419.241 534.352 cv
437.009 549.968 463.749 549.17 484.828 541.864 cv
499.392 536.818 512.658 529.097 525.255 520.305 cv
519.299 527.174 513.661 534.896 508.445 543.576 cv
508.342 543.751 508.244 543.933 508.141 544.106 cv
500.558 535.627 485.58 542.177 481.236 551.685 cv
476.578 561.875 475.254 577.031 482.436 586.417 cv
474.144 585.714 466.073 591.437 463.84 600.105 cv
461.003 611.105 465.358 619.282 473.088 625.432 cv
464.221 625.006 454.763 630.382 453.667 639.89 cv
452.289 651.88 460.029 661.766 470.578 665.911 cv
468.707 666.686 466.947 667.673 465.769 668.307 cv
460.251 671.251 455.974 675.694 454.216 681.857 cv
449.796 697.297 457.973 708.275 471.339 712.717 cv
462.051 716.056 455.582 725.292 456.058 735.752 cv
456.726 750.447 467.584 756.303 480.097 756.882 cv
472.799 762.425 469.701 775.412 471.235 783.022 cv
473.758 795.542 484.656 801.345 495.928 800.713 cv
488.075 809.202 488.279 821.519 493.38 832.745 cv
498.137 843.234 508.004 845.114 516.918 841.345 cv
516.41 842.008 515.995 842.572 515.703 842.932 cv
511.596 848.048 509.124 854.208 510.837 860.87 cv
514.893 876.59 531.434 887.568 546.006 881.141 cv
545.5 882.37 545.111 883.548 544.923 884.442 cv
543.661 890.368 544.05 896.996 547.346 902.26 cv
553.732 912.451 565.26 914.69 574.343 908.465 cv
572.477 913.932 570.321 919.367 572.45 925.184 cv
574.824 931.669 578.936 936.75 584.6 940.684 cv
593.465 946.848 602.973 944.797 609.329 937.705 cv
608.524 942.852 608.17 947.778 610.265 953.032 cv
612.117 957.69 616.876 962.342 621.244 964.651 cv
631.973 970.308 640.806 965.181 645.369 955.509 cv
643.779 967.709 646.113 981.292 659.708 985.552 cv
670.15 988.823 682.197 985.4 686.785 976.029 cv
688.018 984.6 694.163 992.622 702.458 995.422 cv
713.081 999.004 722.063 992.395 724.787 982.688 cv
728.212 992.688 732.478 1001.22 744.922 1002.27 cv
755.549 1003.17 760.156 994.98 762.246 986.333 cv
768.283 995.139 778.691 1006.61 790.333 1003.17 cv
798.426 1000.78 800.388 992.461 800.708 984.8 cv
803.412 987.925 805.427 992.256 808.081 995.137 cv
811.638 999.006 816.76 1002.57 822.24 1002.63 cv
832.378 1002.74 837.557 992.388 836.493 983.203 cv
842.276 991.831 851.37 998.699 862.447 996.323 cv
874.188 993.804 879.804 983.162 876.144 972.17 cv
878.45 971.446 880.748 970.72 882.932 969.95 cv
882.785 969.533 li
885.933 970.321 889.116 971.046 892.342 971.675 cv
969.662 986.733 1068.28 958.346 1149.76 897.643 cv
1214.25 849.533 1254.31 790.708 1259.63 736.337 cv
1263.49 696.755 1243.4 678.494 1223.34 674.587 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (GK) ()
%%Title: (10_03_06_henna_design_10.eps)
%%CreationDate: 9/4/2017 3:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&Bj2OuOuE5e51e?b5lr!X0qpER1TSqcM\g1`fQ_8:!X-Rq_Er@:mLRW^J)e6f9?9X.\rUL$B;Xj66]tH794Y,J6sdPfh`3^P
%C*2lfGQ*#s2A<Ais(,I3f.[08HM):T7I0_(*>^f,-O6ckhHICpffD<'kj3N)a#@cAIl%[O/'T+19=+>p[D1Vp]f*X_gt\*+k*Gr.
%L[G&k_bTs!frKfr`l@p4++A>`:WX"6F)#&CgtY-IC9>VLXf\E%q>2oH;LIU[l`FJh7O_\%(t"73o7M\+=j-TdjSKaqSb@',g[)=0
%LEEG@F`&Yl8(Us8:&T^W9\q#o9ZeGmMllC/aaR#U;`j@m5PCshGf=cAoa!.iHn*3m%0+Gt5Pgiuq[M(?1C!l/g26U4r+p.oc09H'
%ee[cbWuXN-F'ei^dfX4G")++`+L-YS>6d[qc!H<T.=9\9[6-qSpV>*T=4nO91RW+@Xu9dr7LZ[9Madu[P/!irVn:j_XkijPB'jT=
%\^fuB9qL\Ef%Y\sB%fp,#6.;FG]C%HlFo;qpLMhH<DiL!V6e_+f6p=GGduYLc46uds.+JKCj(#+4e^EOrX$$lB!(ELjk7blEq>>-
%a>$I4=ZpL?^?iMp:hQMb`QMg9YlN@.=>RDTeQruer&V?CeSF[b]V0Xq;&%ZU25.t=DL8:0GdA;pnbH%k]lcr=no"Gf'53U4s,5G-
%dPtgh]jC$/=p\\'0<C\X7s8][*T)6`\@'[D^]r^^>b)Z458;i/n*HjbT)QUAaX^,HdPTVGq,p3/BHQ6Q^\mDcriQ+2[XTKNI+7PR
%*%`1KGCKA>jP3dKUK(N9+1>q\`u=t=<L[N'ZePAje(p3pQaU)Be&1!T[Z@:<Gj5'2X1,Wdp9gmm5C)eben2,7'a!0jX_rNO?gngb
%N7uHmF&Q[%^\@V1k(U)kh.lr[/:Xf$H^X&NS&jM`?_FM3%Y&9]GE)l6XSjdC7U_./c#/$YWa5HqrmI$:4aeV;[X)jFohM4G,?Yer
%jnhc_Yf"8K0(l2UDcakDlYu1"s*"A6FQAgK[U"cXr]&Qom'i#dqX5A>=VGgjDsk*cs#BGS0"&J&c2IV7::GMUgYT$VG>F6CCG.c?
%rVkPAr4P>c_8#M9Gk.$@dVEt9<tBG%L;00<SGf+b97>qEr3cN&UV8"'r87.3ohDU5W,I(`VuCm<o0;^peL!N5C(!E,_8/@Fchd*)
%iRl?@N=-4GQ?g)j-u)(crM87bSXu\'_%ANLgA5^YW5[e#ois_0V>i)eD,>,pbZmK/nS_Zo1^P&@X2Dj;JI%%<HD6:cWF)sbgb8]M
%C2\V%j^0D1U!g!urdisuaA60>m<?s;C+H^d+1'[e4S&3b0E7IiHmq+@(JUn$dFJfQ1c^]df#HE!g'd.!Z:Y&'4T$gGOo_'+g^saq
%MLRnub<jFH5XZF365?8MZ,R$I'#qo7f%r=T[bqMW*_O)iaA9P"iIs%&KYg-akDd]QU/h^Ki;7)arLs0X&^1ZTGIEWj8gpm-%P\Z3
%)UXu,DsV4j%*2o9H#,lM>3YB`-?&WloV-/i%,^"XK6R*XCNp^`D6o\B0ckrq9$oUeiPfS\_Zl%Fah+:(Yr6W+nqM#7o$=X_U)2RR
%:^NWI5AE.)2E?s[9GU!e:"<k-HU8u>[E87?\P:I[?Z^Tnm&+SWd.J1Rouk*V-0c)"qjr!11HO#ATfPdF!%J_dLcjRWPHigVWh6ld
%O0s%_e?%:48%f,VQJUtaY#D_G]OUG^Q^nde\q]*D4[-ecoc8GRPc^D-WES>(l+WeXJ&0QmjS&B7l%ni0WQj!`SGCiAooC2;JnAe=
%Z>t5CY#aEcq<sm6O7X"JE4X.Pa^"i(#X//O=bGmup2>EU8(=9n&<"j@S':Xlr*qB9PeXPD;?$iAZhML(S--)n%m.NJni**;anNo=
%s!T8pR1K?nq<WE39]B*f;oMiD9KmFAX<u.SCD8B:0YN0I$MSQ<+d4f<iljAh<,uI901cV%AP36&qRZ0eg8p5J5B();(^&6uG^\/3
%qdLn\F<YK>Iq@\R*@+mD[sql[c?`7:K[$[ET8oiLe\AOibOX*M2J79_g?!8$KurtJC'*<ns'O;/00@qbUG&E/=0@S&B!4c4;`1Lm
%R6<';B&BaB5O3-nIdlN)[E3n?llSiT)%e@Sp;T\-Fe#7g#d8.;^\'HKkpll72L!pQ>MW=+:kar_a\qg3N.:O"J<n5?:JMlNJ,ZS'
%4h`crRKr`hf%`LSGK(_bJ'\eo]b9>4WooBA91sE[3G_u5Q1d;/H`aDC/Q:3m`]mpa)f9nlc"/4N1pc'(4l^?21"!i*5EdMpo0kCs
%0?WCBU>=VWDdDX=>\9o6`sL_.1PM=5?(NX@mluH_1!e+.j'Lp,+2ImT91ed<E>(ALA>l$9b>[\Ua15VLkFXW's'&"hGl.5b!.Fl#
%i8hrUmEPYmCn*6?fb^dQrcrj>\c)M_E9p4ll&SJ3l&U>8PSg..BM,n=p<N*&\7EA?s.7@2hVRPb?>=AWk<EEj_JSEsSb)!OdHQL"
%Z/"($BmBJP;]L8M+/;5c40Ed&\sk8Q<.5a\r4c\`5$<7%8>G74Oga$CR/3WbA$GhpiW*L6rqtRTH\@2Sk_Z.T920L&U&S%TK^jiq
%^WY!E!Fd)Qk?Mc\#.sn6ki2^KH.Z9qCNKFQJUbfn0+`%@q^:41"(@R`46M7Ps!]b:?lrSX)m-6=KnZpP#@-Oldi<\r+#2B*KmMp\
%f002Aku+i-kl&hp?ZmUErcZ`FDtbl^6hgKW1F@>)jrJS+45JKXEVm5g&a=N<s"SiPKkeVWYM8,bM>`JP;EAt9Y5"VFYiG-.rt49N
%B_@fuc!Kuh$mttoK,NQ=!PM-saar=+TDH)E@qoe">[-%A>.'^!J+nbcC2UB`Ga&M[RAUYC/QIqOL$%?4c!s#9LITOtp*5U9n^\=D
%\CK-UokFSKNP7S1[hNU.XlJ6kMro#_eP4Oq4%2i(H=6EAGBD9F`$8st_dcng*q#NuC:i%W!]o\f87%gAlDmG"Xf^((l:N*SO7uPA
%9:sr)m!$c.q!h4ZGP4mr#8K>Eqm'i"W80Gh^q$;qge"]uTB)**JV?'u*m*so[gu7-#N7tbqqUpY++[>HkVTnU[8#ciR+fP/?.jdX
%]l*H2po#W@]D4s6Vq^'k=8+q,iCcTDoZ>onB?MB@[Y#g7Y]%!.[.`;(MSs:Ig%f6`,qj*i1j=E;]u/.X?:X3l8!/@hS)*<ObR_<k
%G!^g32+do5a7A=fZOd%`eEQ\bEM#=Y;fqrEouDmaA[Uq)EKds#"8.,ulZVtsjmJ4qpUq\UDs]c,p>j[XmT+OGnX+eI/[YD'QTL\]
%I@TWlH4T^oM36iI'd'cZOYm=dDL6Ft%o;onX%C'DFcR]-HJK1^$j4sp*qn;F3D%KU9<Lc\QsI*gAY5Y)@)A$9nJP)u#QO4_ZHdOf
%^46me]?]OD@lUJJDWeK0pBV%bj'ai'pct2/Ic`R9!7Woqqp!%'&No!`B/]M=7m^_l@JsC9FpE:W_iLl`HrEt<WkIcK(=q)e80DOa
%>^r\sa5`L:bI'r\W3%.!2e@,BpNg\MM4r$#5J^T[Q0-K;&\@5JrgIG!AX$HZ$Y`9F%ZYjb/@>-F0D,aY9]*CBbW4Kd0"unGp$n\:
%q%CmC(eGa=_qs<<rHRIc3lj&Vr`H].`r7[Xrpf"-J.>,)Te64l.2G^>p1<uOPp2KI!kUAJg26i?54p1ks+YZ@56mc,B_i9V(Y`2q
%7dg8u6Q`VX=)@_RccJ5?$Eh/AZ2F&SkUM1@J+5g'IBi^.&)'='iVY"tdJePih<VAu_N]QFc0P[NF2;@[HHcAba3$3lo0lHG]C-P`
%Wu-,^/paPO!1Wq`a3<E[U]1@G?1:r[qXe%^PT-@!+0YQT/s\J?mHr'MBEl5u3VoL/hq[">.X&<Z]$m_?QEmjNqT6a#B-6(&+7l5C
%-i8O4p1c,&c-`^:m.BSIrU5Yk]kJR+FacP=]0$1$g>?%3PATFb:CWac>b:C32/"*)?cp>_$\)od?S!sCd7u"bXc\$\["r@MabNVM
%.1I5@p)hJuJaOsG\_$2-:ga&0S8RoQnHb!X78[1I0E0>>)%UgM1\lL762PW*_c_SFL*^$P>Z0h`Y7UqXZd[`FD2hZIg?c.@n#u]'
%>12)&pY"obc:6i=YC3c$WaKC_T'k.^Ss@\H-Jcu#=Oc$<@[HGRDU4BX9s(h6Io`s=gTB3C%JRB_l(4Kq+-5su#pTNs]]e,#XM3FR
%3]$h4J(!"8&m&qcgph$k8'PN7TM_]SS_e7bHd:7J\o&SeZ$4%4Cp\No:%\JB;).@T7lps&%8le%>Fk0K`lW3n#]q-&*hW"D[7Q+E
%3bW^2Nq&><aj3"EIf,K"qYss3#G&!gW/30D*Q$sn3q'tUh5pl4U&F+Nj1!3mYh(nHI-5o4jN\_0E<E'N*S3YBUGEo$><C*dWI&t;
%dE%9TKfeXE\pn&59ltm7S[a1OrdE:H4a02QcCq=K:G)P:aQ]YXf[;U2o4BJc'^0i1hP&],XRL51G@A8D0@=]g(3V?5\t7!n63#5D
%!i2H"UY.eGmgXF+%O@()[sH)8FMU9nTAA]pqni0Sj,TW+h+$<"ha"T3$T_A$HdiogG=U,uJ;;&;+*?<Vi]j3ko5S\5&]<#D=kD9Y
%IYkF,4.\f!K9l'gF>JGU)Tdki(lgO6&!,&3BC0fJ^\Po=KE+$^(=@+FAT\5<cqpA%_d;BuAE2H2U!M<h;0TW.m)1kV!!D$Ma"hbP
%nUKgt5-sM0ThR3<kap[YRXRpKZI]rLrkR.3kmWGfFU.c;Ld_,:V!uAG[Df;Qej3ue=e7J>>j4p,g6'Td3`=?h,KI)317dIMk'j?a
%IP0u3*cF*)4B8;6ofj-fEa7Oa]SORm;?ggm&i.6!rTQ@5R6"Acj>),gYm4n%(lfR)66;"84^X;.-of]G,*nsf;c1eIU?!_;JL9-G
%_Dbjrq</dn"Z4]ALb#$>]g)m$$,89per1rB@sAnFo;:>bcPPIb>LdN`c@=[Eg<ni3cZucfJ:[[6":b(MjcS')KVf7Z_A`_Z3I;g@
%DC!#oDYjqi_GTL+4X*REp4Z_Qj7^dWTPBRLjq&[$?'LUh>p,pTY[G-'!Yn0]$+!2f_PIN_OH!L1\eh<`Pe7D+?AdL/($.gO'C577
%fGYU71nCDdo40M$*1nlspp&u?@Ae;jVdchZ@a\mUPHPnjNS9lQ7W"hDL@A72_rUZ`e[5od[GU>33"7FR6,kmA0P0%[-V(NuIc##:
%>5a(.WjB>M]WQ[-ritMmc>)U=Q[\hmE3mkN='AhqPCnE?q2]d!%!k1srbss-:.EsqF&f\8/"Faq'u)]92RcY4e89*>%&u/q[h8c#
%XGScPhQ!JUbmSY-n.`\H6Vi.1/Q7##[f4lCVN5$BCR$?QgcY"):8'ikpNt6jhRK"@OmCnYAr$92ca8cXGqXU\aYSL=k7@oiqjt&t
%Yi#BiSHmS&p$:l%YFZ2/(B-u<"Y7f3e[!p,%tg2E]!N5+#E4rjp%e-(Z.l+A$`Jrt[9ELP"cIM\b;ejY`d)@e6cNX[F[iLPpOk9*
%(k\liS^(GGF11\eD@M!CAu?-b[J%@>qeN>%G3dXl2W(YWAom8G91u*gCi'6ZLqhO,o`ljamE,:hqRa@`o>TD5a77`uk1/mjq=X-?
%n`B]"Z[0=^-EBqPa"Ql<>eT$Qm>!26r[_..Sa8P1GdMkjkF[7TlVh.+lh0Sq`p36=-Y)`$dP!gerU][]j>1q*^\`E#a:D@`q"<`R
%nSr2KI^o5Zr\[_?R_Ra+Ua)>\70e>BouCuLo#%kNr:Rmmc(uf_obN%Jcc]PenE[)tIei<l:&MTE?g#Spq2tS/3JNmXSh&F,DTbgS
%GOXokq95ULNO^#!bB<FqHh$=bhQpI9]($2i5?MS@^RW9H*3*@^]U1^F+(br]qJ`.YrJ"ZdiRaJ&?g`B4`",T<=7l*-GGE>gFZ*+:
%(Au!_LPH8l+7K+FILSfZ%lRa+@h3K2T$0(_ja5VNq:V1D\X236Y<I=fJ)/7n:O[\qETQ?[`U.H%Y:`"%aZjdq\=P*)aW6b?)mA_a
%`MIt$/m`gQ1]-as]_M*EM5)TWq]S(9mt@#`ms_YTl8/%<]*EPXX$)TcnK2X*[d_gjg;<0&^M;fE?a"Q_FiMJ+f$g8ELrZ@jM+mTr
%dneE+f<./qh8C)2I[7`"]f7$O6)'cs^4*905<N_K8+Z1uI51J*le]SXK@t7b&PY0,^3uGV]XrCN_*mJRogeTq_O()3Rp.i>Is]e=
%+/#R]f<0_^nE,9JfUCIi2L!O$3I,lHiR2HH:H)W6[-p,k3W3>sg"cUNDmPg[Yl*unaKM+MrqYaDhNOl1l+=WHO]L`9aj%Bh)tsjZ
%g,iN;#Z;Xi\D(,%*T&@gr4;iGrr1/T?h\0)DGRn(i4XDYAiqTQQB!&j51mqoSBO-E2ngm@q/q"4-9cpo\?rYc9jTcnIt'\ThtL22
%MIQ:(4.khV/t(t;p^maBm.h=jp2Xe`rM7.h4o`<85FOCaRHaSVf/Dd6RE!n=p<8;>EIMK\mb*Ro48L=]q9Sp4PaSM3M^D=DgNre*
%?=/*?KQt*:p%l?L4cFJ6D:mA2O(7j^B5bQ8YMY;j8aO%#dNtI@acH46r8D1abl/#hB(i.k+&D9gpsTY-]KT17S+q675(7#3=oF5K
%hPad5j:kDF=[f%9qR)gGU\a&brV,ua#O@rWor#8;p$(XLoCX'+5J=5GI!G.ghUn3`WmC+?n'n[r[HD[R>dWelGje6f5C""/IcC'b
%HFP^/WEtt<h0O?r-*P@EmW&3fX88ajX\BT'WSa+g;q19mIBm%kp\N01rViLYY0Z"<^0"`e5Q84m@%r"Erc%8ZrVGQT7j%"hX%24C
%V_]]Ap#Y>dch1rFVPi]p'4Im>Ht0<b?XHuVoiKi$=7t/m?cVGM4#\51J,Ob-(SCNmp/OuioR-[+rQ@i`UV?9p`HlsumEq3qp=A']
%qQ;6;ot?4KEW+hX]5RAfC?&1igZFuDp"g/TGc\X/4;f)&RU6r%Qlhq;S(rGhC2A4T?8a]_I.bZb[aMfGQCF-Aq956+HLo6\q<Zhr
%fWCWu+3*_TCYg,EhgP69Cgm(WqUi\]:Yj[Oa//a>jU[DRa&]ZMgt7P`kD*QNHEU\9^!#J*+6N:;`]gTX5EBY$aJZLc/_RE&.s\tI
%psI-eUU>+KTBTX.'un;F]3!!"gqDP6WV4?$nX9(>GhhBKb&KY.:QLhIc/\?K?Z'_Ahgb1hfC?gm:KGLXY@eBdQf%/c).3:1gl9)H
%H=pjfh>#L-nW33RCqR=0m#JPuedod8g8A<>1ZO6D(3[`Z-g#TTN31sk^2iV\_TnG2:QK\&A@J.Z^#J@]%^*_\T>+[Bqt-h9ARWtk
%]CIqRS%5g[rPi2iET?i>PrF\lO03ktID'g#H#ro^Q0jj7]3"^?*1pIrl9/leXku1M,G2M-nb1Z,e`i95+0M&Fc,6TU2`H0Xp9TUf
%=6HpWorF-sTC6)lH$X,gl?^jfJ+_W"n*SY$qg75'DLHAWX'\)@=hB!e]m2;/heK`ZCO9:3-Q3X'7h`$B]/=SLc+K[Yhk$=%cV-G.
%YFeRk]\PZ>GWBd(cGZp4+)O\.ZaQ@UC&.K:LPp'h'.5S7DlueS^R;Vje!b]3c+X,/\9@36XUj%GT6B"tV:G7@CMP$[hRiKY4aD/:
%e&h%#[I*I$qV&dVdcYDZ^&.Q>%BnU$;kIlBa1%6UL7=BN^6ZIS#7kadSQlaJ3Vi5bI:DcbLZ[a[eruljao2#d9_RV@N_NfKDf&7o
%/kiHC(!FdEVs\soDG34i[WjpBf%A`GHM_73c.&(TrTR;YmRqq>lJ$dPY?tT52LW7nnUCC^ppg+dqRspen+u)B9'c?FM,*[=]2%\@
%oo8q4L[0<SO70:H3hP;*:JL5(S@3"loCT0*@iNmT?aB(`B/^V#Vr+Sgm7oU\Niu3->q$`A]s/BP>'siNoD&4mqf(fQNS?7[pGX-5
%5A]4Zh)lanna>F@IUhtBrntf4`nm2QZ,;oT1G`,$:<sV5BBEggSpbrAo5oJo1\9=MaCi57GdB03f6FP^F0bCQesN%Y^X<B$)uGWl
%]1;Wij6>mO2iZG4\$%WW:L?8&lp!McT,i9Ahk$BanR?":g`#pn$R_!"c*#pijg2_9HLbcNaO/=_>Pkdi9hs!icLP&sHeCR>I$d(]
%Xc6tsG8B(H)p`St*Qj/^eYUB!q2@&SVIn)Dor26'eBCt;X%m*JL0<`-_oHPrmF?.B3G\(gS$mN&&,,D>Khq1(gZshhG,r#WfPesn
%fCGo[otro%WA"(!s7.XH/*<Jb+6/X`q:F`!dZ(qC7:BgfgKU%gGA\31m`E**1&(D<Q(Dd)]5m7uo..k1HLH1+a#Cu)J$cG!e\@PY
%Sar7+4.6+lj*D<??_>(L9(V.aGW7q"*aZQ_ru<rj-hkNfphlh9rkX:4:2N.IKR<@Ul.b4j?+X0SFZ\35j"1P+Q.7hTmDk9Kb,5X=
%Y5It\X_25Bl2@f*I.b45[e4_oc;2):MU*C2hMtrH=6/G/[r:'7hL>4sk08ZkF^\YO*o24qg-*%#IX,R'5'-&4e,@QD\+&V?Xi87p
%a1#A-IU'Upp#aB(>J4YBk&rXCmVguiptEHq[_'(l]30TM])?LCf.V>[m_)i7F8,O^e=C6sh9A$R?XJ))kNIcKn(r<][!VPmil9$N
%c^nHM])2<T'p-5eU\<*R]pY:B]mFsqF[+_e4^)1(f6hgQnQtsg)=PnS5+9/L=6/!$Y>8K,hqpKI4.<4"qRAJN2rD+-*c/OER<u:3
%Ap`t3[H?oT[G-%8kMu/tKDDE8=a0kor1ifXU[I9OHtK)Bm!?B"B:&'>XS7$:(:H.C]jAABp1.sD=FGA*pgge[=T%r+GAcs7bKB[6
%fnm?.#P7'MW<]UjeE7m[Y91E(GjWc-j+k*UGN6SRXh@dH2cb:GO6S[%mQC%rjekUA;pXs$7j"pPXuuP=4k4tN`MX*)(Y?6FO5K@h
%\GQ'ZqYndgNL*H00$R*bI9h0lIWJr^COFW[13I&u4h9;cT74*FEqeUXh:Jd@:FB6$+$[I1l_i?1`A!=h4PRR2ag1e]q9EW2nnQA6
%fB04hn%O8NF_/_F?a&7%cS)B4I+>YU?fu@XT1p+`]?fWVKD3^Kq!i"C%W6bu>]$Q)]X>?G.C6)Da%gNRIXA;CD9_K,a4HXFI5kC,
%h##TJ?N7N`o"9A&)10(9-a1[*So7D[W>Cc)CY=Vmq:FWFlZ2^UMh>ZGSug8H-=3f=RXMHGrb6N?k[f2/_t;.Cjh9D%f5=?d^>.si
%DnNZqq0Mthr;3BN?i@Qbs7r_`b?K=srMMa>ouc^YQ.Ob(&&,cGRU8Poq_rRXgTTK3>$`4re(qb8i,*`:na"r[l,d.JGP5&qhbAU2
%;S663phJjFa7m%?[GG_<s*Aa1q;/;.Dqs^WHLP<Wq7YHF^Ae+G^@UUfeu+M>+/\IBeit]jD?'Ik_oC*[O7eQn$2Mfc>L.2)I!kU7
%IJIC9jaQaA28f3eebZK(TA%9W=.^G8?9S(r1hhinRr<MK^J)27P:m<!B(*p@pV"i6Q)0HNc$T1l^M3[nIr2lEZF'=Qj49-r[>idB
%YLb\Df/I#PQHsl\jYNCla6*>4kNPlc/)8eQ](LG,lY[`UIQuA':GUg2]CY?9COb<oMs^H4\'=<j2fDL#pU9PR41WV&G#m3B54@hY
%GNug9o>=eECU48LGPCjCh7!27FfYK=e]mjU_e7.h9YZ=ic)%W0+/TR_*pkN7fo$O@>C3OikDHt5Y=Hk9gCKmBqsR9RlX9)H_;0b@
%\(;-#51t]e%^/UHCPNG'R1G(BZe:npNM=hd4F*I3l0N<C]mXFtea]EBp!7!*3n*aLnsOFXQb37OS#,7L\"5N^h><1mYIgF1(QXTS
%Y&;;[GPBStAHsbjp!;/(RDP`e)WTVGcXNjA!.M.jd@WjUY9+7/:&=@Pk&7AePPnhbBYQEK#,X.hn,%0#moq"j.KdX*cW'^-%K2up
%q(2HIV&N//8qO]V7/XgmW4D0?\@h@T^F%VO\AI>p>5fc3dNW,ie^@poAkdW%QJT4()/_]a29O`4J2,Y/I"sOCYN+sB0d+d!5EP0d
%%MV.Q#)WjK1/mrLpCq.`)+)[oWC:4Va@8Q<?IY=#c:B/e&f6rhb>^Xrnte$GFhn>u'DHDa=\ca$cc`<BGJ@,5[X\,)nj$&E:A=W8
%OX#(q<neu$);McXqjlUV(q\;;<Ls01p[.%.IpG:tInX^a^O`PPc+sU=k^;?o7j33HA8j.S:e'1(Y0#OTX=-pn2"UYadXP[IUN;FQ
%F'G-UI4hnB;V3]_%;XX1>pH\dYJn^n>\rs?CLUEs$i**.0U([n@>^H((4Q'\=bK6m>_,r&<q+P@B_X@SqPZ?]A<TH>d7eFeUN@YL
%/SI7^@mFhl)E,L>5"_#d<W4:T*,DC0<tn5e()_CDd%LBAiIb7H19ZsGdE&(O;sn3b\U;oL'V*2XJdb?X_Z=B^6V6ln)$m=*ULVZs
%Pms)%gPXE9jDd*"Gb])4HreN,#)@,A=g7+)Km/N^bkMLnn9J&,PC,5%BTi&Z=uTY$W)7TJ;+Btb(55F]<^rOJbT.'h'NRD8/R"kg
%lG*Y07!Ts!lX\:-$??\Mm![/+e&[1XMDB)a-o0'`+#qT@O<k>QRZhlu:*'hK;$9kmG'PMu,i^<\X8u\sYsbkDO-W*WfM`S?"^r^2
%N*?LAV?6'2)cC97"i4UOV/;H"VH]7ZhDeP2[RE5\fg5G7jh,+p1)G48QD:YrO*YW.d@CSh_o7-RNU3JB&]uV]^mDTd\#pLK%+FgC
%fY4!\Nj`U(_ZAph_tfu(/162*)qe0&9T,BM.HRu4B$:o#kb?+"M_ZJX?t3`G%=,:^%A0&0$^o2]1EWa2C`W*UX?[!;aLOo':7f^O
%*)%=Wcbf-k:1OHI4bZ(-ZZFgd1.E6C<"6i&j`6GgXrAOrSS(eqCPg&/2H*?\a]GDj3-go3%%g$J$&&SYO31N[*_TjL:ak:/b)$AJ
%jmol_jH`L`pPJP(QkeCDH&^-@rP:Ct6AV?u>u93^@9R702*1S'*]Rc=(+`fG:%A@&$J6(O)/Ue+M$s0UbsU"jFFki"<VFY#=nG^X
%Q^-[=nuXH=A!']MP4b[aF`W2qYq+oaLs/OE_@6;tM]ukXoci>H+BWQt&;<AsDQq(MZH2^_L"8Ugl;l"*pkkE\_37[I7ZigOR"0MZ
%14,?HEj-i7;pMI..+B,UI)$#K!(R\,'U2D:`X+"BX__mp`N[u3I7tQ=`Od+eMjMVF64%,:Z@FmW=dSO9NeS[3Of+le^6%G%6=G!s
%(j7@Xj(ugaq'23%Pc;XGVP[J_]X/H"8?HH(H?K^bo@ana^m87$WjF`ef]pj8cVpkQSAY$)808:ClT?b[%'1/sj)_ML+`d,`@`*aG
%@78ls3R8jn0Unc"oi$o)G1S4s$>U>aU*gbd-?+T1=`M?c-@F0K%q7sZO9%EA."h2(3dljbKd@$]F%/)]c@'FW/=-XcXWdoW3UOJL
%J&B_OA[sR)G,:H=/\0lX<J/gbYiHlM>D3%AF#%dldR&6d]9["9N@`OmaT@(b6+'&7geSfk$T_O\NH%u<?!66!%<D1;BJ)*b[Ai6d
%$2\`q*CbiMUB<5#qn8RhC!c/rA8P$VdpQZ$q[\#K3]V<@GX4g:)0.8?>m9e[8*nAoh=X)u/^gn#q-=iN;Zp!(1cB6%8/hh?=iOjZ
%rZ_;g+[^l#@FC%T@RFj[cn4A,Js>T*m@k1Xc,lo'a^hWYp2lY&85cX#;d.@@VH.UX&C;,te.cpWf=]NMcr<8mi3U;P9CbFf?&04c
%.;Y/s)6P%^47T>uaMQ\>X2C:)FsSdUnph2SG,a7s*gK)r6mHJG0a3^(3`B1;BG8@@,$@_QaXPe$Zb.if%Z0_MF=TjN'bcM+84`BI
%kX8Rk6?EakB<J`q>9<T7NZg`W9>WBH3JY7.Bm@Ck5=-eu>ii'F/f3`^hVj+X,)A32O>KGj&NMI-M(WF*Db6/&li]EZ:!r5KAA(\g
%Wb6a_?]\;+.6D-U!l>CkW'oZ@N*+).En)cr3a[k*#/dik:d'KgnGNE7CG(Mb8:klFMl:r/`,.1\[:Z\n>nGJhC,2WcF1LS)!?-^C
%8"g_:D%r_hg!?\PQ]]nbUS9?<V?/4u*Yg:tooZAQEE&W!mSaL,@)S3'\VsY_TcDKYZjea!e?gZ8rLB\k$-m$9./2Yne8CIr#pQ+N
%'<P/%T>\/X7UaH0WMm$%aq:LIG\YqVJ419S@Cc&Bd)L$R\WB/W7?LcqF@Gi_c6hYZUeXqW,?7P.N:&dGS5#O1i:\/d:f4/NaJ!QO
%$Ri)L,VK"fJ!:u(>EX4Rmha*-F$F(65Sk(d@/6bb85Qtl,RY8>eL&I1$][r'2iJ37#H!3/<2hOo.0<K[Q4TSmG-#tlV[![>jHII#
%6ugS?`LJut#a!:-6>$XW-Cp#h&q/9)i'N`oHeB7:/<>O;dgo;X"W/"]58ph$[1jLOeU?s/a&FSj)KfN9akrU<)R:L^9j)MqT2<.m
%',]OAcZ_CJOBu.c;4UXq\=>C)1)I7?n6dPE>q,D?20=WSIk#k:XI(.W5itDBJaG(:CV6*;OF<^p:D?[[C1:%;ZPE^$a!-Ca<7n!Y
%^n(tgR);lQ@Hsk@#]g_)!_mrTn.7"4^9E#[>5gW\Oc_:XV%&Oj,[1Ln<ZR,eU@MhKQ(=@0Z\>\0'PGnk4/^66E3-E:Y"XmCVrTS@
%1+*I8&q.pm8LSfng4C;H0lhEHUAHFJLpW"D$m@gP/XOq#BR*7/Ki&0@OE#IbjAi?P,qcSL0cJI;Th:P['1Vea`MnS(U"6ceU5VYd
%#H&c#kDi:OQsO54gPVV5BgqDI0L0l?o0d6<`FDdfKN5m`-t&`_$coi2+:TJWkHXW#V*L3DXH?5n8BPVEhGIZkr1n^E%TMFRR8;:b
%Y$Iiu",_o?_Hor]3CBN2L`nrUH9[b'_$c6kiNd^\FHX(7$i8D4GEBpAaj=GK?qqJ`,[*mu(O'GiU)3*5W"uZAj"3nAPbX7@WhkBF
%N@lQW?!s8Z!a4^%Pq;%(cu(Jpii7*Gh)mY:Cso>_LsQr=WmWK$_P/$G]BK*gN61Z9$<UGhg^^)tMl*Rhbu*7(M.L(G&I0bC8L"T;
%W)0b3X)^*)LX3%"b</9BjQlpS*-\cTaY"5!%8Bu:DM./d?H*2LajjXMTq*!iCT18NhuX:P7%Og8)2VJPM,HY/=Y^Kp217itfF#t=
%2/p]1C4h5l2%%^UW*T\4EH[#qM^sft;WtZ3:@18+^"&h!A$X2sPYLslBh`UM5`%sg.$EkA&A9?K1I@?uSdS.ZBsFJ6gacBi"WW5<
%N.@n>W&>7;>.%ZW$mg^*CdgXb_Bic"fHbPcp(ARL/CO\"$DWTBL8Cj#aj`\9@70T76+P(d_^L`nCWVFNhM%RWM?K/LV9L[;!SU`l
%0d[6QU"`':%1%M?W`%Um<&B`K_CI.50u,%RERK=$8U_rf_8XuDhu*&Kl`Yd4g)1F56PfX+mi?M>7lakT>%56uO1[/$_D.nt)C(#.
%VC2L8`'?V,ZCEqF"0d+?8<bn.=R);ECIV`DBa2sg2[t#lV9-RB;'m(^>D-nP.\pL8>adGaVJ>bg`sjjCCkPG'mc5R;6t?f[N>*dt
%3,0'!L/IWI&D^8A,5)Z'L-A5EYp\#+oZ=+BReKMmGYU"REab_s7$q*]GI!J?jKP9;[C!d>Uo[7`2NE_8f0>-N+NI$dU0oW@5O`%s
%lC&J_1W%%`iCZU2.?Ta%0#>IYjG-(p0ME2#(d5Bj*$,GtWPet`<eqEk1.hglW,!8n/2)UO"Ignl5<E/a,.Ds=A^n<_=eCn7eB8t,
%nZ3QV-$a&+hgk>[AT#nH8TJng:+,;hdul[M3CN+iE+l2)&"fJPb#(STaW*0'W(*Z"PL<F/-A:$,ka-ZT:cMn*<S9X41'e-")>4(Q
%2'p:OP:2:o1R)Hk:7"-VU%7Ku>(BcFfoTJ6!A7N&^i;ZeP\7SE;$^(lU1BPq=-nAe7PK;#?nP:j-u8UNOBZUdNYC=i0%gR4+:Aa=
%[/@9r&9a3`)0k^/`L+T(#fhls#>u3%W>8ua8!C8l+G172p#g\IjUd'A]a@P'(!$db1gdH_&Am99!m?[/%=D$?Q`JDo1BEM3>n\As
%;&[oP5\rl.BG^>tA9(SqOQRe#bGg+2oN%-*AUuEq.&=X&VJWTSkc9[:<Ep`Hp'1(cob2d-0Q%br8-g2iA>`6C/\%WR"MG"'T][0[
%Ju:qg#T=Nr4i3f'M(5sa=]-jTPr(fu*a/in@MlECH=t`OV8ZQ.8LQhf28qla9*jC=NcZb//93hMYHZAU'>f<l`WV5g:)(]E<qK*F
%#Ao=\).Hj<KLi`q]Ku1>Yh=X&c#PgP]:0L"Mr;d4>$F#ZZbdnY_:<\t1+EB+B=LJs>t@*C`EY%%eB4Ogi%RQ^4XD@9:t"E'^^,/I
%3b<VV]J1[cZYSOI$FFE@_5X]XGL>V>kVW*6$[CE>%gcZiiA@8P+@K8/_T8ra@<m??d_.o6Hn_br08C''GR,&3`lMT9L)dHcMhiqE
%4c'J^l<#&Q4$itB>GrsM,-f!8$cWZLR-X+uOuj-SO=Wh>@/qFAR)/h`!mVrX(ocU^*N<(0'Nh-uB']]VmR>g<C.*60Lh!)Z0U2^'
%<AFssASi18_R&af(Q?=!Q3P?g&WjeK>Ju54$;\c8N\mUa*6gCA8Z2EpV',u1N4A/?C]Q.@ViRQLPpsY0MolmtWlaE[pkSXMgnc?a
%gmr->Os#!_p]8a6l5R$\OIWPoXTici\<U!E(6Zgkl^>`-')i`u>n*]/J<hR<7)VmL%kG(2X0,bt`4'E8@Dt+n%5##MW=Q>Ms#'YC
%.W[s55>\n4G(k[;ER\`afTf<<pOaJ-U4crq)+diGe2MtK8(-r^c&Xh%5<)!)ce?a&*.;paO8(CJ(r7bX36DN01R^H9Z`t+TDBr!t
%_)mGIlUWWj`2e[Hq.R3$8j82q+sY(OYZMee]10rQ+]13M/q5!E8'0X#;L5,u+!LB6Fb>f+`/piNXGr0>>=PPM_]$lm7;7uU26:t\
%eBWej\7%75UcLJ%D]De17krtbb^,)?O(/#O>=0Gu^4=1_5fen=d1!p0L1!$Zd%)7DHq%LpL&jXdJOLdp8>C,rUB+)aOAA75W0&L.
%@Be8f7+OoiehFmT":/fX<bqo9C`%CT)PB!IA/g98r<O/tN1V&?Z5\Y?)oCs$_"IX+!&t$/3!)l8!d?U*T/[1s3"!2R$K3iN!ulq0
%qg%Aq**)8Wqp%Vc"Y:2Z;h=c)F:0UBFF^t;-8AZ\qdC)VOSP@SKW"q/*0eJ)0a9s(=6p7o4S#S17,8QgA/PHE^_k8SnaqZ9io.Da
%dhWio,]eK8P-]_BLonL;K[:!t&+W2+(55UVhF`6$N[<NC13gegMubCYF39%Bc8_;P8c^!r1-HR+E01fs#\B*hn6?)r'M:f^)1t2'
%)KdB;U!F@%_m!^4k_IN_[$?m5']ceq:-8mo8Va<B<jYJWCt9-?&NB3B8Q-*i5bUpu@a:dO+(b_e`[gmWRZ286\n4>33UA'HXN&5P
%)rY0s)`0s'*bhr8m?UG.SCaS[QF+`]H#arcMJ`$#Sm+&57Kp<G:phY[Ta;n+">a&HPa1c]=eWYpbf',igM<nA+uT^a0Ept.-I"OU
%oAt]B"M5dsA8RaK9MMZdMT?0#:Iqo:f,';R:pl6n<"5W4mE;I*8>mt<O^goK3<t6u7=0#63=*Z;$.2'?mt"`m3G4U0*O0Xi9E`>r
%!=#=C\:Fnf.o\2h<;>`taEHW>>72&l!qf/H_NVVK-H:]"'/Up`:(%SF%Y:%0oL]4E?Aq^dq/e#&hM7#m1pQTRQ:[Je-rC.FWK[QM
%QLjakr*i,Il7=GF=./j,7N44RBTokE&Ubh+JX.5I6r@5I=k4+j$aV!mdU[=i-FM&Gr01u+Wh<l,*@bIiT`7pgAdAn<OLF4H-H+)m
%eVYOt;W5M5a>L;[pJRdg8q@M*hj$#]TQI,)+Q(En(lo6<6dHUuWl]IYV`E)jE>ms@H00B`QYQjB@G_-@A1UIGh#f@i&L9_B;;-mJ
%"kA._l!_VkjQ*&3FK4R,7,t[$1T;Z%_mH(c:4s!?i2$Z>)J<5r';6c##kH]*%JmUL+BGbHO:YG-mfU!6=Noi3Nfj2JF^!I`"o]7L
%(G\OTA5pH`inPEbeZ-RNC6+bkL*c?r=dk1(3CF8`<N2^nBE3&-W!<lGTu4nYQj5p<BniRR1s*5+hgqd_A(.n!e0MIX#CiS#_:+*:
%TH27uN/u.0'kS7Wd07r,lRJdiV(_GieM6\/2#>7R:ujB6BiLjm'b[s=RH-(Ui$]s=)\!NjPR'iO)iceDRmG7tiFQgXMDA>N1#p);
%`25B&^;q:VQ8/Uld8U7&HEj5FQ.WkV/$3tH9poB/loJUjIl9U/"B9M&&ol'%So@^)I4Pn86DPN.QuZ(]jrcKhYgL>M&Y67"RELdD
%@/Jk^E7N1=-dI]E!O7IT6"/7k/R0o2&l!X_ecJ$@HAYZ]#>4D>C4[UTbkHfB"b(mm0LUo$K#Tf^PH5qClW1E;dMKc_Yu:*0"=H?s
%2!Kp%!_,f&ZKTUo,?R4"J?K@&N1bmBr@FXYf`[9[lqb5/WJR4@n!eR_o\g/R8DHW51JSN4$-Y;BX*ufY(lo6B:NeQ<P6X\4:q6ml
%Zn*eo%320ABd&,J5c#ZZ,/G[T6Gla]-QWa@!W8.g<?R6^U?4d5^g/Hs!H9KcUgt&k0,[8K6A:&tOTEAdOr7'm=B1XA<D\S$=5O4m
%7(#7HQllKtoi,+H9UB=WW<L*/e&+@]l!Yi932ZkQ[_N%R$4A#-Sr/`Xod:d]Z,TbDKGRDB$UmthfTtjP^mX8[YDl`VT=h-=p:M<p
%=X(&%e?$fjZppF'dNkiW%=Q#&>2V6fhhtT>(q-,GZRfeldT"'oj--S;Hl3nkAZS";^="'R5pVR(Z3YZ0JaYHoM9Z.,`)6obe/0MY
%Bunh1/'X/O5"0ON!pU-H$<O$a(XOc03"bM!53>9P3R+21R"PmqD]<9UM7q"J$!6&B'oM/(U!&"JZlcTr,-_Uj_'eoTi*sdGZ_BdP
%q/f;ANSoI^3c9s2MUi2ia!VnZP=Dc.Ku.>-s!1GFAQk&n!ii!gKJT9#/P*lY)n"/X>0VP&!>SMYbE0pl5k#UAOS)\u!MDgTpA-`h
%i->c^L="V:@jh>m9NOlG/g1m5;"oKRY!qo0+uRM@EKF2C($R.PP)^TKhBp2ii+c.)K:,Q3f0"URKLI$m;'^kAKZX9MI?uE#N2'\E
%b64boromj\P#45n-tI&dQ*3GP)dReldeX#@/uuVs?j<IL-DW=Z&q`isY"Na<Z;]kU)1cP2YEr.JOi?p;L#o-i=XPg(;>:2JTd$l[
%;]5P-@aJ6^E!6qV-o^ENK_!;"M8UPg=X:G9PjXaW#YQPDfaWO-4rYV*eY[JFk%M4tpXg),UJBn=WT.XW._o8Ta^1iK>?)E!;e?^A
%7>`:6$TSj\bJ?ssr4C,I_AX^2R#jV:Lbl1?=URsMJhU#&0YKR<IE/*)eBk/t7)kT'*2"IQP2r>3A]]tX*PDdK2A>uOK%f$Q#/K7t
%h*WFiO:\j3^2dEpd_Be!np%_k;fq($DIX;@fJ[lH4=T4:<b[X>[h:rgAr<PrC"(rjkc?e03=rON4n(4P\u::^PsFnnW?_pBi.d,2
%dKfha=0!D@**Dl)6i?;2rEP(&LB/GEVlPdcY(N_dM1Kb[?m*Xl25GXL1E:;>Lb>T"cs><;F59\*7BS[k#j,]T:W`Ac1Rnror%P6N
%>7sIC*7<n?dtbK.Bbt?ddUZKsK5i1H5<5RcjE6R!q+>e0J7raV*Zh&)q?qm6C0G&(RAYioclUaY2FrC.A?!AT#CXFPXCih)(n#-2
%`--_;LuOg2.q)/pA<Lk3c<9&*+B'Ta;O=)'2Pib(.ajDK/$[=0qFH0*;cIq"D=SU?L_OFsE1r+Y'GO*9@[!Z"Trh#S&+:X-'hI"e
%i7#6elk550TsUf`m,CEf[.E1;c-I_0W2O7@"hdik0%%hc<]$//p*#ND7@>?WE:6@s!5pLD=r9suopFAGQcV?!>6E^1-#-6c,%F:^
%$Rgl:f2k*m:j0,C&7'C__5H>,9=R+i+U3!dFVf]B)5#=Z!8O:l?k=^)Or=s>;;.+h;'rVVSU2E^p+lG(Z_AP/KT8JS.G?>ZTb1K\
%\.h@=02#58W2D[(.T'D]^do+_N/V+YBL9]ZP8;CKCs'#U7I>/g]R*>cOQD%GP$AKugsYJCH>C&s68V7j5_*U@6D;1nC$B78'o4,6
%oFC9\:KG$ae5a/XI%?]JF=q*(pj`N:3]a`5b>Js2@@lB^FRCTAnke%-?I=?n:+X"$.)GLh&aUui2jqb*VhJu,2[eOnb5SuNAV7L6
%ZiFUQ+2A<l.BtJun[hob(gRL2$@O<N'O26I&=Stsa_WZX:@suq`u'JLMF9lX0G&'ENFOWr%oml8r;^=Fkm0`I,1DctJ3>cA$9/4%
%H_F%kGEM_:cp'm5r,X`^5nqYe!;L0G0Gl59?Y3pqCV,,[dklX.#K)5d,Luq'([s<'IJO`k03+[![)!B]J12gPVK%R@o9:K-R8(%o
%kn+Mi*U(##J[4;Z=HHo]aTihSV?a?6."YPLC+=2:Q3cJ<r?UBo3R[`]_uY(9F^*d[M84qH"X%(7KClCd`b+.&cpV(?KJ'0UJ7YG5
%HdQC![n&06cikW9l,h#:ot30bU]ppkQ79"((;cdGeR]D=-I/^or?b%nN('<BdRduSBP5La((Pf3[P1NI2J6Fe_W$Y8Tj'65b4KC<
%N&ZTm."=3A8qcT>-g8he/o<RhA8msD;?9B-3kFCTO>/^@m28=h#gn@P9OZf_WUhQKRa'&`2Hc:q9GIPHL)Jf(:(!Dk2Id\r>IN&;
%[E49I%KZ!GIQQ.M-K66?-YP&Y*)>A>]ujaG@QP-'6OoS7!Stl.H4^1j&jHO&OlQbs]$QN[)]\qSg7#SRp8nd_=C]YK)k`&=g]AQd
%Orm^5(:$4[>hTb1_E*2SaFm""&.6:OPc"uqBe>GrbC)YX29EeaLKuBlQI%8B$Rg"R8DRT8oeRA$5&0Q5\r0tdAW]&7FBC)\0Ff;`
%!'04__>."`4.7k-K'*;$"Un'5.L69<"UQT7Mj"qrX,EG>%8qL,UJheinYic4$9LQRf"t'GGFN#gQYeuZ"W]N7]lfn,i-P[%/G(-7
%,L1P\ATm?si\D5uXn[j7>jhZ['mH"U?r!Xd?L:#b%E*2di,c#$*-lBpr"4h5]I+s2(5+it$fjp67'IF-J'+=Z9:r(X&2h6Z#)&GA
%6ObH!guSi+62IqlZRb^l$kGUSk7#"XhN2HJ`)11Uh#,rJffs7P25&)`JHE#M6pe+i-o6ZI0H_Mn7LkD*Z7mU)n6*]!Xhlb'-P!/>
%(!L_%0N$Y4cu9]H-WD(KJ"(H1/>X]H'J`BR8S1Ae%/pMD+!67-==-KJ2frs7Sk=l<(@@c!$BN)nTSks7cll3j+\QS[^Pk>c/ZFek
%@Jl0MI7;N`FJl)Q8=L+f'gj+Z-V-_+7Pit'Y"Y$U@fq";C@')hUGeQ)NP%g.AOZ\<6G_Z\:FO$2nuB\jI<D7R3F-TS4emJPB\8!c
%2q<Y@FE4$?k>^IA^IZ0Hh:=paA7XSrVSKh-dU7^$l%DG^:(H^&QqeqAn6A?=:`i:Vi#jF??mahHX<$5dJ$0,=Aoh%,!`s*8956;:
%KRc,a[Icas9UMU4,1'^T-m0/N^nHV('LZGeL^;5QWf%4\"R%r>IB]jZ[O2AD&4<HAe.3kH%XNhk^`?1$Qd]RP/tOjD\P/e##I*7!
%"c.`Bc2u,i2Tt)4RMfkVi@(TUWuu+M:mtf?Qg#oTP$5s8$>-MP"US*-7*6&\H4`NeO<D*ES2U,!`KW7gIkobhGG0?,^u=N51.\Xl
%&<b[d<'Et*%rrEJW!#@gDc6fYBnFjTfRkNE;dprO8^eO<LRdoU('DV^"BeW2q-Io:AW^(ZqC&`[&#:4&K`fa84M;'UX;SCdc/ErP
%5a&]T-D(CcY9hm[d1GA-<ohE/9:0EsdQol=Em^*m$qu.-EL1MdJq3Y1hd!%'%@f6>FO!u=+E:pfq$?U14\5Ek<<0u]4Y)UbP#I9)
%4-p:0<UMG&OD.7EnM.9s89\'6.VC8Z9AYFk%5!r"Vaqd%/RtbX$Z,fmKSb@lS*7saPri,@4gYWfC8N*$XS?n&8#9Z1==NZe0o0gn
%JbkTuSf-c!MLbGdH;GrZ#2]@+=*@GALm1DSS>j_Lb+>,7)5+D4U=+jjGk*r)&sOMM)_7XpM(R$(6p;'&3(,nBa9q!b_d79d(9kre
%8A[JCC-B4C\s`W3ND_KFETE5/!G"pc:RMJNLIMgupOXKdT.Z(OVcK9,@;d,bXX1ZTcn.nu9/mBfKT&MXd9ZSo0anHSaV#kX<\<[T
%7nrhJDV^ATSF%I5N16EV$=KEn6D66S()USV6?Ye)<\>q6Yr\,u,'k)H6khu;C2sWE91-?[ljRpj&af]?3Mo0'J;0)>C55MQSnh"Z
%DMgp!!269(qBk9sKj2e7O.j@oUl)rSECKOKS@`g!8E1'@12sqM.704K;m(S"`1^aA\0P=0eH#:Vi':dWMWu.F0!GPe<^AT8&3Mpm
%h^h$nLP%n,dnk]Ii2@J,:.(ts<"R@u6Yjj0URn_48.D3^*at%<VCl:H;hCfAP][m7;(btf]-3dTaXi0a<l40UHk*Q\4A-6q)J"[t
%%sk:!875$M&>n;1&^.[@ZQ20LNNkl2#]13hhBC;X8u:hdB)kX_G%!c6JrVI=guX]L9W/<@GC?VX$qQRImcJ6Ad-Freo(,Dun8u8c
%/o7RY;befi[D]u(*)[Dt"E'iL31Gf;`)GkIrB:^g5*BHl>2f+q'Lmf5akr:,``s,S![jE]+bl]6<&k&=<2,J?JS9^Rl_2-sXBG[%
%knbAEgE<qtC*q8X*6B+8CI]?"1XTK'3`qouqYD?4`;pq88(Pe:'S+S]c)UV4/IrP-RDt_05nrX@o7A`Te?2VN&ZRZkN9Zdd7E?W?
%Y..%h/B0/Q]0b[^5:+d'+hL!hWe'.X+hU;$CauP-:+pk-aLY<t30COV=26^%ME(^D`'LjZn(0;P8b7K\(J\?&[]DHAA!J>T%i@VF
%b3>"b"<%Hk)kKT)eSZk#@g<cjY1VG6^qRkB5S;,6p<qt;>n+Y*1H#CU=??X#[VQ_C[[Mc\"8ET]>80=h=>^@QVIDjtIU^+2TK4qQ
%$7O_dY:!j/CI8Y07>o0!K`iPE!$-T=nq>"KR@kXk3<(P_c?VI&NkfQ:QD^I)i#7=[-('KS'R\U\GpUnt/L\u%3dG7"aQStEW*r&H
%Y\A[i/M6EV;dR&2*mmuZ>3Ri@@1,LEajs59WJ;aQ.M<efV6BrRQ5gjknW+j@o,e^iG(6Jf[eiA,jcO,:rs).>1FWQT$6XI0+9@J+
%8f-JQ&70=!)ChdQhEf$[1G2RA8MfMfPP4Kq$<c?g5_9#3:2pQ\'`;!E5'FZ$*fa7Jl\iOBhSnn="GNY7Qsu4$(])2aGg-LL8$s("
%A.#EMciA)Ck_3W.U')E$ar1l\N"@2T&/nWLWfDer,-MH(nA=Em'P[K7dkdl$;1iho8:@%:8EG>3V\0ifYeX$)4aKGQOf=c@B+Lbm
%-^]u3\q(7ck+H]ui#:hFbD>*rqW*.n'Np*OP:<5\3&nlV"32TJ%S[`h5M\3D,r1)A!SUBU)['R-dL6SCo$IW;-m@XPW6^]_&3TX'
%+2)?N_OtrD[rR=:P4TI*GL!4-"GNOE9*eD.dN3uF3.f5%EN*O&i.3(QdH&N_jWNgcTpZ3_H3*W*APoF4;2<DL\&"V$#;f$eAQj)s
%Q@5eT_)3&60Re(+o11f.*Q59O4b$a>cc<WsAFleOe$O1"h$3N:M$^Y&"lDXd`h48QA?gm-(9AN;31&RrA]g:eUh7eE%Q%-maSHHj
%hnT3J7GFEOUlU$&p]_R+ROmi3@S`o`Ci]To&L/*(P,YEU?l[_WUpHUYF"p2I>$#9*&bR9,KLO@O/r05fn4,.#UY,@9&,a[4,!P(O
%YMFs:'7stk-TiuSQh50K"S^06di#%W.UXd'K4BM;b7l.V-jqQ<1=N$S[n=ijfQWt#BRZ[Gk19ITq([Z\)jBjcO<Xtq'oP^eIS"-F
%^GS\bMpt&&QDpZfkDU0ioR.G]</F`X/ZID`H,3BIa?m6@ZRuLn.KKE=i?bic)iaMJF3Q"d6OI=R*j'-m0Zi:W.h.Yl:$%4?2+"FF
%Xn;_Q!q_3^lP!H/C`s3M!5DA?(&S=*LM<E8ieW'uSeL>l@*G?90Xtdp67a-2J-/*"N!NN_%Trj!=Q^'NS!<u8J-jIR_Kcf(5FQ/@
%9OGkOEnJVSZ:MrDDm4g,9M>RK+r(#UiJ4^*oM$2U*2R0g^sW6=L`&T%MP8kUd3=PNRtB9)ETt@]hjmDP5j8YPs8->-./"k%LsInA
%NK?Y:/Rk\:%"ORmE>/FeF]EF/0XmEXF";_aS-\V#TnlZN,bH1-&@"?K-,@%R/Fj$H&X&-2ed/ueK"EK<T$]8<b*K#%2k-oA>&UT<
%TEEd5.`E7F^,RV<'tHh6[=[6@)Zil=9HY[iKJnHV%CIic\NcnJ:)$8gXCGcI$d6D=V#h%I.ZB2Q(_VFnj5jI5!rb?q$rKTs,puU%
%+aVg(/J@b:LP>n9XeMaZUr''N+rgm:e/E!gE5Ihk.[!@/#UJ$bJYO`'PCT$_Wl^4LZ^[rsAj/#J$J*JKesUCl;HbJ;hZ$kR!so;*
%.>c$J4u"ln$ji6-UBh4HNb%YTT]0#1"EP>#o9sH"Ug-kG,tEK*,2=g#Q9bZdQ<g9iDjAbTK!aG4iCKX15e%RP:n!D)at>0Wdo^.=
%6O]9aEg9'a.&ka8&fd]I";/\iL'3fD_m@L<&9l>3V-tWg`^N@PBK/B"bQps0d;Q.c!b2L9oL_Aj@V*G4Ka"H7$,)a.p2Z+kb(1*Q
%`)C'%X7dO4=chTUoSh.]Ls^db)$;,:Q<N8gV8QJr;P2J0+%V55NnH0ff4sua'(O?-rS1(DV#irSaE$?q*S'\-6=UIm>__fn.1KZM
%=s^]>^f%_4TlZ'q(gmDa2H`ZpcG`aDF/IqO?E4fK2K5uGb(Oi9atN<5&8;^+8`QR">\$`?fSqFJ8`5qD\H`h1$W`O0HGo'`8E^V^
%4@#&"\Q1X8DC$JM!3KFb!)H'!L0D0ABG)"X*sd,l*Lal%%C[3:_3u!;)`6f(#"_`Y'%Tl05HA7,@,/['7\n40L"PIF95+,-":X4u
%6sUj2Tbq(a-^/U```H$4#U#PT#j>-I6,;-t&N5L17Kmq/X(;Ym4Ri]5f$Iph$"@N%m/-0K?QuNrUMat3Sg)_p:XRN+HKonF$n@f]
%M#W$LL:SbDs+0$A$;P7EN;Om.*uXp2`!4+fREu4oM*VD<7qV'6#S@D845,L";\Gm[XF4cVM#X05Ma<b5eF91,YSDTl^2=Xr&:L!o
%8-CJ7Y>Fjg.a!Y)Aiep<6N(HeE`Zp6^-/BO"g=<$MA(RS"34Q,>h?1j+s9*uEl>IbOWpLhOXuOn-aIu%29&Ns'9t\7l\$:r&(iT.
%Wkj'6;9@4_r+->6TiO&k75.ZJEbM=6L)J0J93GD"MZ#n%\a1i.Nj'g)P9p<<Ui<Gd(l_ST^iIjl8n:p*FidbhJKV8ZE<>J"=Q:9_
%CQ0HjkW!G-KJ6u+J0EtV@'S&f6bdTm&.h=t&;NJ<4;rKU?<+.%L;gtXgMKD@_V-]d47r#2PV1iMnS^3^PfS_!<cG.`St]luTOK]E
%f$B4AA/26rmumuEC\Ybrcf.Pch^m,HaRK*tQBZ%O)'Cjtos5jBC^e_=3>%-2aVH9+&ALc-[7*Dr7;uF@Fp1T<"^h>B`M,%ipPF"/
%95EJHcY249,K.KZOfHf5]h/AYkq7mJ,XWeE1*"AHH8IY6nMZR`NrlE1kZ@Wn3(Q4_M+kMS/kPIN)Bn*d>*fXB-:A@&a+7m^i.QT7
%'o7i5=s1]g3+Ra(?mI-qN,YVm1dm.9PcaLI)I]i^p'@qe5,8HFMQD.=Z-I16B;m9%;h;?lGl2PKJP80?.Dl6OXo__-JE2G7jFSj-
%)-D@gMCul\;i5^J"LM@m(XiC&+\h=Q>Q_3#VA'<D2!S6VI9g$$d0h$:U-N!+emAm!O,F5P3U3o-!Qe/W\dgrKd7F@r2YV^aUs,Je
%#C-U&S4Oc`eI0\n<>(%0CmLS[(_MaHS9ftH1?n).c",q&KKX'Y*$,@=.5ONp.1#JECJZl0MLC'ZZ'5`+<%',T>&,[B&n.%L#>!$9
%_`!Y]$?Q8K5U9mJdttjcBL[krT^>B_-Ybu4"j7d9PgY,9"/uE[+?IQ,>\NoP42&OjH$2^cJ_Z<OOU+LK9Y!bHi@Q]Z?htLZH.Fat
%CErRFD3*pV0[-Grn50\N*N0#$(a9JL5biM%\t"MV;UmO0"km*E*MYt1?B64EN8mYQYD.YK^iS`0:jIUrZK_c(/48*o&VlTH??m0a
%lrg%p$Z$U,;`%:/[tMkJEa'h:jN6sK8^XS*rA5X0OGm_X1db7f"URF?nMq/gV3Yg@+5KU[9gLT@C.GTC&.X@"$F*U-O"s^ND^-7\
%.bHTGDh1tJ'mJgq8%gsbX(n[]EX3+VJ\#\V'6/AT>T>kr2b#aa#9i<UWc!?Ff,3YQfTST.#`J@d]",[k&fL`[4@>=Kd*65]/3p_T
%.N^Xs)M_thROUqT\ef>[khFB(7/\NY))BBtb@,O4BDS0;PW7M]&G"""#6IGQ[Bs*uOA8mX/6R@]P2-.aKdaL,jp[:=!D)cPD);tG
%[no#pcRMHo\-!m/#eSQbH-/X>IA86Qp],6UOng6QT.$@+\'oV,Q*4Yq3+kdk.f':g?)Eo1Y@u=A%j>\_L.rE&!IL<*"13m38?-7?
%"KL@>R+P[@H$BR6*D!/rFQe]A34i0#\IC"eLT_omTKkhQGC@c@[/02gSMOoYdV]UT71-!"6;UOeo$.9A)m'M5=?`]pGW[4fRKe^_
%mH3]^Z&32tL_ANa"n2PeT9U=Gk!^V1E_^U]i1@S0"c[&6&GV\)Kku""Uf)R@))bGRUO3NQ/5Bk]"jo+e?A+\bQ&+]-Y/$,Hh+8=]
%PBlIT=@?%M`g3P"M5Vk%00mNRR=JhLs+u$<Mr93h#$JG=/\+fX;o'Z<N1goWJan'j.UqR6?6]Jp'lOcGPoroU5ior<Z1JUdj\F2p
%(opA"naRUjYCUggM?0drW'^jN3ZYh(oc<"McQ,G7*/.iEKN&3`0S.(EigAAK6@P=<!(*-_(68S+%.Jr5/-;m)I&)`(fG(>2"'i%g
%HjWgS3i$)P;D42dG;h3bSbmN"K;,l#A7:gjMNcMj"SGW<(@/G/nMHVrP2`-]`I@d9;Sg\F75Qm"2cXOC+#P^O.Ub>h)>(j[H9k'H
%,Yn/K;S"AE$Y%(@FfAPFNarlm52k[^iE!T=Fq^i\/<L#(PX4`kU8n-p7Dgfe'\(:"VK5nb=M_X*/SH%8*8.PQ]iC_H!Ej:g2)u(G
%aA8Z$BO)C2_=7jo_bFfJ2*l#7&i#nl&VdU^!8,bY2GC]sNqe)uAsUsKm:!32f9-aHlh<oM+Y?`E_DGEo^UhV2&C#i:NeGS@3EAp!
%:d;UNL6X/hCB5M2HKUQ)[G$d_3;"8t%Y`FWBN?c6YR(CA-I'I;`S?*DK)#F]<2BEF]G;q@3O!h7<Qq"9.lGo'j7Q<<ML5J&1Bm(0
%I6@m-&Gq+?ihE(-P60;^p(TitH;BpfjS?@!U-@A!!A+M$-W)N#.hZ0Ii$nLNdDS[+nLP/PSu#J^Y^"Y78HU9S'*qesl:"\garnIA
%4**2-<ETD!_HP14eW)Y2G?JG)BrSAaQY)+aG?%TQ-_4gu>e7s1_@6V^ZdIfmCEuT"&hH!lMOBe@''u]Dgn<p54<&+2K@@)[&.^^,
%d[,q%<P_P*LHD]L%%L0an"teC8qH]K=&Z:)AYDE29B7mpH8R6ljsb)\i@G(MCm'O5$3\"U8lN`L6RZW=Z-ANf#Y[/$Ihl$5W_E'k
%=I8#!?p:?'aD:Fid\X[rI*%"S8_"=0m=pSr/\Oe9)OW#;=.mbU1QZ&>_(Z(?:m[kWUi*.]MFX)=eBu0jMH#MNplqlIO;*DR+Osaj
%$H)1b@gt<:CLol:WjI_=(eCc0'=EQQ<$P&'M!)aR&1&LYj*aJk'X/c0(CW+A6[Tc1(t[OUX9a^rRPaYY??/Y*)-<hTWm]m/[+A@k
%(@"?4Rg^25s3_$uJ<kgXg0b7TH.L'10,%r^K,s#O#qN2:\ZJt'.?-W/5Gr:R0N4miL3NY`0?bP_]r'un8+1,.jgA(D<m-GIf&a%!
%=0Y)tpSe?T?2J_X@kCRM<n.`1@tT3hD,kfu@`\Um2lsE)SuWVo#==!cbGrOsTtqY*7$YmZ3_sE/Q)0un1a\c)Lo;L(R*#D2!2*sS
%j:G!QH#bebUbm`;VI;clIA$oH"!;<0$];<S$N8EBgcIs?d,IA-HHn#qT\!luUf?X_[?%HH'SZ1SWq^pLX%3KD1%_nI3;4:P,j$&T
%Ij3J.9eBYo>\GL_fDDPa!?m(6_^UOtno_sXBX3s(`Oh()QeCMHp!Ei+n^%js<dGPsN!/q6EEeNuUM+>+c?FYd1/0;Qm0leg8[^)#
%V"HGE"u^<Fa$7'tG/@ud$Cs2G1.Q%'<"(][XO;Bu%mZonUhD1W+%a]_:'BddHM'=?]<[r$=dd.HgfMQb+e3We=DJ_ukE)Sm9bt3)
%4ir6@Ws!:T:^Vm+!h>%SWe;F5Jci>W$XXi-fCMeV?XHKj.d7*^G!N/j8A5)\?rSi2_IPD--kL>tL7K">'g]@"Wi.[XkpZX+7\T`Z
%k;oK])^p<c#geCsCA)Wr!JRKQ3&GRuBo3@oKNo%tB_!>jT]pq4Y[CDC(G-G[lqKJ1]V`g@FpMMDn/mr'\J^k$cX'8?%\^2$pIG`b
%.3I4+5i-ikM4^fY/]]JCT^]r&GTM9@?,6kE:1btF3V.tm;UT+d*lVtj!d:nt-@FctQ.#mg'r?B]8DBT/c$JFq#C$9?C?Sje2In7@
%@NhRE!$d4/Qn#]M7\qc=gXpd3,PKT]Ejs/k;Zudrj$'9MctkJI<7q*5o%N%[qT7LnQ4km!jCQjJ;?@5i#VoY=X0jlbD%U)*>?'3d
%H\?lF".d4oFl,LV1R@_%iLST4\uQ3J1G'6,!_;HAJ1\k\Bg'hG!C&'a`'BCl$lla."B1Shj:,Y4*kY*].s)/<YB(SU3o(/"SOBB]
%H8`O1k"d=8)QI1FW0<g(!HK3/WbN?VC5_$VVKr]9;P@1!"5$&\;c;(&e$eJ"&]b?h.^,"r*LE1.(,Q$j--Wf"<G^5\d#4%6(_u%k
%XHC@2fFmaS]Wo8K,E\D.^:sh;COk?UBt?&bBi`&,\RPP8"cZY:-j8Q\QR:40PAZiqH-.ed!1/R69%(r8TiLsB`9^FV;lLj7gQ3uU
%dgLRIe$0Cm>?;h5&E#)PNiO,!,!@IXRA90iXtmC99+;!>,=reTh\]D.%dB]Hgq=UU[Z8d\aRmSVZ.Q'f6Z>n')1F8K@O*?0V^<S^
%E/tuWej6u"]dk_c;rRDF#jj<a3%1fRoQ*Au7LJQ$c0-!sL#[H20^h8#8+6?Jq:W=`/oHC)L!2T5,HKf9^j$`[mq:3=5$BrGOdW%J
%";['<AJh#XmID`iJD4dlIm@Aeo'/hSK3^j;d\cBs<:pY+j>O2,C;;sLe`a$#"g.S/kpAsL.D=<(4?M\t0'CZ2Wk:;&kDG1L9ul0h
%X=%(r&E-*rl9AE91E<8mAF2:-X+`lLQUpb(7lXt<H37):L%S<t;%(*gq%=NtJu\cKE`S>U[+/lf@9%E5llan0#);+L/>MRlU/9\!
%)Emsm$OTCW0UUo*cDoEncd):J0'H[kcd_*;IS-=CpVS06*uUWXBp3R^06fh4rQ2tji1aeLihsH2(`$@MQXVE,cuNuR^o!T[EJl4V
%I4.2EX5^ern'8<)hJ@VG5[C1;@(&B6dN4O=P$l(!CBWX_o/s<SQ<.M2/CbaDa,R`--qd-1^ek<<m!3cC5@$R`HAaWJr+//]?,t$5
%/9"Ine')l8DG[l_(O3rqGNMYH]lZ8m'oW,mO*K81C<BM0^b+QQ.""hj:a@NYpS<O9X+k2?44'*hb/e>;X-18#iS?)L=&UNCjJ>Kr
%.>%38id,EWGZA5nm$-:l=)&2hn7ODJe[q6*#WI$<(W`;f3@k2Majljd#FU.cU`NNRY([OjKIb1<m5:9Si;0DA>NkJ/.0NXO[k4p&
%rBV_QfL=3>;DT/u&0dQOl^1_.9:SlC6=%>kjoR""dj7mlJ<XG7>cC_<%7&E@"ZWlb;nfgSiOd52m)?o2!<j0VbN;6)YQ9-/9@r1f
%Fmhlb"tU9/6uT"]Lu=MTZ-Q_UQm"($C:IQjWP,<5Cd>JZU^\*Q60,8O'':_(EcD&En=m6SMFEY:h!kN^F&;bA5_ueCnPrV%9o9aR
%,X'^3JI'3E_([fE:j[GY5C4O[R>%[F`@tP.Xgq-sk]f`UlP\h6*s_PQj\^q4dj_"miAh](qEW0qj;mbnF[9.5aLC)%!I9P3ke,jB
%mMeq%JOQapR%uq,$F_TDP)`&k:;Ylq!qsNG^cr(V]jT5*]t>\o3\G7"de(G`rRo@#e^Fj?)5&t\`$U\k]0I:?8[X`>HHJQ3e@a;D
%i$-(p.2<U!:fJ>q#g.p%i$JFA#QKE#"L0Z^Z-!+TH,&c4T'A`Yn?i%l>&_KFJ8:gZ(1"^mPONMPWN8"M"TStYPQL@iS-7d/_5%F-
%C=`m?o4P6OE_(kAdhu/NNF4K?N:8$-,DVDa[0Y,paGZPincFDUAOT\1pr=:eK_hj:X2-7T+=JgTok/59318^CFTXml$s"8%,oZ^P
%/3s7Q(#j76-mpB%"8.8/m]KQ+J\V?.NobORnm)H->kImWZP3<%$OKXE:<se.N#\YDc0.Bt/:GMUT_K,S6E&hhYDoUp*TS60._?c7
%'"G`/74NeQ<Xouh^k%bR"h(,f/0M^,Wgpk?&##d!$s'0mbd_W<Ta<3K9sKK%$Y]j3M(,ID9SG]_bGqT4Lc#`\#(U14qP.\8qpSU[
%HCkV9Sg[[>PMCRGG^+Rm?6fe6'S%Pj<-2rL,_15(2nu@VKbE[tTfd'+B`WcI>q+f*9IB97AH%BrKA0D,SOc?P5#sUW+Pp`2.t_^N
%ZnaQa<.$Nf!nGhS$Pk.&Vt]=6?>YM7Q$qm]1tSA3R+I`:%m?OR3XIH)YRhs;>^VGtg!V<3)9-])=d$j`k6SWiDFWs"3hIaeBTX.K
%<R?Jn1Y*.X;\,'0:fV-G[P!hZZ8bc^8WLT,A7:cZ>o6sP3t)/\6IuUt5t'^8mipTYL#Q1Ro.pYe3$p"CJ@,EA@?d9*?mnPO2D[LU
%Tjh&!</:V2[K(A/)#bpNiB[g$9Gtm>(<f=ukE+[+@h)KjGXWBU<4R5>79:,K>Rj"gFK'0!@Tk4.N\$7m[KV>N"b#q7%g56n8=P,F
%hEtNW1dgr*%*iCtPTFb\A7Y`TWk/B&`fN.`k/n>4Ld=P^W(DL`?G2,FUahMJeb<8>%g\\==n+F>`/2CM,/Vt;361S&LBridFZC(5
%ESqHcXQf'g!8"7=V31fdX[/rL*B-a,&1hJu#DQZG6C%qV&Kn!%43rEj@%f2l.V;rKWjr^r`PM[MqZ6*q(IH9W&T!ep+nUh#`H5nO
%Jj.&27h`("?j8-'+i@4#LtVqSbT#L@ThK_X3@PEE:aSXuQR[)]gg\;R8i5h.,FQ*\*HHIgJE4f"Pq;,6N6uB1A]BNhS<Z"[\^U,'
%E'CSA3n*O`06!sHap[DKHoCIE=G3>!o0oC61K?>!je*$-kX\2I>U(MQ2-17.-!LPU(Nat`#J!O;LEUJ0-TQ2.-23FFK^o>2#(d(W
%4NX99/nG$a)u7sNa`Pj2B6]6/SBo"/6kd32dM^rD7#+bd:>KN=]"tkG3b35f,.rpYCQ\nN/p+h+B84Zk]Oskt&9#A(aTV5DmRSJ]
%8WYZ4^r7drN]b;GF]kO?4Onp7dpI0^Yq;2VEpJ5^M("DB=TF)^"u^T=H&W^>fANtdN2T0$:kZ$<Z]l6HO#<aK2F8f@i'e\(aW-L1
%;9PUYS?R2sZl*9=.,a6^inFK5YtXCPH3^HkV=\/ZEqI]iH-$*YF;1'qPY'AGWY-hEi>G(N1\<nEM;WWb(Ul`'@cAS0c!_3)+k*j+
%XD@o<AH<%R`Z\-rUgu9c-kAre=XGF/9-At62ZT#l9*e"Vd-duT>Pc(tTT;s6HE8mpN44\!'WeMc+fiGpR>=,d&%J&U/#?*QRHm9S
%:rO"G755"@[VUZ#@s5DborI`E!YrDh-)R`D%6^CkJ+1RJKXZ<UNq$#.$A'hIN1^uS]I<rN"'%-`m?q\DRUmQAhr<IY)!5jj=(,et
%6f+Yl-++k,j?GZ!]Ne'n60T5ZM=<9nQid%1r++GFpkf(Za4l0T`gW+kR3LHq]:$Y=kac.!"%.k_?1o,7"8=-oJs67KBj*#Do%JCT
%ZWJ9<>D&Rs>.dW_]\f`BUEr'YU]=_';l$^lQnrZ_e7IQP"=F>J)3P[;aFIsJG_,qt126QWDJ(Nl'c$aWH$`SceK5d)?!9I`\!i&)
%6)/lV'MpP\d;iM"hF'`<"4<)pY>EWOTk1AhPlOU;B;dtiNZ/dpUNhO@].:^M]e*5*61tAA69^,I7?rq"1'DM#7NuL,0;NiDL/EdB
%3h^,^-=-fr:fJZ8=1b,u2m6g^[QhsaZSi7,0$B^:&F`LHZK`F+RoO9i/-Kp+WJ1%jj+-6`/4;L3QPUj-Y]E>h-0Uj$6eh\P6+4#G
%)"1aeW>lc9jFSF<e/QRfQO]2*E.P:t_]3:X5?E_E3fBM'1t'aY]T:"8.AF1(Z%.iOa])mi<RVfL@>i\*!J&&t2>?kuE.;[en]JG)
%.0i9pJRS^d#Y:`"E;rl*FBVZHV&`q]=JH-\dK7rPP<942'jjK!;41Z<QCL)fR$3@Y6n,HQ+e1eE+a7'X;qK`(4M_h'gN"!NYZ_4c
%ZGf,Q!?-jb@^Lf!aagTOD\Z':_9^7!P$i+Fj.Jj$Org\TDq<]Ce"U6p2s.@)%5H\(DQ?Sk`+i/HEf1'1@&Sm?n85\R"+_=n.5>J=
%6F3*=ZN_$#\`D#OM(:>JCSP4qX7r6Ogg.oH0k[9h@fSD%.cb?\/dAqG>0.9o#tYC,86U.n0P>t39QT@kY,'%%WiNt+1MVLA`XV[4
%c@Yd0EJSm$47EfHU_SO+Hcn0hKu%O3^!'!]WM"$o+#%,k/rD=_(nQ9h_=j]`e3g`@=b4:\L71d2<o=Ih&IJ96LQ,JFL!GZ=:0%"m
%MtHA?1+cQ1l7:(HSlLSW8hiij$D5\nVKdAu3/3$]6s/M*;K/J\Tr@9l=:l6Uh/kB6Xk^kA.ND%h63E**(H#K4#jobK4;GDI88;4F
%#=L/E(dN>eT&c5hbK'B[_EF\X//,+EGJ021!hkZrTC_P?V#hU!/f_DUOCgOM%"dO"h17b/<%(KL*i$eV_g4BJQcrZ8NKV[7*+T9!
%R(E_8&bf!EWrY7>$RaRX<IEgTXkm_dh@$nbh$ADZ<;m/'d_2Y.A`E5RTu=+_>_1JKjlCQoX:IkH*I]!+$4`m8O"?M%-s8916NcF(
%jHU.i%M]:XBplW+a=JT2fs34sd'HR>#Z24r!l=<"enMN]'omD+YiRHL](QOYTY\OpHBrcI+*R\-P(=p`SD"=i3VA1.;Ou)V74`f%
%>H-np<E"bt'C+%\%03I1U);5H)GQ[J1pCDFY^9&]HM!%kj#pQO)J?Xmh23Me?jZGu8"5G?VL9WlasO,T)pDMdOdoTbXLaI/'Ag#c
%<gp'&-]p*.2,YE>ef=\qL1+&JUb;gd-?i<I@@gp5oX.M%]2VfQ9Z>#I?[?JFJ>O)mHKdUWEeP3$[58M;A](lnp]D=lcutL3b.+@<
%6WuYNs/59ZH7[b'lb'b.reDK9K.QE(Yt&>-#&'5JVF]/i%)FD+"q;;]d&(@PHcNJD]-FZQ,k#=/40gFD&AO*lkF@>K]6TmrFD&F!
%3jO5f*RcJD1?4*/]V]nkF@Ut+PmAEU)!ns57."1P;PG$I"PLqIpCXrWr1&/*ja^L'79ap$K:uU;(b'OH6,:e#4eeZa1A`qE8$]t3
%DRXE=#5=YM3Np"(ZRE!I\qanrKU,e(:OKUSR!O'@ftg?6:-mHh$4k,I&MI+T5h.gHO665N(;MtNct^5&4Vb&1PZI\`X!6LD.K3E3
%+^#%0_.h2@]8i1H9Me2nJ7"Mm;tKPaVPAFR:$?3ie1?lTaH2Tul6I7rP3N8C84g%UFd$*;*'1hXC-[S!MrZaUE12gZ7B$]Z,R#o:
%YhNoECOaH4Y*.$=<%]>^W!:I78AUUbp*6R'Tr;#&!00Jmi[JTj9Wo2Y*VeECHD&nQ=7:5D:%D`"+s2dU6Bb;OglVd^+u20WOTUnO
%@QWDh:UF!4j"&ST7&NJ\MA>_C;FPP.Dp$e&nU,'Zn/\n[VFX6ZabPOE"_U5oZ.95k<9:0:oMQCFeoX;8-dN^CiqpF\\Nr;<mn`h`
%@oG8;T#CKhZA#M71pCiO;2aQ;er5'@j`576%Q\(m!UI1>]-[P4i+u223EF'G7lA1o3]\>1:-?c'rRH*k@l`c-l'.I"TrMl<!g-4_
%<!5m2_B$m0-`R;\),EMk7J[*?3s<YtiJ]5QJi3[A;mUuDoG.UgVCP4obrm48P#i^mhHVgESNPFb-4(J&_t_@jPKG<l$7htQ7UM()
%.F"6q;b.e[jS".tdUJk>3)#e`%P!2ae#K[%h/eEr?+#@pZ1;eapEPWnS!CNImBGWs#ZEK]BN.^.C;Jq>7`.2Xc*'"H(N9[;0*5b,
%8""iS=U=>V/^%i%>EcKdK/p\ggU%*s2]A>GTd2]bA64nEl@f"D*1emr8A-*P^a^1'(%2:*9U;qdPo_mrBO%);2rU^;5j[FXjM6c"
%30M7\[U]&l:49b9.=_T0'VB6n[A4FM:0UMsB\T*RRVQ3Sf_uh)Ht^l"Y?-Cr3'qROP_BICTQs6^mPN+7>H"JO`jHQ96jX8@$o!KY
%*Cn\4OE%2!0'EMa\?W4F[h0t[X!#r9WAU-RQX+JrH)7Rp9.B'#;R(l>;%R*^2<p\m^qfedPO<Hbn()YPqm?MaCEbBr:a"\K3s$X@
%h('cV\Xpb4k_G$fF4RE^r[N[1&DbtcAh?(8Z=E$[F`&`Z:Lj-=+8YB?(;lm4V>j`XS.TYiQJ5GQs5AmepZ1%N`cU9Dp2TnG!+<<9
%gAt/Pds$-HX&lWfpgcpOg"(okEpj7D!YSfY.%^VU+GQlV2UYWU<gFVr[5X#>YC"[&iO3ubEpaV0QU'd23jAkT(,a!TDK$6?>Q-I,
%(Ag;>91aq5R]K=DA!L=K>8NJSONI'Tia_qk:'<t\)"NY6#Y,^.<fs(teTdrUh9blGpBa8Q_i'[*=>#J(;HECVfd2*T=HU:S;/pF'
%\d]0ls4([URj%$[l^1W[[kjGuVTdMI_>mD.TW3Y&nV*>#c.A+5J9.0b#Z7a/TT?G^l494LK!*P5Li9WO0VbaB5T`:P'Gc'RamI=)
%qcnqAqk8fh_Sbdj&dN7jm7][E9fq%)4k!.o`c&`f3)oO=`)R++Z8U"Fht9o>d4eU9,(-bcqs5P`a8>!.edQ2'Oi1*R_^tkiVVa4(
%\lh"(]br06=A8FYP#p?pG@Bg,)$+iJE@ZgAbkt5\[1KGjGqJV$P:XLr7uEjDZGWnFAt;4ZW+YFJ2=IlH:T_3GpShU1]6?%j%#2j?
%,RG)NQem^N!u.)fo*e,g97-bQQr0d/8\16G;Ym[VZP9>b>_Kg8O*mcf;)RP10e$05,>)n$J'8PN@[r+e;R$3T7jB,h_Vl7k!S^>n
%Tq5DDB-7BqMSV9>j=\dC%EW:<;cAJY%&u?Pq.*EFc+6d6AN9X4'c<=`rE)H13.7T](6rgW+--(TE@eT:8eU2RIOHX3*qb6[fhh(d
%]&+JtK9!C4CT5$N/_@@5bba]K#fOrm==c0`BBtYXe?Q)@<=J$H%-'I@q!4G@8T/R'EGqK.d%TiO&_6Oq\WAsi_Gu0o<fC$CJ9Q:5
%BUpB-e[6A\SeTL6N`a%s\KYpQ6TdldMZ7O+&b%jJH8b?J5pV2%Q;(eNmTfH9bQ22"fn9:W\35:0X60Xa]_)?e0\Vg'!6J47@1+\u
%gGkiXdk;%Zat;&i$4_(uY)3]]#-Gp!,WN%2U<#MV6(h`m.@A?k;`*D,BTLTPAH3:1*pmdcim@?A5,f9XUrAmap)F_*>J;LL#?R39
%,#'.)R'>3hR,a(4)Vsj_%VNF&qJ;oglj7M[dKC02Q!k6h"TOeB[H:.uiB,?e;6\U[rugm@M(9E$#I6^9P\k*bXocAgOSS"A[(EUs
%P^L9AV5/5Uo_uaC,C,;S9i;PC.edCiUdY9f]X!!oiSX(roL$"AEO+73n^sg`*MGPkYr1<k3O`fn%/50CEt[DuC$S$&H$r(-<iV8h
%<f951Hs!S+Wql-%SuU8Mn/0cSBTae0bH"6J]bu\AhF16G]@91Z5sESao^XeVd5KPCS5,0(__li,0)hHIp00j<rG\nkFiN#+23JWB
%>NYfV!#;GNb99p(\!_j'/=#LQI!'eJC,BMU`,7F+),#dW%/>k;Q+EiY.$IcD1$sWEWaRgP;>Rop-4lbq`@Dd6?r(Ha!79.J@:-rH
%qV7SbOn!$M:K>'Gr;u$Kpu^6"!ShfJ:&lR6j.i0;"-h\I`%8f;W^,irJ8H_^5>).9A:L*.Dc4XqJLoU,5>'hE3M;r)>ai5:Aic6]
%>A*(ggW*McdCeF@9sf`UlbI9^cX84JR!"ij1q`1m'\+VGXp7NC>5\<$R+3D;3%OGB8F.\gTGmUM_/Ck<C=3Hq:q<Z_GI!>F,4$E3
%L^7[k.o8WuAfOQ-\/TmmSL]"NT:?"u>rDK?K*HWkA:i?!pVVnH+.(JHNK;"r:YW(]0*[4"_a.B9B@<@%$T]Qp(M#AD2+'^HCn%GW
%2oso%lpGmajtQJniTT+J0K_BR=h,@94M="C`9^5#+rZcoP1BX)&;Z8Koq^-a-`q9c4X5^d$]4'cQ9+Pe^elaA686(*D.NTWW'2qA
%'Ht'@,hGIe<)["59QU[Zk]uh'<Y06C=;EVZbG$OT`jq&ho#[aS!(QelaNQ0/SqD"ZCW)^FJBb=d@gVuS)q?39Fu8k/"IdY&=RR^_
%*I'Bg*-s?]CULco8ubcPSKU[NqlLDPlT>cdI1dkViK1,p3.0*sM+tF(2BsoYg'mA-Jfp:M)pGe,*`JIJ<f30B*Q<j9V*N.mrDb^!
%Zu82I014Q`:T,>>d4T::Ug-sm@jnsZQat^C<K<&#Fooh^PSLe7rkQJ*=0s9Mqjb?Kb:+r2RPbF'W^Ah"9S)IFbta>Q,3EQ9gXZ_C
%q#G/-ObjkrPs#OVoV@]VpL-8LN_s%'`b.[/7oV_p`$=DPGC9LbNXMao1oZ/:^N_E,<]$:QW<B-,&=QNsf\.++WJ2_n&YZbd_5<C8
%>MnhH!,7A<K8qV(.S^S&%4MUjQns&rK5>5s-,cTUYS0E4c+q2^5O,3\#jUlK"O`r,40fTS("4n\=0.fHRK[$(=65B@@3lEN8@.1D
%OPGgY,,@Y]kQ+gSM[s:Eb$e/[,`b9`c=87,L7MP3>H(X]LJ;5<b0fe5*N!pE*>%?R"ed8/%8s7%hFPa_)9XCSmrLG^heEJql?E2Z
%])jm#-;9U$AMaO#M5#<901XYd3%OqNT&Eg=TJV5ICu"uD=35$__11J;UgaLCFY?UCS,sU8=%L<+[N++WYC&1-!:$V#8;KK/>$7/0
%Q<=sp2H480HV35OdAOIQ@6Kn!!'N5s,ldp1R:a*.Dl[m%BNkK4YQ?'m?4Y&Z<+SZk\5q6%=p+%KC9dTA+o<!\m2K&="%^Ls<>t_2
%0@-_t3hk#-"/B"G<(!Y"dgCkD0LHCMEe)q^af=gA6ri&bl6-Ad@0`;Pa*2OWYkW>OZca>QS(qoY(6'Ob5Rp!j(OB1o!#S`i(jQad
%'>Q2WU%(Pt./92C1N=>:f0kuqnqU,ck$_,h?,SZ'7d3O)4a2Xf,Mc>7?7Q_7?V_[ShtD2'kFkU:@`X-i0urK+,HSgO./"Y@AUmj"
%JR$Scd1\q#QoS^Q?Q^=M:"qHp`/M.!IT,oui)\"=7uGhCH:UB+6(4%X+_:`C#!&7B7c.;3;QhKV$-])5:14CGENi_pP>Of4o_"m"
%XJQ<#oIT=-AOD[*BiJm_S&_5HK,Tq"ZI$K=&YW8E1lc%Gm1bT4TTEgil/#T/JBG!]I*Sb(*WF2Zflb'NX3&4DS3*YuWhOSU9&F_"
%"44/c+prc,WqJ]f:(kY>'YpWsnn^0Qmu07TOULp@U4.5Z_^]#QoB`0_:7P67Xt$Wb.Tt)?o[tC0<83X\"\f%7TJ(fem=`2OE@>mm
%*f#;UKG(/nVN(u$MmA;CHke:Q^;L%F_S<sd6c_ZK^3[8)l*jH4b\p:B'NUu09!4]h)>1L*.F"IKJ^C:B<]t_sgp*2*'ZoHJn._sI
%$0F2d<IkTQ1KDD2C!NA[;(#?i^E'sKWf8Ii3=HHb#-Jp!;D$;4O7dXPer;!K7h^2.Y7cK.HUREEY_8rH)SHl.'+(hi[EpBHcDM1!
%cu4-s'!(%9R/E&MP)05_]h,-aYn9@g?hF%r7$\")Xk"B^#L/f&7#Rh?Hu>!)N]2u1Cq"N"]Ooi)`(lP]kCTmS@6e[,ZknW??%BH;
%jH7H,Xn%XHEA5Pf*C`gHYsBPR`7?iJB#J1`s8%&]*eL9'.':E;@Y'ubm!VeXVW%c1kK7pS4$Y2T!I<-,BAhNE(7$&`C8'(8P"P;"
%SCV\-Vb14UD/CY22BjAbNst?;k.q\e-cK8RDjW7;]6O=i$AlZri9VU`k+[7,N6dYO%GEO!)>G.Tc/ZNteH;JGe8lT3g98ap;>"+5
%"e;8C\LIGAB59OiWT.na.-]<'^2B-mC9VGeM@!nq[:j4A4juuLKaM+`:31AeJ.$M0:D"i4(<5gg^mI0uZ(nG.>d]@7\fhburH)TR
%3Ch`Hni;MD*H.3d4Ago2?OD'jQ5aJ@1Lr##&Q"SkHuiK]$E7hqc#rn_$8kmeMaUV4#9o@Z4)ktt"AsTuDD*&*66DBldk,#`88?V>
%1o'*iFr5[MBH0p+U_JJ1o<mg\l[=m/`!#n/%WAGG+q4g(6.BeJi6>r6pm=FG?O-(ng!Z^7E,6*4ApY]V[LOO,KK6PjGtgo%H8MZt
%8O,"r<0=]XoFXG`n(Xc;k&Yb0hhL7jg3<KUIHpIqQ[a-((a!:&3!7%>q*/.SPF\KTb)c9uNAH4fMR'bZ9pclE?rgcJ1E`/gA=aIH
%KQ,$\a=`'A9V\X>,G)gX1s[Z)l'6k9'MpTs&"Zg8fWarDZ/K0k<I@;)FKLl)VgdJ3MVIQ!aht'#Tu38m9P)^0Q>rdugC3?,KDp&R
%ouf#eB--S!7"aP`#nVD$OeOcjcbck_9b$#V'kTRe\8%5t44'eM_cWTl_*s3V-qg:qXu<?!b-Sm2M?so90]>D(>le1p7;s&!A.&Ee
%7l@8Vj!L3h=#M7(\JYG$1$DGN8`FE<g6#28,h3AZ,:e'S--)]!&P0;3EH3Ree:ha02NlW6"0Kr:HClFXT^UdClQ\e6Fp>=!1;5pr
%#i.p-q'#6h-[m>^.J_IPWhEm%PX9Sj_-kR&?J^!Yo(ne&Yn.&oX$_h%ic-!c@Q;IF)qBrCaaEA/bh+Vmk"@,cgBUq3(ZfK.OZ@C[
%c7WWm`QFFQ#7EobYsnsfhpdbD(@4!4`\PE2\sV9J#@3D@;2KT4<(SQ467Nt2"qH3R!4&"]:%0^sB;sBq5(/g#cWsl2m9UsPkn`kP
%"[:>_.@6?@S*Y-aVT]1P6@X-KqhF_1H%t4G#\`Va(H:O`Cr*?p*L(?.W3T6N;IkHb/do*E9H__@?X[QhQ%lV[Gt=<AE\dgegJ8-N
%Jj4-GDdZQ!JP"d#(gNCS9(6G=GH]/o5oA=>NuB":0NYd:.Uh?&Xc"#Q9[VMOO=Ap2[aoO#/V6&<)\KH>La?^"FZdHkm4!WOK]:XW
%`1L&?3^YhMn7;7F4f*p?5\@!eN!f!LD-KsLh@Ti_^I:YEYTOJFo=:&S2DJbr+!>-J4qgS/,4@!6(X@ase1&U:d]'([c[)i/JBp+\
%?381]]*mI=2P@;.b&0%A<-.&hfteNSE(D-UA1k[fh4@e"1t34Y6#?Y)WK=H,Ub6VJKgHNs]uc3DZ')3a'<%U#T(C&+.CL()3DJo[
%Z=1]\Tk401fqFTSb6pT9@!bcP?(AXbE?>WMe7r+hDV;>_%fD?F_XhV'^s.]-dlr6b5d$Mg,;YSpA^.2cJ]Np>AdPcO!:QOZL5;98
%S@'OrRP%TTN3\"X=O&4hY2l'B0bk>%2j>:G"0_8td+9Fe-\-&o-?\1bs8%JL3g'6#l.E[GhG7[f+=P)I=B%.'+$bdW5sfH2'2H*@
%gTbUM'*1n2I7Nq73aLU)Lp$nm-:7D3aD@%<WrQQaNJ&e(_b5FOXN;VoU^G]`B2%%FHHeJVj]fXBN=cPdUca`[GY=?4D<<hlG4KPd
%.PZ(RPc*1[\g#QIAc7mh]L-%%X9U3_qFTOplCYH%[$O[C&De7a6(9IG&_;c5c0[HDlq$T]/sK-PKikItroV'D&R+"iGB@e89m[;2
%O*%i;MMP5^@&ocj@i^22^;&7'b&TXU'"f71lDp<,WXr6ubB:#=''ls^In&k(D5W'JP;4r\5&)^Zi57'mMiOHiN0M!E.#+[jilD&n
%._e/mVs_O<KQT[/838[tqjC]cOs^f4l2ZF>R[,`AI+!l<AM,k7IK%`J^JhC4M`jb5Po>'g>LQt0ai(MU"=\1%&8IGr[Q:]3Lm.6Z
%#C9E*E/&IAO%bR84"Yf;J2k.%JF5g#?mo8h(738i(WBUB2[N%X!@9^coBi!]r8NT8?nO93<'g]LPldFG.(+h#6oa)VK;@2m&U;ZA
%UHqbYB+$(I'+J!<k=,cPU`_Nim88j[Ee'A8j;B.$)LL.C7-])u:JlI-QD:KWo^GJF]Y2haT`MV.kf]-?1qC1GY2]Gp_Q?)$@4cE\
%YM4fQm%jM2f]4`N'q8#Z(p)hP=D'"db-Eqg=o;?q%Ht,<']!p'-LUr)@#+@VVL!,TXesCB)=:91UHl<,AIBJGME`(i;=EFq3Ntok
%Ka.@!(D^]XV'%`H/=;q9Cd"m^;@'1<YNte\$l>iMob;#!ccRR9BWA:j]Y(qqIS)""s"%.pXe?JqV3r):kqk3#-j%YF`[@t;2;/pW
%.aE?C<P<\#?M"96-4ceZ7Q.VHZL15OXD=G3.bY&:!p+UnT<Q+bi"%X&\XV&(lT,!<N#L,$H6'pB/,H4_G\poIA@jLp9\77\1BY>B
%)C7P32^jNGhY8s)U+S3p;S[$Sk8Mc',NglCQL(ah5"N3I>83YB[<Y<D3=:GW!k8A5AY'7OQ4-p&NRC%_)Qfa0C'PK1IdcXFD#^@'
%Q`$,3(O8=S2jB70bg,5AWMlj:Te/o(WN:l7elREF%MAV>oV"gEZ3"MR*48`0%#`t?Jn]K.%MXkp=na4\F(1kS$FeY%?Xm/6,VHFS
%Y\k4cUKVTQnL(b]+RkY:c1ksN4h<[//*F'L#O)VIDtrs6BB\l@[\M+L,`-h.$ip0NlF8W\cGZm](+Is/^'5l&%h9#Q<.d2\hD3.b
%Q6jS&ie'&"6X"7ckjmUpSYEl%,*f3<Sc<68>SUZ?LfA=4lE$@HWD3nqagVrUSJTOZr%2AKXMmchm&_W'30aJJG`\p[-S^l%QpDOA
%JH8:f+rj(e75g=E>,j!VdeRT\QOa"Lh@*J#O6U4qg%jkm8uL%1.ZT1LI;,WKeq=:VPn[0Z?jftfa,sNQ2Ktp0LPWWs/'^4(9'JCB
%E3hY)q&I1t4XA^2Y0*r186f&?[Z4@UV-6X1j`hhto-6o]H:Pfd$3mn[91_-7EUc^Ie3&,:(7UZ>MKPiYAs'.'0!iJ$<W1k#.8#:1
%0t4VXqSrr3nrC:W02_8&@KL&.6VC!Xf)p>RDA/13`[HKjW!$KVC7j2A*5%$;Y=Ad2JHg+A#nGAC]RK:SZ&)gO/pA[8h?S#*D:tmI
%^L5WI]NuUk%p5!SWReOOB>7PGRA'FOde#+`(<`#HeRiP[.enke5?0i@/P9uWW/-8!lKL%J0XN09h*nRW[5p&\R53KlQO7DI=?_%)
%*N=),]^&ujparL+@jkb(<[9_-(EQ(H>C^*%l<m=nWa3TAs8RcK!=l0q=:/.1[Ups2X'u\klCJL@J;kYH5qp0#q%A6@/%fmbCAc@]
%g;0I`Y)i^LJ470/nf%d)pG;"?'0A&TX'Y)(it:8R8l.!;A*WU/Zo:2iWa0'c]:d1TZW5T*j43M_^a?(GB;9dTD@]Q.q3gDe<caNh
%Yo^G+?%V*5bAd[:PofbXC"5GNN$kek\\Y;Ji-+[PLu0S!!6[@h#`"J*J0[\cdI;Q6<DUYKR1R#m>EEnZ_:Z=q2mb4@,&e*Dnh)Rr
%26=.-K<[]_YY%UJ%&U+tS`uKI=:V;qkcl-n/.0RY]j8f_V!9Me1;`H_:16/k<3RL?h'!^IiQM<h;87'aV0.V%/K8]idLEK7#9_<'
%nBQ),M;M2dr"^*Jd`W>.4<K`Ch-&Uo>*$0=WQc.FL0rsY,),8?k0/"6bCZbUCa2>jbCbL5W5llC[VGTmSTBs6bpd<-,m%S@*-uEH
%@[EVtChb@9qf1UL3d\iu4Lm>AkY/Z].c[hK<!EZS7$>=%T/$u)ptW"D=Mn-?D0;=<s6[.<q;aN;Ap#Wsp$K8f'a\ABEt"6!$($D0
%)n0Wr>Zu(e+`*=p/0fhBMJErEURZacoRdE^L\\/^>:P6((+p\'`+ZMA1e.@-^'GIc1?]m(Ui17XWP8j`=U*@Y#Wo1;EH_GF--2oH
%apASi#0.QNr3O_H$gDWM753#-;a.2^r`NH#nn9iA'i?L;G;+99A*G1I\[I[gO`LAn<>MDdbNALMME<@PI\q`(pVgr,W\dhQ1:2m!
%HqAiiQ2.k?I2\A$#.fM?5"eh[OP_7$9Ic!td&$G9WF:(1Wi@al8P7l?5%j',a0OY'2\fZgX]l(<A_0iT;1/BQC0,^.q63d%dnc"f
%N&(k)4B&23l(d=@:&sjp)P4OohHLMYR4R3(N_Z'<hiL\>6UPEVI_aH%,lA+QAr8[Hr]TNcU2&c)^IhClFkKkIac+q-q%DZ*f&fV1
%V^2NGgSP\!]Eu>H;e$/ED]PQNR`,-oQ@H(J"&c9#PK2jPW"J;)0`_$\YQVThFUK9DPdY,/9N%a,G?'?!e#)\7DM'58TP"Y,'"1PM
%X@50Y`[r(50=EK4CV!5\C6#0-&a4Vp'h>3!8Y/W,#sU-qPT]9#RB-s>7U)1R8g9CU,Z4ad7@dN6qQeQ.R7XLk+(3d,o_)m&,i>J5
%]RUR+6bZ9iK^PoASO0uGQ5&=jEf7N'Kd@`Ro9U/o&OD6#Z'Lg>f56-6Xga'm%BG*s)TT^+2N,nuX6G`W0ILH&d<iCg^4I0'12P$B
%.ln'Ba-!Rk&QMd`V$$'QFD%RmJsr1b:H:>2RNLB[ju[UshL6fSSs$2i2A7SM_QufhXln2@?.o(MQF'C5*.5^?C#LMiROsS7Y_*JR
%EH%jq0KJ)>9/*.UZu+E1gRIa:d>oJf8KNng9HRmT><BSnQqDFjQA[#WD%b>]23T&T=#sFp'c3#[.mVWuo*>k_dn^8R*/TG+1jC^r
%S*OL6r*JXdf2c>fr,Ft9-TMnK8QpiM\hF-6e3re-bDSG&']C?*_FZTcQJt1S1M4nU-J+h=5*8g-N^,933*T%/c&K5+S(k2FDFB(0
%Z5rDrru0!.6FmVBWHGH7Vsphih*E33'tlhp+O.@:qO>I0`Lf9SPBXFl(@h6tn+*KTR`I$sA=#>78F,@F%E5%[qMUR@ce2f16j_eE
%`;j+RSHHgQPaZRsSmHl9iC1aPLTst"_:(INTc[\C.aRZg6'%lk$s;'Ak5cUEamYDG&s-kVKlMQbX$"Vg[T\UV@pEe?CK3IX_kTEi
%]a.1f3#$W-Pno2S54,^;'u4YGd`.QX9J!n/[fE3)Lc]ZKqi2W-'&R%;2JmsO\1$DITXhH5%Xi%N,b8pG#&Md?V'->,3'PjMX#Ehj
%)?"E.@E?CM[-Hog4LWr]4$,:@XMG?G]2'L@fji-<.M$I)*D\@60)<p2&/[X:0.#kkG,PO$l9O/&N&<-J!Ds'll?6`/jDA_d0<&pg
%5O$"$'qgKV*)(%a_+-sB/QiXaLh()cT-X_A6:ZVl<$Y63L"2lE!O9(FPqgE+e4+_^4tWAtiAmMlNrST=p0s:Ik7A,D"mZ8/.8i_&
%=7gam)GC8T[p.#\V?NO9Ti=N0ZU)=HEpR&gXCCpcf/XIABD?.%de_qfp)KB7LNG(tf-h,S\AMt*-7ZfoXs(7\bL7qTAdNlZoH<e-
%Q8[jL8qHS[[9Ge9PXXY2G$_9r=,0]M1NmSifL\r.[e?%E.qK"t[999X<;<GuYe!/rR%PO=n+Yc%rs>0BL.!prZRKNsl7eaeV@]9b
%*J%;q1/Mt3]H'VEkXoe:-C_UO,!qX935ZC.04Uq+HA3_bX@$%(Q<'FiBBe^2Q'Y;7nEG9UXtYerVfOrL-NpPb0/>]P-`K2!5s7Y@
%A+!ibc/L+p=Oq@V:u$M/)24_nrln<=`@Pi5^5h"aRHQBn1lD,W2M0`/U,DIcJ'T/9F]-om%lDLc;rfcE?6:X<5i/A.6ajdVA(/d5
%/mXt"Mk6r#d1E(a`_HoI7adL:&Fu'K1Y\)FVaOB=bHbC#&0-m!ikt.Hp\@%K7Jt%tL\Sc\pVN<H:=lIj%.!Bml?XotbH+')"$<G+
%4.pbe:id?:KGI(MTjJ/+5@EO*Me3)ZAHkGb13_=\1RE6q8I^hW(KJYSA*2bDSisd:(hZK0k&/^.C8'.%'V&:q%?;r"E/N\X;O4&V
%JuR]i&\=>qm%#B>UsF&91iN0(.R.I.!f%OmEAjA%Q$4[O.^/aGl2<blO!P?(Xe!fiF&HZOb0a-U$_X'`-/^)-*HLoHlcEU(;cYSP
%Th%C`Bi%2^pL@=k;;(@eB2GfTk1LkrQk'VERXL0'3C`,jrB:+<D77>JK=?fD>1RtC-"d'iNFpX:S5Tt\X3ZDT2>q4hlEptC;W=*:
%3qWVYN@guaXkc99TM\9-VF;!Z'eEW]p)\^n];P,$@F?lEX-^Wc<2jJ&LDZ&!48WeITZ.Io!c>j]oPp^c@*0h/3!dN<?[Y*#ZYXB_
%g-;j;^^1/GK]D@AhG,#D7kQ(U$4f)jlk-IX.lgnAp"_&^._@))Aj1^&_4'T<%ai"4,kgZ[$^]F`U_p,?dX")37Ncb,Tj=Sac&@hX
%"':Du9_-`Xhc]%9PM>sfm=]1a$J[k[(#t:c?'T7sNih9%#uFZWH$3JnFK+Sh]mJQpBI\o$P=F$_S$fG%8hIJ%>'h129R<HCX4h</
%b-43pmDo*NqYl(k;3oaO,/<mb].W>"`J0\>4@0Ns_%aVm=qEr]WNC`jn_sQt5a82dSeH8j:p&DnH?Ea%MG7\D_F3Gp>I=T=RQq6F
%gtpL]=#eK8>qCYhcPH_*fauj+:1K8"[^7#R`>63pG"Yh:`,Pm_,nk*`:^?Bcr=uQDS==`pWQ5&u>,PV2g0S<%b;@$:;sL4j\+fOX
%Vaeo?F1bilkXja_M42\@F6@ZlQ#*2qX4Nd_:f5h5T>GmV3P!RreFqMH^rU(6o;BW(`VHq6ZS6!eDp%T-j-'1TO#Qh*k\=8e##Y43
%p=rYKUY@Ynh<q\3rQFihaUVO$*lB;&E!8*p1#>q@Q"C8&J8Kam0854m/e*/1.'tBqItc5QPO%8b4oOVZpFaLmEc>%3)#9;0LZ1:W
%Ru4h]a<C#K;H8um('Vf<[I8#`JlEh9jB,U!45UXE6>n=L[r\j*`2TapK",tL<=E"SQ<"dmaW3Qj#j>\M[O]4]^7uah<Hoc6>.1VV
%d]GU;6YQ(VDDhF5H<mA>kZU:daXKbF3Z8W[;5V*gi[*&F]Z%/"oT4?P99A8Y:!S'p]k9jeh6)q+i1MRij5a&eZo=JfI>]dYP*`MK
%G<*>m%lss%_=[Ds@OV&j(#4,,.UP^tH0,*,3)m.S1!]GL<0,EM<p^PT+=1eFDsu@0+9eo?6.@mmbDf@'RsGEVTU,ZRG?-eRG_$jD
%2b+A?ir5!LOAd.Vo>Hsk)WnV'm-"!C7`0C/:@D8n"*B2HgQg$=)gqMH+1bSg8-17O5GG)RRX04/UA#Z:f>Tq6P\OA68P0@Z@8aQC
%\g:N,lDf3FeSLRuJs,"N68COPeY.0Dc>ib69&j0u/s&3Nhg](^,mQV!ek+\+7X1V5F`E27oDjB_oOb$8Zrn<@eMA$Q*&r\AYkJQ9
%kXRclN,%WY[*ltI@0;*C&b(u,VsSkeDs$Dj+7J[_'+?EUOVH9BTCc-kI_nM6g@EoE.Hc;!j(e/P1%!YO@,4FqKnFGdUQZ>j!O8mI
%j\5\5gt0lDPp$ZZF]iHdj;?Hka48A"52P8)&"*O4e=%fSg9\ScfdbmqOfIPiraL-UA=<)bF;6(^.^miud7^\A[-:EUdBZDWJ9XNa
%8)2Bbb`('a%7jQYGcWmGJ%iVr$rL&;J)jI<!r!q"8tRk<7;FuCJ>-poBln@c#tI#kloC*q>qrRtl;B[s=5kqN%opqgP6L!>r2a$+
%8M_hHn8(T^md^:J*b?%I@SVCk?r9Vu3nu$%bSfO`\sf,F=I)Jcg+6;^Z#hNljn/7XRlXCC3$A6TR'WeMd\Mcj"NR53SjJNDQ@W60
%.D5=;\\G&7Z\)H\E`TOXCRm/[Hd0i]N`eW*6UsSQH`095WiQIqPC0+IiG8c9ZD*?eU0EUu8JgbQ;89N(U)dkQM*Yh^KjqnH2u*"W
%..g&sEb>^Ms#:[Ej.4Y9f3<EXR7SONNo2LmZ0H-:)G%B['hVLpC%>Ro%I0[[!Cq5B!N4C),U_+\\P".6imK0BH+_%mDhH`^GQXdO
%"Al,lFr%N1h?bp,eXIi_XoVr_O:B==]?)ZrkHVJ]]2/Tc93KM2=jDe9ZQXRZaPNeF02S+j=>2)c[kcgP)gqK?+E5.p``-]5.6nnj
%.'^(!(UIBt2VSS[9;3l9%')oDB#<qd)GRmWYp0N>ZT*`fQ)aEgMXXqac7`aH--j<0TAA>0;[rEkMWa;qkl_(W:C'Nqf[@D*,34g7
%5(*`_&ru0fB)U>[`^r1-c=1:HD\:E1M"l%'!EHM8WSh$rW=t!IT<=qs!`<8#Y0[&oF3f;]87P_m8(b9<.[sfT_sq$!4]cL:H6EPF
%b=\KO9Qa1[khW/2(dtgC_Y*D?5R):<Jrq$7`iarVk#-5#+[6mra9iR8f?\@)kn=%q.Ae+pgU5&u#M_@_9qYs18e$_c(C)t9"#2(^
%bkVrQ<,e<>1HSBnp=06%(L25S]F0h?7.Inp6q()'M6kbV/NhhCF.`E;/E6r^4tYAO<^f(l=aPZRmK4f+6sr_'lIfpD2lT_6Fk0jk
%s,M:Nb4V3]??GBeQWca<CDCPqT[,4=)55I\&Le:R1&^C%G@"'86?;N;5$uhpUj@ueTh(^*8$P0(/=!9t5l&f>n?6lD8kP:a#'+#&
%MI`kcJ^G+2N,+Vk!',6/`$p&WCGN[7l?4%Jeg%gkR"\e1QoZf?8dj2MYT(\A2UVkb!@2s\r$Ip6PeKcL5>O(nHo;dVZ>(!a[J/%&
%T=Rt:@GUeOU/V4R"Z7**lNNHU]J"VV2,*%[+Mf?C$M^S41QkZVZL(rkf8sIYe=]Zp&G\3LoT0D@So:.uG]Ba&ahSG85GX,^%bRQY
%(TpUlP#km]Z>p?K$Mbj,?W*1%&dM#'BgXL2:<Ua\3<BJsbD3knOgoVa@UC\oCp0dgPlc=)[U5Z\g"Q'fR!p6(WE+Wlb5?&ekX>)R
%0CKP9iFp`q,A30E"FTfLAY'"9jKm&XGpR!T=kduIc)f"QLm/OB%\E3&Zq)WLYY,q"9T[SA][Yt!WcgF*U[,NYlOR_q(#"t^1h'h]
%jHq(VkVRKI0%o-@3.@.4?uRe(%8E"YQ4FO6%PPT_4m(,RQ.;<D8$0K.>3NOZj?^K--q%+:c8GuGYN+bHjQoShNl8Ed.):H)W\>'A
%K'0FA6joc1[/_r_8Ib[%r!K:oqAgN$n*@.d&2m4H'RHnKBSfeh11/F#Xf6u7<4MfJL2Z>6q*f]lp4ERl"7"]=HNC=t2ut.cd=K,b
%9R8lJbhF(7&+/:!$!h/IN#dqU0c`N)$Rd]o1$ib^!\(=r%?C-3AR9m\-&'Q!A-;d3l7q"-l(cq/1-l*)5>m(P8qj1jQ$bEDEN9A=
%;S/\>8ZQ#g1c;CBiTX3WI+<rc5K\gr(6RrEQMsCn5m(YRqDo^rbYr09DnrH(orJ)N&!U=aOc!7T:_oi"8Z1t`Q+7gIT9q']ApMb8
%jPn#^93ANFM.A'Y"DJ?0,9]KV^l:]B"lRuU&AiB[^K0P4YT0o1].;%Fp?1OpZ;P#C"B9%,PmjD3Zj-p=C.F*=V2)l5G*t=rEm1.t
%c_$s?BLJ8U3APH<HU(M`TS4o?irK$a7eDW(ku$Qc=G\=o/4_H%)T[1T^G)Zc&k58m78AF+S,?lQ;0-R"OBOL>O,XG6X[lqVbMs;H
%$4Og@?^49"7cXr8[J#\Yb[;o-Z/,fs*K&[1FG*fH.Dblg$Q8kkRTqVJPkQ;XjHksNc:BR8GfJVcJGeC<<idEVW8OrX0SXl\&Qt8_
%4s<NN?=.,._QokNrr@te6SAQ3)%5IJI'PcuY3@QU2*<(a9afZcq+?D?o@9>Qbdr\A;"?>djjHSlNo@tMMF:J,2UJu`d3$6<%&AR[
%#R3g8hK&3&JfUX1*hMr5UT!QZfR:n6TrLZZHu1r!UF(e_4d;0[cOPhhdQ-7IN\J["HLB_lKk*-M,lds,JG-9^.!,OPiL-F(Fg#VO
%-f#e_);(n!=!b>Q?%hgb;c8QN];iQ=3bDDPGn]B&Fh[&dWNOXfiY^<ZSmrmV>%l\rs!]MRY.'*aM\8]4hg?E)k:Z[6g!7h#jLdjP
%pq]YFP-VJuX0$uW';;9gb:eHX#qqc3JU,L[(:^6S$j(,nY,l,STu.O#MsU.J5TeNk>j^#QN^j];b@2!6A)POHk/8o,itY2S0Z2JC
%8)HthUb+Y]D$/BVe&ehjX1Vb&H.F?=?HLjB.k(i@=+c5&Abr,-=I_-89-19&^j`Ih.'DUlLl%.(@T!k3q:_Jend:\cgOj<rEi.V!
%LI88ZO1&faO@ioloY;:eMX@]h1B4RH)T\1l`DaT3[a:2OE'V$\Q'%?6e1F+^preD0V"ssc2sn4-$S6p"W;EiJi36dHZc<Z(npI;p
%IWKg')0CQSY,UP&-*<m2:`cSol)5M+>Xqe\K"Ou[ACAokSW8Qgmdt8l'D#mmSW1p@j]hr!CBc@&J8:!#Db4K5WeOjYWIaZXG?fD\
%6,IiqA&u49cG?/='\(tle5CWq0*dcGf)VGf6etGoPL4?/L9RqW%tjN8[if*TD11#5bYVRuJ^Q!Q!R)qUc4o7j9ogF!b'j['#-Jh0
%REOQT77*5j!G]q)XmdV%&l2jgk6*$7+fL476I6KdH0FdM&;TE/__"&r07\JC<Pos?gtiCj$,\<Wa9aJJ#a\g7:j-Hdk`f"(fgN#N
%M5dYAMS&#sMKdr#bJ(i!hch:B@/FJWMkB;QM/>SM/f&R^`RA=0QDL'!V"Ckg;9DbV+cB6[N,E31eN!N*Yh%M7O;<1fb3+fEDg=K.
%VcJS!N#!KEa0"0LYqTZGiS@6\/#;KBQn$T?9?LI`$99F;N/Y0CS)4pJ10`9_.'@,QAK@BY06j;-Z:d?"a8-9U?qFs.&P1S%L)K?G
%"Q&43$OJ7kS>.GV5>Q6h8kr>h6:sU`kbmTjngs6<G_9RZ3-<Ab#i^V<e#sDhah;52?rq35b+SL2&OM%2Mbt#U@00r:*&MCB=,&kF
%.!IX#=[>,M\[$;^Ab:pPmALX7&hIi(GtW<6eTU0uKPPMOEn'$jZnE/&5e0O(GqhI,GduoH*^Pf;\O;H,q;*<KB;Or=-0hS)dIm9$
%W!%oR;%-oS,O2JJ$T+TpR-YVK+@G/j7;o39G"PEP!NN0'Uo6>SjfbfRVcPB\`3s.Oc1K]BL,DLNR(0-C67.ZjTU7pf\g*83pZ0_s
%[,YblA?[n:'hcs5e/Y:tXE4ND@mS/qAVMIYpDTb:\I=o8I1+R(%"u6Y],[.\4Lt]:2WaCrkH6^9pB^@9qR('[A]#5hF4El+=6i_s
%%)]MgOoj3NG'?p7S>bK<adtS7=LQA)*UQ^L%:(36m^dFcBp=eYnNuV[+p0;t08A7**?da4"p#"$"=!@(PEnlS3Cs;??##Q3Yc9T/
%an[RL.7pbDn!rmiU@K'/k&(V_d7je&J6UN/?!&khjK"+$.2#7BfUD:%jmh<$4*[<eqK@*e51dDp^EjO@;6*1<>SA]W[uF'P(r`Gl
%X`pdm8'tfVmL3*&=#cU6eBTSU69WhFZ:dZ#>SaAFCs*R2%WR'5L=R<(Pu7gL,/e\.E8#bF#'B2HF;(Z34K$]8*hViAA%-,lcS/u;
%T!iGWS(2e\T7%O^f'h^c!\AVZI^o_rN.?nlAJnpq1oa;#9rXf5Qq]ZsB20r.HBo>:.[q6IJD1bc7QgiJUoo_eEDtkC-d`m46`O[]
%5q"M24_C=<(,@.rch?G)_tT3hTIG*ob-)\V$<O%\3'1?`4^7Or[20!ofg(/Xg*-'n!hDG[dCm2%3!jH>%;uk4,_[Y4>ha.i&>OR\
%BS'$p.,eRql-bs4?+PmhVJUZPjrM=U.]Gu,7fL6UdAnAMa@4hFiSgB@iBaX+H!j*>$N/j0RA'hm(>D?5/JbU4fD3r?;To]MAC!Sh
%=Pq!#;SmdAer_0Hd+X!2ZuKr<_OTPp+S=ol<@dgD!d-Z8SD?cU2[PmA/&SXVOqu7EKE/,R[`#>+[bAX:4Eml?LB$Vp79N*5q,\;=
%gBuXZR009RNj%B(YeCH#ZCbYZhmI:.VcE[b8_Js-+TS5-/(_f]l$&RG^(8>R.n,CdWO1A2lVCf^e>&im'boaiUY74slIR8^YQM_:
%^>a6p"L7-U8u.ftj)f``3>k9!K^ZbHeFER'i%TFYVaPlIoR'NbZ:b[CTQ`neM,2P)k%u8\W$U!UUbTaZS?S/@6NMWTF9WIqUq!q(
%_))^qQ[3%1)CPcaHD<\l"kp=(:067V$1V2:%^@t#%bd@0qUSRVQF(.eH0q>/4gC"`Y60ed\;<gt"R&OZ*?gJ_6u/11J75j+3Gg2l
%WU/U?]6o*uHA8Msk!`>tMpdCg1*^t+YFeOrhnso-lWpu,m(s*laN`(&h*GO(AC]7L?dW%>7J604;\Cr.DbC`u72u,(h>o3iJXg6q
%YeD=+1o0EiA>X;b,(Wcb-*J:KU;E,BAZ^![o`PbA3t2&VDofi"2)H&^q_=leVY<<TF[<"-<6q(cU^MO>YoHZ&bY\r`$@R1P(',ND
%D5[gdpUjrJ:Nc+%qQNQM7qIUp=cA-t[.J0<DM#Rq'NVM=`J4Hu;lKOpi&U/Dh'V"C9keaMk6?TJ*JN`/&b-p/_ao[+==#OB2(ZR>
%5hOTp-@g3"(fLA`A#=3?P$adR%4P0@djj&P:C8W7YNM4?,i;-uo=dXkk;7)D/0N'^^7mIA5a"6)Y2?:\rRq[/08K>W,$D\S]l,ZX
%T<=30a8BHr*lmX5r>'l$?k)41n)Eq?p;srFC_hCV>950CDbe3*8ZU$qe,,=tnG-gE>ZD:bmiP]*%h&3>jo5(inAtn*ff&HdIe:b%
%ortuT^'B+m=amfUro[Q-hVZ^dDsA%1]nsPc%hFTA6q*]9a_,n%#<K)2:*%S;8K7)-,.uFYj/NMd"!16X8^qP?&]5[:eK%1DAb4Z3
%h_9I7\2GsFF2D(g@@.g<6jWLNeTL\eUkc%Tp*c2;n@<Sk:ninil,rNni;cjugUAsi?ia`h#%^i4Ufjdg(%$`tI'SRQV^<<nb3!HE
%W7!:t10!F?d\*ut0hbAEgnmR=U&;cT/\07@o$:LLWasKel-]IRZ8l8]kfClp2ria"=>Z"G%At[75O,bNg&AP97NAh$Y_t3=Ym?/I
%_qeGU,Sa"fa6$>IWCW+cT946l;o%tc`lBT(>!<R6me`N-<N\T]$3=ue@M`b,B$.&sioedu-W6M&d3h+?&5=ntf.h9BIHEC)o?nP2
%Krk7m'fGs.j4o+O$BhNkBGe5gPZ>A@8<O_=itA?](B0Y++#^>^YV)8Pf/L"KKRkd*op48#d,ZKo0'WcW<"$I6h:WjVZ1EG=3i;oe
%3NK-+/@VW%NC_I]Q$Q_r3bWB8%cD\gR@L@C[/qf;GnGa$c7<S8ADP9D2BLac^Xoei.W.rerLJ6kYNb%^[0pb>\"M6[&%f)u<eBj/
%-n;_qdR'Ye'qD5f4rdtr?kg0Cm57GYDFYD'6Nl*H?4GhagsKCi:pdjQ^+\nqFI&^_[&]a8YCdtI]Lbd[E#kF"*:o:t<5Au"$l_R7
%&fEpF7g_@Hc7'l[[tc>!nZ@.(fIbiG\_3KDK.s=c"VTW0__kLZ+$Vhs427`:75k>]5q/5<B">OYHoYkaS2j_E0ZmQo]RV)]n1#P!
%q`O=2'sIR[g:2rU-D*jhL2om-\.%K>+lL4[8iF-ugKWVL=(1-YA6^?9%A!'OR.[YWFX+8eXQOU`4<R:&gj+Zg(F14T:<nkXh)+d+
%l/=0H32(CW=dVukq=9m;!\IT_30O25L\8+(U'Y+k0kqDZ'NJCfcSF0/4,]srRONPZ9'OU:ap]4X\$\sZ,b=LiF-9qV*-Fqn`:?"^
%2X"*"MS$_<KK_kd2Z8G<O*54L=ul2<:K%DF[3(%7?g_cEPPoC'rld+-ML'G]H?ZD6RPP-!J[u-)&Zm2SSW[(VX!EoFn=tVeBL9sq
%m.Tj%J8.K=Sm>&UUMDs#/02&k7T]`0.V!+p%+l6%64p&f<=0u:)@,Ds3\s\.?B,L_P*VilWid0Ym&8d+i!63MkNS'C/ihf9j+=,L
%$Os5Upc[qS7_uJG8I1,>4fTBjNl[JEBH]DNDi[09]l(H3BSV\K0B%cE#,Ba7rc+oWpbB?1?KcNK3C;GN(LTnJB%`&rSGX7+GQCHV
%BcX6cPp_/m._s@un3R>_..u"Rki0!c>3QasmQ@C"C\W7;A%\]/?o*0D*nJGSfASNl\nI?.!OuAqIRT#;Fib]`J<UJC'.^[:8Fa.r
%cI2.M97*=m,bi=EV[QN-OuGBiX4S=AAP$E#qQA0N"U*GO^T"D@_Vnonmb];+.A!bJ6j[Y;B<_X*)@$fUk#<bq^g@Zk8j8*1V7?$f
%nNie,$sNt7<MU5(EEk4[/+t!8pi'nNoiGCk=4pYPj)<ej1eZr9jEqHVp>t<jZY%rX2;pR\pOF'*3^og'jJ$ft=p6EWQOb,9P?o6c
%]%^Eo]fgjc"f%FQRt_Sr@M4/f*\^Rf_a?V5%%Fh+g>b1mUC[lr9E5LdN]!@IVIqu-'<l2S6)[fkph%)5P_(UJ./rT%1t`$6#\e#u
%nk>Qu6bJ:;@k4Wm\%r=Q`KS+09$;iVZ4b=f`@*V^J3.Z4:\V2K+]2EfD<TGep>Jl@4dNH]FERer<C83A2Y@J>dKZ?556X8?fMih$
%gb4'WYl%B]($`UI=<l@l,EPsm:t7qi1Y7oc,s+Zu!"pBlGYde.IG)mrKjTs=Z:;*V3G@-e'c5]0%VL%CYd.BE-WB'8P9/E@:XAh&
%0gor@*A6CCZbpSqAZ[,;L)krNWBelBKYS?gXddRs78et?Oj"FFhdjDP+g,KTUA\en<tB.WRl&,APe3up%S1"G)OcJ!=H:gk:o/sW
%Oq$RA9PN90P$*@M=#U:%1K%Z[oB1mUqUjaZ,u8G8lo]N50.\c614+s[,<)F\\&GG48RW7gAFBfGC&,Qk(&^6VeB2fXAVYE1YHT)a
%3"0<0%Jg9e6-7$<Co:dJ"LVuW/87S?nA%(`?.KYT2^4G?YD(%ILB[MCGY]DFcH-"5K7g,Mj6.\K*b"pl7cf_S#\J]NVUY`RL_k<\
%BCn`n!OZc+MA*a)5_]PZ')sc%o3-"Z3fi'Wgbh#L0rI])RtY,:4TSD;4nl.icJka7oVP>POj[Rm:lrei329aY-(ST;h:"N8n3?ts
%LiYS`iYtC%gFkY#7BKe8+>H^G:OX'-ru5ih:1l&4ZF]fX%6"</&e/u19sN3E.qs&AIjT!mjtRS%ON<0OS-)'#KMn:jEtm)g0S.nG
%`CZ&%G%X5"<gX\PI'TZB)8q^(g8+l#U61XGpk"YpKtnQ!:^G2njI:WlG.jTj%KUP/M2!5m$6hpZ/e=AD3Gaf^FN%jq&q:D'*ki,`
%N.&(/3=Zt#MmWVQ`dt=8"sVZm>&ZrLKX8+l1hI5=2MDh'j"ik\%bqV'7?^0)o]4\U]R:NeE"SWqTnMAo7:ZZ(%NH3Qg^AhZ'SXW*
%&kqm5Jm2&:7#K6^g;)0O'jiW=e&Wbj3oE5#*_L/q,QbPmE/n]o[jAg3WeW#e<d1M/nmtPBUq9ApZ"4_YqY6T,*lpW(`cG)6/'!JL
%9CNQMc^>*i4nM4nZ]YeO:uthh`qFd"TW25nHsa>r(qK;0K;Ki`8VkN90LAYicj-Q*Z@/DXQ428]@[]#5c(+lI9qai#j9ILa=f(F"
%2Zc%k6Z2TL<RoE9)]t^Cfq[3;g_mgZFDp>d(2j3)+qo9Y".`h1KtF-3?PFPgUB\7[SqrkIpTr*nM-T!GB8BF)1H4rh>e0@EW$+gD
%r(Ab]KU<RL!>XjVe$DZiA&q1iISMEp;7L\U9#<D^"a6.79KkYso<C(>J20ncULuqGY"5DtMkt+sTi>(&i.%HY+bm^gS06?u`5Xo:
%A4/OKF7:]-7#I+/FV\36b<M1TQSp+a!eYk&fMZFj"=+i7H5]$S_FR0\$h2(FEX)c%*1gW^jF0L=KAQ_'QS^kYDUjbNFr%/=n+^4i
%c+PF`s&JjaOb[5EQi*ecZ]TJ_]?Bg7ToE=A3:"&-kTQU>;<F\cN\kd![<uh09KYG[Z2?(^ccO91SdOI$0V\Yil7`/#T>;X[<_u`>
%n>]<L+TB;l2FG:ZpO!^uj89W4@_,sQYGH![U6KU8(:Q=oTOL<a3P+<@Jd@qH!WY^@$GA1jf7*i#)PdqR"W<p79]"#2C4iNbZgkU3
%fV8hJIi=!18su6<-FRu6*fCd=Tl\kdEX+t#]so"B//A*Fb.H/Ek9kpb""[(=9J8W@i_,*N`fEir:qFKN0r=VJ^k6*Z;g`mV*JI3b
%FTBFdjcA[ed.B51%Li7P9o%iT6WUapIg`#hFbiS>>-\oIOYt8RBqV$G:h,h,+KJJkW[/<Ifji)?@`a1*'`ca*RQ"EM/@LRk)G%,k
%^4\u,rk7=q23$[?>r+R86P^I#D.,j<^6>jdW4[6)WJ$40_N9$J,P(]hd.ke\RGhPM%rFtp2M1<Q<!Ndb9DLnJgSnpODF&!:DbHdf
%B$3.F@RW$mNJ]:8T1"3hX6JuR8jgBu/Ql.q%&tJV>i3C:ZO;N(lAc2);5,Lo-1J8\*%""4C&obpaS[H8HcFd&Oddl@X[jO#&A?3]
%g6"/D^/.@FY@hL]9Oi)^%:VN37JND#5p/khQlbtrZe;L2[t#n]h38QA8nbd#SBN4("+B!G+f$0LX;s#34]?htpg^kePbMgp!*ndJ
%.-aC%RrR%,N7um*+%?EHIIrn-e#,GD[^-uI^k`J4_[Yi;pTmtaJUl?7Lg7`SI5tYVN*')Y&iHT?%&4NOd/aq^T:P[CQc)C)#4dQ]
%GBk4`ZPj9_+F@r/e945ITQhgXVQO2ZhQA]g>B[>0!8H^sE)"oV2*.XP0/m!J+L61s_MO:Wh8*cHd'i')fP7UkO588+a4Gcfm30!k
%WF8/rAlsYS5:YqD?ueI0WG]';$"d-Q<mV"dQDe/c%Ou.<8:kp%>[lu9'K>eMa8XRpH6Bq9iOH;QZmP!WC0LmRZY9qWK*PCL_bKi8
%_B"e$"r(%kTCP:kSj9,%)OGCsAp8p$mN4QTf=gaVq_CkKjkX6j$V)"A"BpVnfQjCqYGP*ZQeNpG-5P(DdFhtVK+:#A=(2i_J7JT%
%q%097Cq.'s("L\O+f0W[D679))8n##W93$qRhaLdR+Kdkffi7VpdqN?#43K.)u1fCB]@Ah<WTs'&X-Rjn[<^Y3itrm?=^Ifh#_<$
%AfdpT[ilIDX/+ALF9'V!@llON;p,4S_!Chn%JC5q6NMf>SL=P)/_-F=S*5_F&`7'6Q>0=*I`[DH8KgY1:/gsuW;9JU]2UsiC('&b
%3G2@.%8oE]Td8cSbmtbr',q>)3;c=d^!Ta/g2-,S/7ZW6Kg`QS9n^;Sh*Uh"(2oRIC0jY$VJ];+*Vq]h8eU7%:<-3P8>T?=p5\([
%f&$JIWiEI+p=s9(`I-&k(f/'eOj%p@$*HK*H5Sc"#nReO42hIdYr-t:]&Aoap8B$!ASfU=r'I??qKRX--OhQaJt(O<YJY$5?75I_
%26t-^@l1JQ4$?iHq&NZ=U9fBt^jML0Q>K.ZU?dR\`5p1q9K&gV)nj?brFj)[CNQ8RkbX%@1*)V)_W=G1%U)nl06]bsO:/?uU>*Y[
%VT<P+ag9\Sr=fi3kq$OHU?oi=U=Y<>"73nK+ilCKS-II5.T4JhkG=&1eW:rlnf7lX"KdL.@S`,!8W87Q4.1[3H5&ZZ$0d5m8gn?W
%TS+::'>-WL"8bP;XQ!Rp`WnZUS:!URA0.^SE!5m$I*m_'(HC1%$>?^/?:8]*qBKERFGf$06QVPE7.JEcrY!A1b(t-LWH(;M6/&(_
%=]qa-/Ql#ND2Cjc[*X3jnKt+s;k91HMK*JBNIh?+&WFJEceK3CobF&,,(WX(CMFRQM?rdpIe\$8)]IFaO:-,B8AnN=BFGR1Wlk.g
%e!&6-#l*U8&:;]!*&6:[a'J2%jf$nU..d:h,5B<GYn3"4+lQ@iiMK6D3B7RM5b-r<X8Ol%Q=dNooMh7-JtbtG=aCZHe>b!N8i$p#
%fK:0YD%Ki1TZo1(]""jWVZ=G=LUF7[-s>Ef4G&O_p1kfN829?=@$FsL$Qh1Thoi.*NTf(iIgO=jIC34-4&B<=G@mXC#RLcPqT[&Z
%Wj]F7;9rBdi]/8OGVH:B$Z=AUT8nAVT=WF<[so839`P?)Gl8dE108N&":+bmc@-9/n8")gb-?b_bsA*Q9?fd]$A+`7!j'r!8>N6^
%,fjZeYgLA=OXfFZpf?P:I.KcYA&Um:dEbW4LWi?tLhN'(.HI"-=o*)A^W4^reYi*bI$(j2bC8^q(J80J_CPqSq#K!]e,e;<h\SD$
%iiuWE9!Zg;[g`'I6<bbt[Apl5XA]3rLOYs,A`mSm&_n**AO#sF4+$[R__>i,BBuu'n7f$_cFFqi@SV#SCN;2AJfNu(7CZ./"e$k[
%A(UFFbcB.\:`a()AukmmkE4mf*V(ZFnE.S^M5o[T/NnB2+5/T&^_'?^g-IQdPF^cj,>_7sR(,mS"X>f#Wfihs=ts0phStEc%392n
%b/0H_aWYJf6T1.\UQ@W0#"G<>LYI+Fe&!H-B;:",mOkFP2Gst_>8(]ff)q:4#2MuI6EW7D,J&]HMfpYFqQS_O@]sZh%\BrI@Tuh]
%JkBK,$EQ[iH_-7&*cC2`o=7<+J[[H%[6[<N*Eo+olbsJ%dLn%\h@a($=M\ILfP]pE>`$R#of#nO61jh->9u@Cr)$K^15iB-/UCVH
%CmE(J52OVlQZ)*H&LN1055@YAdJ8J5FG*BISTKjIN@6<'iW>/PR9csSZ"$W8SAQ@rE[H@Rfq"<&hom$k.rmbM:6??A]VQu?Z/A`W
%"g/][\1m,')>K$b_,0YVMIC@BV^/%9I8J[oMpbl'C(_?8dc&"XH2+()E^Xru1`r/,HL8eMQ#$!?(!A7\D]Epes*.aDIcqJ$aj;*H
%UoXlV%)XlCO/;*;QlKj$-VP!e$HkG4hb!AmA7c"eR-ZuYKO_/-WPuWOiD@3hN1L-2bQV,*kA.#M.i;o',Bt;.%7h2D+7ApW;9G#_
%`@m$&kmq,@f`E^j_\[E+L5(s]<Om,U@#CkW_Or`RW2kGSAQ0o[X'Q9M.No;@MWO8d]>%UU7NMe)DXhSoS#9r)9ZC!s;rOhS*e(j!
%BCGX.:qm>Vj^<hV4bkq!;0(KH,*d>8;UqaXrp![u2_QQ^'&I;ZEVZXMN&!4]\#SSDTo.F(+!@d2V`h=qZtDsIQliVePf/1R9kJnu
%h)md\?'8/jjGJ[i5JlPO#HCAa_SBeJ(f<a5'ef:VCCN2u4H_,q%g"<Cj+'79]J7oAk/^]>)a,%bnl[Yu^u6O+@mt+M&]iBC)GDTc
%Me)"`XR8nuHkk+B?[:WX*>MeE3ka#XZ8i_cI&a%0BGrO%@-KNmV%C%6i^_.u6DMg<!8(+'-\pE1fd57TDcn*`89*qRnX_gg^C<=)
%[I<sEJ]CI$m[e<A;f(BZ>9T_B_!r'\)+?3DeE2#.BaslT[-3@'PMf4oeAo+/D,>4Do2;R3rIC3X("*??4fpCKYt'SQ9a=m%A2ppW
%"4+D2ZUm\="VjfYj%&R(/)elKQ\u4nTCBDU1UeDd-9/4?Da)6YBX=*B")G@U-\s_Tj/,:^<<>`4g;?2E<+7U\iK6Nr.A0^3d_[%+
%g>"2Xk]&kO,g4U8Ct2K6V9D=k(3#)U[H&f5;jC<U3:KsAiJli*Yb&eR&'st9TgNfm`*$*Z4E`%Ig99f@'k\_jm(LgT"YHdDVbg&[
%;B===.M3c8b"_stRj&SR'D="s"8$_kRV/\Knt7)!P*7Xr%P.aM"T1UD;aXK[C@3S$)J@WY]^'BYYqN*8.6KF-.($l5TCL$5.,A!_
%CbE*oE"5?t:,iW%V!2%8OU9cb3)rO2-,BF7MVt.sgjm,%\`.q=31W<NQpMLCjZ>cQ\AYY-93%DrI&4(k%]U<8'H)[MPuUJ(2:cKu
%Y=^]X<hUsg<T_Q3ECl\tj-)WMgho@`S\$'X]q_n1_gT`X`?.[XeX&J`15Zukbsd6I5/LMDah-fQMKZ6%],46230;B8J7t`8YG@V!
%W;=n\[^V<`?DGcEHK=`Xf4(r#q1Thm#;^jh"-A,KSZfjtT>FCPgo$Us+V@qBLpH_n:\*ZrHgX2Nd:nrI"k)ee,<'$+75s&,@Cinl
%brZ!Elea8MV<,?jF#l$rPR_&YC@^tM.fr-_ElSe43?!h]W6N?qrbrQCM=(UcI'iAi.CqR"*Oqfc&'`U%[FCQ9BNX$q-M85s*YAV?
%PL,l@$Tn_`'qP+;(eX?H\udgUa,YS#Uu65XSibk_AAapOes$os7LQ'\>AJESFDu*t?pQ`mgJh?7fBTJhJiH5s3c.,)%!%&NN\(6&
%K5.Ijbu&n.prSl1=:,bSo(?)9(FTuM'LX8p,_iisA;RbL)DokBkM6-7_1>T;hKcfo/%PqR&Nm9/^(=W2qTiZ^"0I1I-k[/3F'FUj
%a0Bp\fT-X,KO#uc:Ne4[$7;&/fE,4.=j_[r':^2'T\4bGni0jt7Yf,de,q_$9#>Sq42Ei,YUmm5B@#<e73%1G4(@D`89pFe>uDBS
%AiN4t4pMN<1rL-63Bp00"38JT"[rmN^HXp:PK.PERN4.q.OJ_8Dk6"MYb4d6)a90^.&&+<m1d6/rZhqkQWV2*>D'%VPF&'JY,?N8
%>GbQf#U)Hobaq3Y73*%^>$6$[Q=hK(Gql>\\?3h>;Qbs!9M<WQjR:/un0qZoF?NI/IsAEbNh+0tW8aDU?FB!p*8e+s,_%>*p/#e-
%?e"2#Q;ta->'ENPA%\5@rsi_O]JuC4(&rsJT]TJ>PTp+XB6+2b34R.2QerE2GuHPuZLh?\c[c*)?WA((P:0l:R/-jZQA>i4ka,):
%n]?ChhF(Q.[9.\GLG,+49=o,E@^g704pa5?Z\jm,6*2ag0\&^QaNL]JZfOaArC:hRe8.XBIJsjTXr)Z"@+k)gC,+I#R[YhdHSY2,
%T-;ZBA+4P)+Ji$mJ.FC)M^gBc!1S;t+.r29,Pg*Nd=2/r'lDMO:cKg&LsR5p4K^sGEoM2AQ=?c/]XcOC9?b19Wt&EGitDpX1Mk7;
%bCOj0[4B>0VKK3/Tg$->BMGHE]r"SXCrn?"WP4A:[M6d=%84*Cm=WUmZn\<Ejt=.)APP^hiFbZ!Nb85>1(OrQ+.r<%?IZ.[cA>u<
%Jf;5oC^m8Y6@:RR,XBTeAu7;%?-9*UMl_69cWi!@EI'^Wen6ie)lXg*Zj2R\XP(b$Ea>GS)Kbahhh^SB\4nLK=8SLp45$j>/&V]r
%CgEB4Pl2L_>a;_#<t7=Zr:4<JC)S@EI=o\+LiB*Q1?+"\e'U"-JB(7D(8^=r;I%to,Z+mWL_;Mq8rXp*H=ZOS;nM'>Q.MMF(/mAe
%glLLoj>T[X-)'aBQ^e9[Ql"hBN6=:*J*ds&i;\;3TR$e.UXoQ^^P!Z'oY)ZQM.Wj>\gYQD>rpbC/klI<XuChnS3P[.Is#$!?'WY`
%gA$kGJs>>#+be&[QJ0Y8jeW8QUIh2AM2FilRL_*f9W3O+-WHX+qY566'=W?LlKoL]c+;C^b6V^XEVdOo<jqR-bpHu0Q/\f8TIUQs
%H71.XF&G8`YB".o[M@As-NjK`[SWWfY%r^6H5:25#dU?WfD"m[`&q5r1Jf6ujNtfoXD+`4Qd=O\Zf_rDl`!CGd65l^!^,"Bg.9ki
%a_3U0m]p@IRWP?HpJ]/l6k>'5OPVD4Fh*+GL9Zf,2T8\28J>+9103N^]Ns9Nm[N@\]U]g>l7kl1Bkp(8O6Up8(kFl2JSXe',#Tr-
%Ot;:*SpFP'UkeB??>Ep2f*Qi<'d48J`VDlmgG8gKp80E7P23Fr@p9f5f6+WN`E:2NQ$Z4g:s\.CFd`ZGfGn@MIgolI/2^a%GKH')
%2)d2PDUkB"p\!Sb@D@^U]pu\pLRfb`f4\qc1LW?bqWa'Ci_!<(g"2+A$]=*r<Z2l'=hL0PRU=VrE+YYbf/6YR<lG1s<qLTdSTBb7
%6FoVh\@.D>`aY8USe<h^fS/t\][JCe4J/JV.^#:<X3896b)H.`P$888T)74$8qoBLeBf*=JYnR3U#U-pWG0+N>pF(5nRYmI([dAp
%lHQ9(;oH%%<s_4^.l<,I*:!Ure"m/Ri58_]qK*3bN6]L^d@4SFL[ISt)',.%Tq+H!_A"X;R27H3(-l8!i/[]jAHg&F4S,mL[7.[1
%fM8.G)HDI$.<JgW(=X'.NIm(gC\5ZLm3o'1#_4\:LrTU5XG)udW].%Ngo(N.@a%si:gs3e^G(oa0BDMCbtRD-W87-!0=bsU\2O17
%-Ge<1OMUL#.7):)V+C\VBAg,iRM#b0cQ;to"8i+YCU73:=gM,Fh*"LT%`P:/:>;^lB5(0N]&0I\a.>ZCI.'"-\jh&+oWuRu8"#i%
%^>7mq\[HA(d-FR3EZb3m.Y&Jl."IE>.kIaJ?,AI&3"O@ORl3he8(sV<fjo<]dWt`8qSPVt,$]^4Ul%mM4<99Wlfpt$H,GNG=-oBF
%n5lH>Dk#aJ+l+-=6.2*QSG]A\i^!*2.*`quRJ#?*@<=DTNHDO*_09,jfnOE`03Q*VnsE\1^+"h+%b6kq@#"+eNL3;dABVkY2dD%6
%^4lq;H55p`F\R6AGDZ(`4^Rq!%rJ7Mc&*$r;]uf@)6Fs$!ibn!)!N`D[#5i'XUD(HEecYkG8Ke'!r@'[O;C%4HsR<52s0(Ac@9i_
%(GP)rG&=0aD9$1e'LW_DWYm'nB$SEHAZ\=.l[f%=@R8^,C>1:a_8kq)jrjaGC-E$jma<FK.=^XocNnT$.ZRZ[jn:'#])IPZP+IiS
%.O-Z5'j?7'[mubI:<*/-kTppL7uN;=4/(KNSL,5;_e4b-U$oS`:ERkinmN;,IBQF>Z7EN:1H*oM+sVW_jdMl)F+0A6L`>S2Dl0`r
%iU?Cs3W'gV(13r_,G#KmgS.nDP-&;P:K0Rr``bJcek>0u.J4*cPb5ISLRtla;nj^\^kkFnXi7dD+O'*cqp4an6*Q)f[*X646>I/G
%3<FQY"^j+Mgam(a%gA_*e[6_;>6q/-_eh:A%iacS7K.F3kJXop)7HD-2O^EE(u*MI=@3;L%NehZ'p94='DPh+bDO9=%8$hu93^S8
%]qR:U9/PP$oYCE&6s?s[]Je\niOcQIcAAUJ><o`2mWdHh&HR&II>c,]TU3,;?0IOr#Pf!9I+O<_F@)%o#m4@-=C!Ud/TYJub]Sae
%%lV^KQ]<3'JBZ1Koga?hM:2hK=^W2EoK'"UMhrc*OY4=$.WX$U6_:#2bC*&$E2iq\J-4:O-9Pg144dk):@3:AhPWdh:7B70TZYs@
%Y"HEW&mCR^&!N:*(=*t<g\SY0guiRQ,7I<teg7+uJKfCLpnPPToKO3*apO&(209"93sh=Ni7%6URt(#S+ah'Y6=\t4L0Q8L7E"**
%^(sS^?M.$4@%O9LGKX:%En`$=J^0^#M))Xeh1mT&Po>0"NFSYt^t#.^L>YG5C3/jBJ.Z"BZFseKGB=M70i7u2mNemWH\14`8:WSf
%M80>!F&AdZpQJW$_64/#e-u"Qch::td7'Cr1NP=lq=Zs,Q0+dbSnk<0;2Dcfc^'LJq38qsM7aJ\VsS'@@n3<_-dJ)'X2h(]!:BG'
%3J,P@f>(XLLfdbK3kF![2W?Qm%g"J]s56doNpn((<6<RmDa]sJ.!J>db8b/S]IEWUIe4Sj^:3Ti<(/Wp&<&%7]!G>oUbCP+ZFYsA
%VE9?!;c+I`Bg!icHW.3L5*SMRX3YShV*BlS"Kss=k0R:R_fN+X.mJa$9*E/iW6=c17,u2BQIM5[X^`TYhqXLu4Sh9@]u^jBLe3!=
%X,3C&UiJQ)aUoV;K$VF[@)L4>P5?.>V*k8L\"X_lFkpp[8>2DX,g+5p!s`>YlfjoQ]O"VF\'ef"_QM>o(oCtir`.s^jMJSiNb9_;
%bB+(@URdQldbH+1R;;9-jIo2\d+e&n@['3kM[^u(Pk<nF!&7%XN[&XQkYN6n,VTP!S]u3MnK$t-/Ukr%I%+gRC3%Dr]AJZA=uJr#
%S<nb!@ZFC<'*4KfY=MTk7Zl/^&Ofa!<Bt!C=(M<U\of)t3bZb-S^be)+U^X;'%]ILDhugmXIc4GiF`DO7B8eq:N1:(a`p[c9jNbF
%Z.-)fmh7b3Fi7@XXhQ$e5C59\$fju,>HY*7#:4I7OWjg=O'8As]sLdaFQqc5=`3aj1uLFB#"!UVFb0!(%N9q/SbKuqWl)p=OtQhK
%>]dphGO>9?dhpW;ljt`/1e=90d5He+OIe%>B[d-&CkQEf\uhV*qBo/=^6T(bG;f_KKW5hq:LTUE\Dk]39:Fa5HC)C.r?CLnp"0;#
%p`VLA4]neZg@0M[5RgQ%5FI5(AUln7/kOgkpb_K^'W119/eY-%3n[,qToG_1Yq8;NE+>W?C,k'^/l3Hm(*sQ2><N[:q*PPe1'bTK
%lV7$cBP7d9DB!Lb5>/&DBggV3Z3ai'qBMrU60-UYJD6og0#jqMirq\VW:Q.HliC:180;^h&Ri2XRTqq-/@tluN%`5L)P<N6HGgu(
%E]N4s!b,IQN*bZe<$oU#YXLu'AHfSB+NTX3PspgN6K)?Efl]?u#/]!DS)/4r-KCt&G(%P]12jBM\OdRW<9fTrMok'#hhe_u?;>sQ
%+_@T8;Y=3f@#7&]aij1P,]ph>Qo.C9Y/a]h)R1[kLM9$YiqAPq*%mE#6d$a.)>d9OA7Cde'duK4hPSV@%53*/TF^_N/l4n^#ID3H
%'jX:Cl\JMV^FTNR[)>SNpS5QU_TYZ)@WQ!s_Ba<UF=3#FL6fSR5?SC"$!SWqFF!b:2iK-j1T>_UOM5i89eY[c@5#l1PQ@*TAD5);
%Ws`r4.?[G34Ol7ZfpN^m7S[2Eh&YJZ0<Dfd7hcmSZIE7S1Of]gYE^Xq=n8/;JjuqiqW])RFUW&U%5G?ap/)R,#rPmXVbTh6"jE7F
%2p(aB'L?(pI07N2m$*Il$tHJBe1ucs'!VMFgDIc=?9W&8S>5QmCdm`-e#(6':eZ^lpElQ/^G&_m4p;h_4rAI=(Z\^l6_ok*0_jE$
%bt3=.lUj6f`0?NB_44uRkl;Ej)Z1hsA\%ApG"J[Q_@R<K[2hAO^0.*N=UVGhjXMo9Kp#,lcH)JN8kbC>*iDo!dSh2$F>7.1Z>1pW
%.MjnFM;P)S;dmUA+dk^B('pC=Mu_s9>t?#qr6Z!3U$kiZDZXr(e'VHb8"j21'QI;*?PSoi-e0j7]U#B)Z':uKOL+lZI/ZstEa:.f
%C.d<I&-$N5/7D.rA(\MOc&EnapGA2C,:V[_BSJ&:LPL^DVpD*%dj#Zqe$*BAV<3O9A8N6`h+eU/q#o5BUtt9$WB@TB?1DYHSu!st
%"9JF`&pCG#nuYKI%]h0l[M6&L3a-jVFc'3n#FS9F5EU[nJAN/&oqG/[Umim.i&Fh/A/SGl7\Lb$*A&s'TEMYhNEhU]=>6PNX.=D`
%25oY-0]K*MWjtrT.87fZ%on-)>B,**P(b`^l,]=4EEr)0d_>B[20>uEKD&6rWsroTi5bur$?^=Q_@S/]PbW.NI:^Lin9af/f/7t`
%87k5u%d4\?dsu<f#9@b-Mc=XA,$KI1jgrZB]-Qr_W8(qQ?T.I@`TGhe\#>Wfs/Diib72[']/LjgN=aK_7<^)jWqfcMrr-+*HM)Qe
%\,D61HGju.[(IiP#3oD[FWGfY=LT!Q//qIQ[>uPL4at84d-`YjQ$P%$MX'&[-07.&8G.0in-F^a'/QgmN^dTQ3Mq[YbM&?tW$i6c
%f5:d@QPbAb^)WaI+[WQB(Ab_bLnoqRXA)%b[1NrteW3cqJ<4G]Z#E`;D"gmj8e>l=O4\7oO4@#H)AONV,='?pNU72B$6PP1%`Ns5
%4N#a;*(g%o+rkf;TF6Bj+%^UcO0muRTg_]3c1P0Moqr_LM*aPD-&&>#3X%s5dWqER%E*7pOX(fW/!6i1M+1<_58\BFUJ8fg*MZQA
%$Qp+:VKI4>Um:AL,ASt8X&@K#<MD-WeAjTBe9Up1Uo.SuWc*B-rSKj=e,F:bjkp'f\,Z+crq50`^A]>nFl?-qqLAC3^XXXA=T3fW
%\FN:>ELfr+-XAgnp&BI;[t"%rrqW2ac/8QOJ+`C"Du[(HrYL([YJ0u2TDl;Qs7K%_l$r<qci<c9F8@iIhd4ppG4WnlpliJi]77kN
%qQp4iIsh'Ys7cQ`GCTXB^$&3trq50^I/UB9q^;=#?i81Kq)A?Ihu35o+1V&s5N`"CbQ%&QK(fL/k>I8bou6rnJ,T,ns8(WVC]E@^
%/2.%gja[8:d`Z"rdIeU]#MHBjE3j'rCH)qHES'cfAH]T$O_Zf:$-^EVcck`\)_*S)n.J\EULK[C)D'BB-naN(6YR5'hK&)qe:)Oa
%.Rk)iJ9&ue(QTo)=sgCP)eMTS;P$maa/au_(5UF2JtabiJ.5RGJ,UE95lU'F3D";m![K\`*n:^oeT<tC67/RUgF!o6,Xc9WO:S@T
%,OOPORYJc>VE+r>ClbOYOT6te*,l`E`7;$2QeVQU1C=pTDGoO1c1XBiHOP`m8u6Q:"%).-OZ2=FL#Fb^m!)m#Y2lItl@G7[DK2de
%Xm#M-eV@ZM^Qt?^`CUAsUr8u16;RVEPYR/8)7cQ1?^C>k!<@2&/WdI-7>$t,$'<TIRW=,pf?ifV4]<V<'GZCW23:a&;E"pfCI\d"
%R\,LJDs]Nq@)h]+C@r$K)VMqD]=!"fZg#>q=3(o#SE&HA?]ch@!e@Tj=6moLcV*>qql4J;(+o_WnsK=;9?g@Qht>\".Y1NHH1u0O
%p;J+:5C5$Q;'O#Ehu/s(54dT3]j5mWMf0EXSXhE[GP<1$1S14>(YRnPMPL.F$JagVM`<b\.ufgGVg0nN@2!q]I>ne)T/tk^::hd(
%m[lRBp`.+qcL:c_S5J1Xl0ZX*hn(PuGBLXa^@-itMoV^K=CV&PR)?]40VQ36^<1;1qe'1gH+QDZeZ\B-)Orl(-dO`6pFZ8G`t+al
%:97URli!GEIf&Q6mON3?pic&-j.(&!DuJW$j2n@#m=$>&O]fI<Q1t,u&WTFunXO,gmk/.f]V>KK(HDZ1PDf2_3kc(pc4?KsI'<lf
%nF!"V5],"p?Zf_$s,1e3j1ar"HFrj2:DcmQju"<KS`Q]5IRX!J]O.'9oua9;A=1S[?XYJ<a$'B+N(1qf9`PMn0F[o,kDJC/AP1J>
%mQZn($\d..S)1<\qn]b"kJ$AfHJ:&95,"Sgf1rb:eqmKM5I=_IX<eq>5San3%o0b1rnmZIoYTK<WW$Y@T"Y?C#A<f,U%gS$nrO7I
%r>,U5P3P,9EF65*k3\?#jF"qWdtc!6;dM8`Nq2d:<^X+c^.-7,b1hqrrr$_=\M(qYF+;6`T'd\H[tiKfE4E)K'-6Jrf=YC6ql0JH
%\XiV5cM]phPb7Vjg>OoSD(V\mXF>J&CYLnTE7\&+I(Kq>V;/qu2NcWe&ejohSCM]\f":$3JMZUjEG\+REdu>^iSAFc?&KZ5^ZO>B
%_fPWnjeYJ7L#uaO:^)Od#3K/'+sqA^II^PuD\k`RPSnkOM%<X_KUtO_=QRKuQe#@M;eV7Thl[P0Nd"iNrr)8?mRu_Tc?J'QqsfgH
%V!)lPS.N#AGnMc_hsX3k:-<HlmpG(HYi)O*q/ZT2D>r<4+,[Fp>Sm#GpB@;\Ad6<1+&,Pkqcho0gqRn_h03nRjhB3!Vt!.25Xb7F
%;[R((&l]_`l95`1>L3Z^>9b$'C;j!HS7e#J8-o`!p'oZcEdgPV7c]GsLdAtY&'lWb+[p^Y.M3buY/T_\7,)0,KTbXj^kF+G(ALC-
%3:ID$r/WP/i.eTuBOt]).FcSE`DWhZ<E@4A[VF*g@dbdRkDeQE(%$K<ee2+d.I,*O;c6YpQB*Ni'pQhMIoI?nW4@CM#rC(:[gL)o
%?R%[=2KI[h(M8dj,@X9,N"N<?#B@>/5(dKo3H`I0O/m%J71ose)6khn)C]-7#e-<*r1U'[_8(h<#)!jIa[$eZb>t]N(Q+]k999>?
%+^E7(93ob>F5nP=^W@$4;&CaVo#LOT9Zf4;YcfJH1fajuk&CD8FY[(H_t>aC24W2DIM@]rc#]%+%V!s\"&%"IroW?G-(pujTdYc]
%XB='S^/P]=kUG\pV,jR8.1kC4lFV+6d:KFP!=9QN8m[3]/C,G:aBaDVKE<]PnIG@ML0[sbFS5%WNA6*>qf4L(L:MH\EgaH>8$:4g
%VV[S`^OrTqPMMM#XTh`N!(mDL!qNp]q_l,>"PUfu.3u@mSIdG>T>Zr-LX?)nGL[dAqq7dJ?>pGZ"CH?!W6,fVYP=0%o..Y@UIfj:
%=:`0>Y"jK>qU'+NTsBB%jq9h`kr>AmgBM!b$ZJtnR"WpLg^%Q/pb,;c56JJt+na"\$N$m)PA4=dU$%h`e]uV"V>)3/6'3O2h!sm^
%.r5i$J$uJ/R2LcP)3q*qn.WtNI3O-)9r.)!%Scj=cjs^SHq.[;XrI;UW6Kj2n2UgRl+IX7n4Qm\b)o2O\Kd]po&<*l54Oi`R`1gK
%;J&ph*Ztk#S!AYj>T\7:&LrQ.h)!tPrG3n&nLj"UB@W>7m=PACp&6l-GB8HGWjg>eC9lGC:O7_sf*1+,e&1"hL!UPp8:C4j.%7<A
%:>fr6X4GP?;+IY`MA\F"i['Y6gdC:;qFRZ[=R%V>WaIfcWDZ^2RKZWqCb(k<`_&&q`@b>FE@LZ<l'7\F7NDi/B[NLu]6]<Drd91j
%GZ/IOP<a)cN!i%f16iqD*Cu^",oi?pEkq*P?D>&Z-1,@iMfD2o2GD4":jDRTB\Lnu_j>R\'G@q^\K]4-O:H0.q0@>-Za%@7L;1'Y
%+]c49E_.![3bhlm1C_C*],"@W-us6L-jb)jDG/);8DMQL@-?$Wh[OjDrm^7VmDCp4e<X;IClKF3k(OU[eIJ9kUl(^JHT1C]8(]^;
%6^.Yo<cHEBl</`XZY@?i_"-/0O%P`H!t4KL2p$Tl_Q+_=_>kK%eWd(E;6M',)Fcc>kVQA)Soj1F&,GHPK-;Ob3BR#sTWg%&A")dK
%+us%_b#C@,BjY1raB=l.g#V$uF(A^#d[6C=EkM8!C,VAiM:sP;>RM=7M.q!eki:hdpXSfbT3jl->8f@U0N,5[HiP<BiUN&RPt:Zg
%6EXsI,sZ"<NlDp1mkQK3_02N%6f=!Db7\i@$?.A*p?Pdp(e]:D):KkZ>mq5,/623ge^7K.>MF/ujkurdH3]d>k[_X#H!Z:>e7C):
%nm4OEOOmf9a'U8aXO/,5cIn)"/Zm?MfRS>_h52W^9<aqs-icGE/@h%M_Xq,\B[`5f^egjXS=(#BJKZpYm("t\^?"b"#P3SJ@$'D%
%*im@,\*.lh*)O/B78C.d2aElmF*IW;\)bq0hl]fCHE+`!'q:DlD83#]^F3h#/]i5Nq6oX[\cp`uLa:!4&\:h[+kT^7W_+JVcuPqt
%-"IW+R9Zld3C"c#j9ha0o@5QXTL,=:ar\#4OinCdoJ,^>3e?+hTW'?43D(cY`4nB;/p+8<4VXNm5;Zb'>Z%W584$`F$(K?,dh5f0
%cUl+6+p!\g*'%_m5KoHBR;AU?Se:Sh/1F156m)s?acbk-KoY1)NgIHS32urkbG"IO517,J6GZ*1Ft3bHXs"f7L5&.LclP7.Cf!+\
%]rGI&bcHPP@b?"j?rHnHHgl&+.5ZrQNWrmW;Ejlf'"Cs080B:-Pn&8>i;#(dk8&b"CoLN?UKZ'FUn_uU+8Rb=mo:8P6QLgFO18p&
%;)`]iVes4@\a=E\r@A:gnTUf`_:&<:">qDJj,R4P@TJ5Ds-?5Uga,$FZ([I9`t+)%hHpm=@bh8#SrjYC#Pk@,jXh%Fpi.Fmb\JrO
%_%l*9cT?Xj!fCqIZ@d&4VaLV.IcipiQ'al8GIkUur\@Xmb&1&eiYRXD**4Ud$=9(_j#o4`#9;!U$(4DB,_'jEJS%#[q,V%9P`]4K
%0]Zn>0-GqR1VmM'BEY`mS&=5Z4#=[i2MOGo1)bU=,8B*U?CTN_$CMs,k8HU0iC2nJ`W5<Tgo-D-!:l6,Ut=^W%t71U!-fmIdFk=H
%<6<5WfiNYsOguIKW.rCLNR%9`psXUX'REE!6dfAK`%b"9OH6Ls4ZqQm/Y#^,C-=8r,JB3rEt;]?_7Ij:#=45U9U>)4(rG:%gsK_D
%9OnYs^u`Z%=ZZ*K\pu8"[F&:2Ze:OH6\8Ecdf=3\>dRD@Wa@kG3I!d>0.Y6noP612^i+,RroeNX$eiGK`eI1?lUW/iCUpd$RZZB*
%?.j+DL&X3XCNuA<EHn?/crmLo)j%r1Ym,`HASlG!VC@I.1gTnW;dbDX]H^ASDU4<A?CVEia_%h$:qC*:55B1hX!D3*f4mu):+fOU
%OQ"k*#al:UB@b;TeE%gH^m&E1epOXj^FSd;$F#hl&mm=X_kTX<YR35".7$>,2U(-E-^,f]!R5a!ku<fZE/".B8K3!1'b[p]9W5LB
%]WDr`FO!42FpF7;[up.kgC[;3(gojI9I*2A>sh4I0Z@pLc!t1D#gOk-YZ>>$G?lCOY5Xi#q$peS!V^.&7eX6c5]fHU&aCQGY<j7@
%?"qF70YEG$`HB05;#--[)LKD'ZOn$M-X2G%heBo)Tb'RQVl5b5qdn]S&[+faj>"fV.u%e-h]&,]`8'Dg/18%Q4GZM5XQqZh\AE[]
%1I9OG6%m?`BitaGkegrFK47671q79JE*-_B,pd6a9MYuSb6pYX)o;kSaZau+B7G]jVH!W+W1;jYg)acIB2+;41kkkE<,-29a>O_T
%ZmG#-%6<%P5eK52P:CUL(7.%A8.Y]o!GKq,c<GK\.?D9Kaqg%L[]D]_1+MNo]!.jDn?PLZ7?TodR(!6O3oQ*6'A$1Ir=95+38[2B
%N+,8>l5XSo"KKBf4kH?me.tVtjD9Os.u/5!QI\i5Zloe!\,87sFmt%6,6*+F!N[iQ?h,DO%Zp`/g[,%h_J[as!Z9`tkaW@?H3-F^
%Es"jFiH"eDlhpU#W>`d3p0;ZrCs]sU^TKYjdQce@,`6+?K0iM[(.pei@Y%?uX:A+#9M1XNMD8QYer2WqJ1pc++!hNm2F/1F9$+Eg
%@`hXMj<#hS6hsF@r'IT<i.T$"$lO2@.28,]&!<7g=uiIa!A0W2XQ#W:JjZ&`_a/Nq_Y$J]nI9omE(f:F,\Ri-bH/FV5`MO=&kd!*
%0iPW@)PR/SkIre4:+`JAItg>h+U\30r3nGUOSSZhX\b;\M<_QX'pK*/d$"jsh@e4Ad>Pm>)B0+DW8*s=Y,sYiE@!MlDBSK!"M2KF
%<p\pk(fQ0D*oeBfEB^=\<[0XMoV=qZMlC:^aG*MNigSf>diFhCCWX@$WJ-GL`dC/.Na[AL3c/#9-+/#@iK0Lm*HqgVR9:gp0?jtX
%]!!&>5?2BDG+5?fXC;B9H\Xqd,Sj0)C#:bPZ/ec/o*3<9AeVg!Vu`*4)Is;\='fq]9*p7fLeoW,Pg;UI*d/9`*NZ2A]nCn#<_](H
%n$]#"rfZiFCNep2Q!.)Kbq4B^&M*2+@!sO,V5,<\(s<0-8cfV=G5Q1?]kQI`]5)*4P^S[$./q)5gs2Rk3EZ*D@hj8[$KQjfOoh6#
%YU$OTCI@7u_,T:r6&X@8![bf'i\?,:JgagH8Ot!NG@u/qL<XJ?*ue&`\('c'8h(uS7?Gp^^PQF,SNDC^`E8CF<9Y,U`8o^ZM(2n<
%-l^kZWeL$90k?YR3&MU'4]m>/"-H7g6RX]BT^Y&^<6o(Zf!NOBa&W[NR5UcX?=1AE4JP?(n=*lcAcN\Kku#j0#sCG+1@%A09)aj;
%@@kQ27\7BH<WRDV/(lSlaPiUb[in*WePUjQ>q2F6_,EQGG_FFQbr="J@WJ;u(bg)SB3Qc@ZFYns^9oC:&fl'21^+F>%[+M]^#1"4
%+1g;K96);7ZJA,j_!404!(o?-)edsifK]9#hC#PKFRN"*Kr17uTVJI,)j!!B'd"c#e8_%s@+\=$0%.D(&k>'^G"MDX1.Ss@b.P(C
%`d;lM2]%"[kaqfpF7n,-o3QaP#"S.Wl3Rd6b;:9>QakeUT6a"<V^(n=^;A*jH\R?\mcgp^B^Nr:Lnl]BI6D&oa@'e((nq8oPUsf5
%msHY!VXP6`NBk4:]^W$GK\eHk7u<5s25N`f1('@D7,\_[2bH/R7k=<?m^ZE"Y;Ol!F.&XgS17&l=#9Qb7s(4d)bIf]_e?S3FramS
%.IsFE9Vom+cS7lG58.HgOQjZ`;jEJ%s()l0AV-VJm!36Z`^kT8Hl"nP`N5H-EVRC$41&6Ef/-A5EHn#'S$&h(PANq=N0ZUWVRf)g
%7rf;Vh(caV\'25%5J\kt0n:%?P1.iV<ir45YF)r8s/&H6[5sR8bkf(Lc"'&nBGSF.I,aQpVo78Bmq^aqfQYTW5Y@F!)'9?K8iHq\
%+,ehLna2!RHto_:27mC7*TJV>>RF3IF1?#TC?g1%pi%H$5s8_]JDsXV"Mp'Kig,&JqoH&i;2^p.6kb6K8e4@)2ZnV3%!$/4]#,'F
%(.n[USZrjMU(Wf_,802uXtlDTcf<oL-F[fiUK('hn'=AH&]e0`iAu6k-@1&X.MB2^Fh7eH<JLRrLgCAU.&BMl`=7%Yd&6%tSe!s$
%FZs"-ja9<6"9iS"=4V)^J^N%eBu)X")KG4B,ehHF<9\NX.I>,Tf'B%r4n,Ns;G3^J#iotcI4n40qdMu'V*(V$^E1!:D&$O1M=O%B
%J3gHWAVG&(+:6rC!d(1Irf1SIP?ri,cmkCdTAHNoE2C2,EX+14S6c5aau]Qejd#S_Fsl66T4q6ZJ=Bp]!!,L.p4f`SIh>g(*Qbg@
%cD9+>;K[i)[`\7[*S)a`s*&aF_32WsN@t)9D46O5W;20sC:]9F[C9MKC<ZFmHc.,j2:(j2)THZDo4fJgbP0[efm]3gXp547$nIgk
%;(Ah5S90$F/n90DR=FM;eQ%s4?E0iC9qg$S?B=&$aUU+DVHRF^8:o5JQ%7J$KcG(5BI4qq1+>p2d-RE6\lL:j[-BRpm&sOFH1nWm
%ZDlr<3tm^6JK;ruVoo3;]@%h/l6"AlD']jkGr(qs?.(?p\14ABK!DGmWmG>+BV)GB52c*X'*;6JSFb=Y(nCItea"Bqh16PZ+q>L^
%#URt'e,^>?H'A)JP6,&JG7_H$`R-+B0';($8\_[-mS?ik1G>rA:jpCHO:AD$?E"h9E`9L1=Y<K4Z;/<(RUCB_cPegD^,(>X)h)&>
%*!c`:,hSP%kc,&_cT1?nD1/Du84:;QE-nW=qDNg<6fdtS`sSQbp7Mn_%AKN<?Ir)b*?WI:b)RhC5h;Ia#-\tfDQ7P9<J#cMQDloN
%d7)Q$6q$j'a((Sb&4.O.)LWnC#,dm0:25Q?O=-Qqjh#?0bkhErfqG,AG`u9=?Q)kM!In)tkuE#bArX<B%]BMKP;\["aH_>_=k.O]
%B*36IZ[,?"mi>!r`"W04;<qO2'kP$V,S.G!jrLYU._inB4pCkigdT6Nr?,\LI.?q-W.O+rnNuV#aroG:0fIdB/Z?O^.Ge2[%bDSk
%)Vi9UWjkH'SEh&V`HHm4M*10F'EASN)5@_f!&L7'aKH2ZntEqSV<%T'BYr@mq'g=C>G9S18UOhY2bMs20&[jK8E*U:"X^f4V$,^s
%2[e4RCVK:;&Bh7B^SZb2VJ*be.A]B`T(t/e3H[KL(\"Y$kr_)e:6?K?"9cl"CK/%t<mu*@D>QC.D@ltU-M=@jisnA6bjV;WjICUi
%,4@/]83QY8NOoNg#9,=pQ\-"V?1G.H#fV/`#^f4,A@dkai>f?JF<1g3M@;ss\*q1#X_PD@+32]7;PIPqEVX+G2DGkug\6]D"tM$8
%C`QNkUQNZFh,Ps;O[:M_;TL^k%UR1nM:#BP@fjqA7OG_a!Q.2-c<^_l!5r^9n!C?'G;)i+P]'3c$l:di0b&b]rnO7m#8/["9k)8T
%<rg\_>sBBL-nS&6Y]!c_dPm3L,6]c1(N.08O%(P0Obr]<\6aBZZAi4l`kmG6,*qW]+IgMLT9L;9)YP]kfrSI\LV<iY@"SLVF"(ot
%D%^ZeZ9&6O@d`$L:tkk&^gZDicd0JoUr,\QIlEtW]j*R?LeA>m\r-.onD3u&SYZf@!:aJ#^EXf9CR0`/[$?]hL;Gc:TPE`&+[2$R
%IEec_Jma3NIW=n-YR+&j(;W[L`h@@N#=U(kB$qY_1&'XJB<UHtEp#%B+Xdgc'A\X"gbY5'Ds)[pM4T5Y1QTYiM.tp[eLr,[gC'4`
%lG"%0RC0eNh/M.7ngs\*QtHPt)A!I/#>nU:3%>Jh8+GBVZ@D9.E`XqtN7&_g*-tfVHWR;S>]Mo?Ot1!SS/`l$Zi^>PGs.YBJ[P8M
%YXA3N2CX:1$i%T*<6FN>77FTM*jK&'%JM5LWE-cck]J2EE-6$nF]?/"#uEeX8#92\,1*@*W.t-:pF;B*WHAs"Oe\e*fmW0],dn^Z
%WWYtm&9uKTmle`)D-KK[EPWbV463A!+5Grh.oR9n$!X$I`[f-fYLG56nlJqXU/0&lR6CLX_AGDZo%:X!Y-q]:MB?!Vna7V]h!^=/
%X[PU0s3(;WY69#Bogpg:<>c&PR`=Rjhpf<Cq?&Tt>O\Vlh^rBbn:c8:[,KlBMC3P:EG%@2,](S[Cf1e6IFk1?g-6P'@+CgH36j>N
%[[\VD6AaNVRZHaZC.bqC5hu^5"H8O$4G4cl/Bd-Ocq]LrhpsXJWQ'Y`\^(l@=<WDicr.!RP^,^cA$c%sgDD(^#f'^`*j1]Tq/6Y;
%L]DBhDQ:L[79gF8JgjLon#<'+=KB<i/@2)\eYKKh?t>(P[Teb0_4Z%;%&WT>P.qn1=X>EY4=$O!!n+Di_&YQ!_@@+t-&Q;-lo:UY
%Dm@GEWpDL(O,1u8qe&JSn=#&!HO[/S=8IiE_L$a7U$-Hl856YcU6''O1K)Bn4u"\4'.em?)i>HT(mQhgI9j7rMh?OnQ&[7)MV>`X
%-/$FQ%s-\h,/ct=!mN76PP8$R!Y'W9%+*\=A(c_`bm(M^+!Da4Ad96rKkGa`I"!1/!W?ec$[RnV$=54BHk`#%M@V4R"'(qs)kD>?
%,Ks&!YLPKV4thuX+U80JP2AE4<Veqbk-,`sN0E#C4E$FE.,d*_%!IT(oM)fsFt3ea8?Rdr5WuKJ\Wb'88ImF$qMP"MaT]hVq^up^
%$RlD!5,WNP1SOCe?djdfdO?PL"R/KZ.YZI'r#+HpZr+2;7S4nqC"<kOVk>qbE0cr`1'8`m:^WkCnNsL>@GJ9&^+T#2n#,7u;"eXe
%9kPGeDL\_!@KhRmh?ok5_M4l%f"q^OO=8MJ_LrYfZYS3LY0^J*XZJBT\G,`:Cd4G+mUGWLGEgG5QZ?Qon*Hf?-SGg&mp15QL*E_^
%.cH_TibEiWOh-_r7VoXprTlSe=5H^hb8</eeF\1q*Lu\T9jHhn<V&,jV3+Ys[6K8W3c(@roUsX.I/`J%m><?3qEY[!ggKpt.Q'0u
%J-jk01rYu^7;62Rm,[W3AV2)]1LOI5i1'WRlfZ!^GID+1)50EEp:Kf0@^_OK\k=c.?1EB.C_3lQr5\LWWTUYsFmKN<cE&0f6>_WD
%XZtNN?n;GO0r\:o@Zm6<$H]u7;E0^c8=fA$W=;5#9tV&3<R(al(505B/Ddl=,*oHsh#&dV[gL[_O_P"sJjMTW1\ZK4SU_fZ5_"`M
%\/0@SDi/ahl.^QhDoDacWe%)EYX:-qo'^soQ;i&HUd1g!'g$+D?=kb'/m/^G,'iG+&.=GVZHuUW9dG8AG4neOVH7iJ4.cDW<[5BR
%N]T]GQHKO:cYQA%&Id_n*#j*BEUm,WZbrW?80u`1<p1MQl>39[mg)k(>S#W1inhT!29=tT/kkN1brVVD.ja^t4b3p`Eh;lr0V`FR
%*d1/?)NrL5mkkX0s3>tccbnm8_X/lpfq&8lmB;WeGW";;Y9@C`X,BQ<moo"NZ\k>;R;HZ5--kU&aooVXhQZ5c=d<=C_*"$D/E%]j
%[FfSlNUIK5\lDEk2@#uD<!JnK.9e'hi]*ZlNbRs?X/YA.<OmP^e2mf%j*'SBo7DGI2QDQ,noBU9`<ro3L>2H,Q/ZrC;-$%Rka^T4
%\O%WAjaN_:?Hj**98&1OHU\+:X=fn>ra45/-jHGE3a^W8FLV0[dpXEg(`4"1qJ;%uVK(Q2hVo_L:G4Xb$\Y2@'"]ADoq8jgEll1:
%MMu#<G?7!+77_>k)/3Z1gAI_=\8ZPbot?6gLV0fOmhUKV,c&6.+mVTOhB'(/VY*B8P8i.adC2,N\J'-4kLnutXA_[c/m5rdU1d>K
%B]M8m&ML[?BqJI5TEE::b#'pjRK2VSaHaa''X.8&&'+b^rF;9U!T]b">g?u[[$3oC;+Y5`WZE6Kc25PiO#e2tUsH8AMk=0G7X`6?
%3`RtIY,Z[m?jWMK/O*m=?6l8\?-bou3P6\ROIq^9$Z>92/G7D"c<NWn]NN$SAScSoA+*.Y??t6tO@-(LAEFt4]`iM1@%7UE+BAnm
%ois5;"?D@#10)[6V?3']r90@%ZK4FI+6\HYS/9=0-hcb[mll"->q'^7]g)TN<=Pm%m1i4<>>:(2*("0nI>k?L[qc3fY]E(p\#MhQ
%(."IX]@8j%k@d@/N'ILT:oF1C@<g=>h6HE(LIAoLUWYt:r'8qu26*r!JfV@V,;MI=`sg\cX@L!t,+ej^gS8oT>O@5AXsd4QQU#K;
%,g:J3PDj@drf"@qU83;A8fmH?V%hZ-O9*rXe;8G'W@T:h^ftTls%sr9Ln+hH<%F)*Dj4pC8"*EI`M?+&e2XY6]OC^fpdCo+mmfn"
%M__;a?u:nd[0Pl-Ljrl-8hSpd6ub`3e\C#Q[sp7(ie$"hX,k@=f+c[$8/Rqt=2,hSs!K::X*dDDHOh';4P'"iS=#lr2;#%<0'Au8
%gsl/eQ=<YCSP=q&'Om9E3<=,\1?,9N-gF-YdSE0#aiUk(cP_Qi.n/odE2P*1EcO@?ilC/*'jFsH\2ju#U+]AjCLjpeT*,V=LBJ"B
%"fe!M.fE;,MsYo'(+Rl!F$B*@ViZsPAYm+0H/=c=&(S7f&&2a5?OA0pGl(GY8('lt'<0=QbK]=0J;1>P_+Xd'7GTJ+1>dZ6X,qja
%,J_C_p"A=MW+\[%m`_YSrL#E+o;^^>co6?OjIW:N!BA*,Nh?g1K0S-5.L8R'dWN2"'#@X"T?C0J=0N,R/Td?pEA#I*6+Wuh!U)pA
%ED`HU865;kX35a^J$Fi.<BZLbKGu*\MEYtqTV__2nr`q4CL6XOgGIOMOt#_#S^"GMpHrIK\Q4K83m0mQ&hYjV8bXDj8/00IL/"XN
%lVZkb'<]E-qN0f_g=;+X6HT?HVG=*KNKe2H>%?XYVaq!ZS9!A?!!HPGl/K6EAt%XL2>9\m8gg<(RcXQ@BgD@f=^-__.VmN^!K^&"
%GA@%6eLF=_J1B)p3\k9t_tG9BH@d>E;`SKeTKs`\ocPj0P\rWhcVm9m/c%uYfm5oJ>Wcadq>]0e?:PmcEKjAPa)YRMaT%7rrVfI[
%*UA8;O^l$K9Cc5S)NI[1<UQ5BKHg-4&u4TC7Q*2kGm6MnK-o$;?C>C^_qq"G$_klXZD%reP&UGuN(T@EJ6I:6fKe1GdpnNYlm<r&
%T2R?!S=`R46P(uW'NluSf*#f==-?>`Kaf4.jQ-!0P?W.`@&:r<Ub]3>!FJ6YPX^,p90/%eDno\m-f#BuBdoeW+;I="TQC<']],qK
%G'QOaCn""iZO/YmJ>j"JE(>W%VoEL0M#tG%^O%r_FSRWmrgY=g:r6:oS,Bj'Lrd")^9c`VI'FD&H>,^%!eg2XL?t%eqt5PJ&aL$4
%GQm!;97KML.T+0<<*^*kg.d*1RpMulVT?%u2u*eg;9'&Y6&91^<9Rf4)klgp<\)NsXp'32;hk-e4@%OUKWU&f]]Du7a7<P4N<_4O
%mF&HJ:Bj.NNk`"&?^CKUQ`HH"FoaHgqcZkO'"W`#qt3Kp(N():Vl:uEQ.W3h`g0aXL2@1K7[CMMo8(I[G@EYt3@(4c2G:o?0+peL
%bfi(IJ"C)*YEC:&rP[<Uh(<FEXC0I<B.6W6GYA2qM,*s@G'Rj'I(0;6H.rZt@%)9TGfX=te]7!:Q/CVdOkqnCLTgusnuYXlYVH^+
%'\FuTSk]<7p50]3jY[CRE`@`n3u1+`G><F;n,Y0Op]Ik5O3FnH*F&S7$VG]Ws!,=Nc2#Sj\u3n?:>S)!J_oO8L;ogM?V(2kSMYlQ
%Ei<=5KDoMMA2DSN:Dk?k?F+53/7:D?nH_jHL06T9q*+[YrhO"KY:rgmpqG8S?Rb/cYRO8Mh!Bg*K)GKqnNC:_\$P+GVs0?f<#a$p
%q0(9M+KR=_=3KYG3lLN':I/FQ9I(8aGf]TWojS)^FgZfH;Rgm-;fM9Nm)>\H%k2>!-QiD<GQu3K@ri=JC4+i+,js"qg$(L9Is0pT
%D7:e<V=]9QA!Oi`B>7dT7R3i0\dc34+^?g^K1IXH.uEAVaW>K@Et5B5/W))2Xq9@q5P+pMRs>k+\'NHS@j`5AhLCf*M\+hd7,j"o
%[("XNJf*i04NH?4`t6>Tek%eN+ppTt%dcNO$^Fg_:9Z9OUQ>tun1+;CKgh,iQM<]KBWLlJGPMZ0h>^*&M3$R/9]]m+J`G8)7[VD\
%Q`G>%%o?9%6EHS8T=\$S3ViY*&/XGJ1s4e?="tBM'<ea8PWP?'O@_A#'!qQO/'LIfCI>98nAJDEfG%t"F,^0n<V/4;gT;t-8h?;]
%'dUh/^;/CDE`e%$liN7pnq$s',>Nct4/m`Tf^Wi3b^$_WQ_JW0H4*gm>I<9nnoWDLO[8W?QNT$N#4^Bf9JX5GWM:ScKo_sMTU(66
%fM@0@;ak^=NKPj@h3u\uHVb**(o$8UI9(WaMp<m:(2A';Wo\9^6mOV[I3aVUiGd/]lk)R/htuM^&#i-P/!92^hlg)(o.8/lKlB>H
%XNi?m<!ZFD8N"4G9@r+97tKFg(&>DnT.le^BLFmJQ=7NlWXorm"DeK<4'+_ZI;)Y\8g)Ms`q`I/$1!>?/O,m!H%':=c6saR%(Rll
%)JRLa_e0oQ4i2)G7D`bbLWaP8jUB\J.=0XAAj4/dhGMgRStLnaa=iT%P(VlbD[F%(<1%h@V$+i@Eh<NJIQZPH<AZ1kf7c8=@TU>G
%:+Wj;rh&X[DiA=qc=QOLM7*[kTrAhFBFm':n1QBG2q(d_l-j\!\B_\CQ0G&B=_X_-C/>m#RS7]sc[H&UmE.RdW!'XS+h/_7iE&SL
%6Y7N9<FJt1M,lN:Uu-pC0KFppB%LWJB.5#c0N(qPX%!Ts]d'a$gOr]NW1+N;D-g;O8:qire,$b:$CbQBd=K#[9,o'$?"19R7?(f7
%#<O"ROeXOT9bTkU/W:5YZ/fHa-q?E!Ikj']13M'UTJ`mfHdA:^SBO?A3rtqbk(bJ$,rrE>IZSi(h>)C0+hGjbLcn`;Npk%`SMD13
%?$i%$bqO1rDXq_HA/oMX_>@p<XC[S2dg8k,">J;e'F0_(.0o.a(&&HR^/=6ZdC(K^,>Mu!F-us^Uu\\K#su?Ne=pO,Gs*ZS[D*L%
%Qbe8<.`>bJ0sBO&&-\%74ii.C?uI-eBbHkZXaG_&=cA&@m,]$P\m2(o?3h9b4C)Nc?`U,+QcQ=A:iqfpp_.?iK^FWa7Fl\=LO7GY
%)D&5K[&+X7I[7\l2828;PImgMM)#Lu!"p8er.uOD9/2Wr^#:`t/g)-6,4_^cB,fN(bu>:8PT(+%`HCeQg@_6C4044Cccn9EHF\?7
%m[i2"8VL&ld\oRqo`'0Y"[PO+;ZR5'8DOZ52<3tKhJ?8HGjUg('&*V);8l"<3D<04M,kQ>RQISf^3?T0&s$[GS7kjo)7d.(U[S+g
%PKD/7o$oK(MqMM<'!V@a\*';PE+R/'[X.+'r_JeB=4CBar?YEqg"&_VC/d>hA?HZH`h#,#6"nN>K1ka>9/1)0L^DOZQA#lqMFGHY
%-m-0QaY_IOB9\J^56Q2C#)kG`E&PG>1)k*m\0(ralXl-m=dZ^:h23`V/EAK:>\@NCbn36beP;N^/_j<TP4M+rlmuSC0k<?[/)thl
%<j&:kV77JW7m,dP&GGqje>^$K,9:rZd%.*:[63WR*TW$*^Q8BN7/==%3Z>A2mgms<(,+;%=O5&=1=9u.J6Fd_aB2/7l\Z(l5%22e
%a-2cL_I0+p5;EU+?0>]ClAJL\=QPt?<A-F4%QMIWe?tZjU:9U+H<X0pUmK/C'D4=j/piF;pN[OJKW8=993QM!P;F\!;jj4U4g7hK
%@tcRbWhM8!JOUC*%c4rfggPf,;mN\rWnl7gV4^akEBZ3:lesltdgq&N;4b0iHLBgs,eIan'?,uQ+`I/9c*I$k3cIlcQ4+FI!hj*O
%R"`5/.H'(spk<-A2Bi(5m\GQhnTkZ?NQT)T2e&\po`E953t]OO4,GK4VWK?O?.:dW?GhQZZ44B2L<_kc;H58t.'&[bC/a^c6G*/l
%I71m(o[B=[GF@bOk[J`MNa"\g]XP;Z?QJZBf8uquP1Iu<rK#+XLNd3Paju-6BIsLD[D1gP3)N^+AqQK7E")DSK3[O^"[E#@M(>Wk
%db'\!(aE,RE)2V^0jePXpZ@fb7[g?NI"7;=_cGGVGZ/'5TUmWcio_h?Pmm_mkT53.c:iJ*l.hWDfWK]_JP/0a_de'7g;((Nj&tr;
%>i59m3XoOVH$*`T1oB2:Jt87HGA"aR]R\KfMl?APok=SP]4@>WeM-8r(]AEogC6d&Bl8c\g7]9RW^P>6d9-KdM"n>GTa08NWb:U-
%djgTdU%CQ0$#p]1]*,i>nh/\B*JiRum]0XtP(i-%6;ArbrJ<$o"%ttMK1502T1%$-jEY*9ig'M,I%@I.E1EA-;O>r4&hH&4_ig6Q
%EF07'UaoL!;Bn/Q=#Z!7^%X`V@!8#R)#gpqXAeIPSZq#A!P.56g-S6V3l>3-UdtJ)Sd5@9o=,0tH'L'(#s0G(6/aYr>Llg5.$2@\
%,@Ih:*t-\!kOCBL9Ss*\oc_T4_#om%n;"0P[QccQ$:H"$R?+=G_3Ta\(r-"*m.Cce"HKZkQ-eW-AYG2L(aQ2aM<MeOF6I@,[lWoo
%/*%r^rMSRE6:k`N[ico+HAouIV26,jOXAu`bO6Y#3+?.T!d[_OKi`'?9"3>o`;Yn2m;WqE!p%W-CkGGM03Dtojr+SJ%dr]aLSZBh
%R6C2M/]s*b.+;mp/!UQk`92TaAmV*6*!t-dY2&-2ZqWt;"]n+t/8S26-'to9+@dV@3Nen#IS']J[?1U3hBLb!8>t]]YuAa^-qM$h
%Os>8[LgD-XW]_)..GR6#+:\c75<:MF:k[tuTU_SA$XU*<LSXY;!LQ><6D.<rUWnr,(SV[8Wku'1[><2qO)Cq9il3BOa2_Z$dTuG7
%VIdQ4H`Yq(oRhmt'Xucl5nHlP]?eD!0X""O!5.?VJZBbP#0p>E_"^L+_K8E-`GB4f6BK[13456_\'pT8-&DZpX(cLK"mV6]*m)R#
%dcKd>L+=`B)6@2K<YGUX"UXakn;\<V`=Br*p:fCga@m#a^X_)4JZC[UZM;497.^CF1/H5=#*aX=cLTsDh#t3Zj^1&A:p`C0/]B$s
%1+45ak(34he$:B(og7.!^9ADk,s'*Y8KK2)N09&)0cEee&HTIk,cK'nh"d>Q&7Rp3`qfm,UA`I_:H&I+VkroUk"*lek<UV!SuhMY
%f?9J0>Q&5b4VJQ"*$\hUV3H4sc%`/.,:RF4\4)tBDfP;WY&N2Em,Gi]#DN-2'%X?Cogk"BUU9Ym%_3ed''V9lU!F;@QOgm5L%)d9
%g@G&G.gj^31W'utA/\,Odr8JpPT,*b@(9(=09^Rj*-U7%1X[SiWehj`*pf/cqH!q[\$uE/]u+gpg:[#G:lu+.JL+^[m:$A]mh?>\
%=r#:;6:/NuI_M$9-FBB_]dpXplHr0U)C1Y%c2\gN>4l?p6aLl'(l>TdcN"TG4+L5q+$iRj0X?j+AkQtoBD)_Q6ELtLd93\&XG3Wf
%"Ve(u26"s'YQtA,2%_$h=[XhS8\Mtki[ui%NVFX9^uM$m=7S`U0@YTn:-\Ueg'gXXG?&<!-c4aC,<uN#bPb8FjInTG1(Th-N3.Z5
%RN'N+gHRD^T-'Khj.)M]>N.]:QWWN&Dt9r)lI[HF\dc6LP*`9gQS#X_""sYS@.s#R\4_*D>3<6P2;4(OlS_i1+^Uq1!H_/38tX*O
%fj``RH"9,^=a!a/a1I,)s-hN"oCG.1IT].8[&>>E*BUF\9BjSg>Mbii[@Au*l=(BC.5&G=!@9BDp_dD!reBa4Zf0S[XWF:[q8?dY
%8k4r[pP=\$&b8;ZkA:7:FW#TGAUgOLDc$,md?8`#pQ_>BgpMTl79rC+])"N]F7,)J[mM/d8hV/L6GlK[.o8S1VhSF!"m[*A:OF&a
%Zh!GF,Ap!RI6b^&WOj4*DZaQ;r(#IBj]7@kY)!*GI%c:gISg'FnjVO/XO"u(-"rl%WFEa[@W%*E4[t7_F2m)?Z^`rmbaZ&(4JH8T
%]u4FW,FUgJ0%Cmn)E7HaRCp&0m(^+bRfpjn4X8`/(\s*r7Vs60G@RNugsTQ`6B/)#GXsKEWP0j>E';VKeKe*\d8-V2A/D)0.Vo=I
%ighPF,3V;d\SA'O9]9WnW[rn0Y)<7*aAhDsG4iHEBKK$YHR?!;Oa%B2U\R!%GXgLsXJ@BEGNVHEj)H@=P(j]YPlESJS^.ibh0"L]
%d+S?kf]c2:aJftKZfge'!MfRjXl[mcY+6KlpJB^AM.ed1F/B#C\2eq_<&95LE-c79,T^S%7;ZlrWhm-EnKOH8c\LBOrI50=\J4Ok
%he!1&&gf+""F(`unLPuL(9nD2fcFu58j[hV=3=%XU_R8DaX":BkP\3;l7*JTWfbr_=Y59X-_h[+H2jWM.M0JVB*X`.4nB#InJ(&h
%]4;:);=?T6qLBa;FJ>&TNZKFYo/_T_T=I@qd87OE&O5V9Atk6RR<4\UeVd&7fl/ZY3bWb5%X1>"iM9.nY+F5XL*7(Uk3n57AK2%d
%oaY82&R0g<m;c]TA]P"39W8GHLkCt:58=P$d2A4\Ki>G^09NK`liEiT*+RMk,mLLp);#u9G35edI?j6MVV.C-U6[3-NbFT!V.E8Y
%R#WR>+*e'7Y_!,S%`t+j>sj&i#SVBAMVK@lX;i54N/\iP8e2Q[O*QsR*]n2K2pLRSd\O1&%e:k1lH[/JlMb,T2DN83hLE`dj`PV]
%@"1`,4SPY*K\E2C:i$R&Ue8[<9D9;0T3;/c?(FQeF\iU='PSJZ8O,Hl'bdJnnh[nsL`ID]<;s@Ses#Wom>)NfAjU,oo"Tj`MNXsU
%Yr&isX)Goe7!KjE#O>N/e#3@V&E!>.*s&B6,:rYOK+Ech?4rNY_qrq^,NK@`KJ%:<:`CaMTA9BE!WDijeLAF#e%)KRq&`,g;PAL*
%pd`P+-MsG>+XDjm"]eGR-u'WD+UV5(8*4GDE*&\P;3PF%/`;)s3RA'V5_kCKS]!`;;2[2F:BMR@ie!IoQ[4h)J[28G\bEt75LI%8
%?WS@K1(.=RXa1Z'N=o1VMj(37Rm*Od/1pB<Dc\qM<qI-^f`C74^O;E>7.kD'.I1=q?kl8qV7bSp8/d<MPq<(^)%agaHdI0)J@N+G
%/`B3(o+c1GI#!UfaVRJqr9>o^MX/)M_D`[hK&EUuR(7B*@$1BF"%\")KYI?+31l_Q"=&f!P-?.TE7M%fZQ9JT8Y8'bL8Og8qZ!iR
%0A7TfC/ME`o"2>iN4nnrZSF-i$mD"GABr[K'*'N'VZuJCN"K^9:]re.oQQ;3*<N["lceOunmf>D=*RiJkro+\>h!B%'.JZI2W*Be
%!:Hd[8lX2RBD+Ya)L!LV./EVl>lPA!Bmdj-bbeZ[>Sg?R^=GZKAN*2WJBs`hG>&]S'9G'T3e>kkqEp*&:Mq%?s%C6jg!tFI\4RnD
%k_,HkJ1S_CQfMnN^<p5&,tFZ3300iaNm['uVuOEQ-I#pp'KFoto+@&'V66e=VR^W=Qr3JZZEZU_9NiG;+]ZKn6"dCli)6M^,tIL$
%"kh4l4a_%U.`K;1AL,UY/?:IS8G3XgCLJ1kf<HR\Wls@$$6;b`iEZKt6>$;Q/,e[L'BHU)*lN6T,K_Op>H?8330/;W*FL!a.rSh(
%":2,R>]u0j"-U)?+r`gp_]2i<9_)`9'_/A)fH[FFPS#B(o?9e]K974trr*ng\q`SNBBJK%)-HkYW$_i#J/eA^",o1:GF5e,\M8do
%^2tBdmN^ouF!9;7)NLICT@j4#<rVL#78Qa*Z))<U$-L\p)T0oWq1(OiWk;>Kg1O<:YjkEdb5LYJ0+nZJV)q4sYt#%V40)GU<nA+)
%[<\4X?=+f)?>.q^SZ?+/1(jHRo"sS+]o8u35JR&tir>d2-m%D!`hoQ:PH-5b?_LIencjF"1VbTGjt5pl'57U'BCp;.msp\6gc#Db
%7&8/UbATQ5X&`7m1q(I[hBd-".B4G</`AiW7&?irAhq3XiN:[>8^jf:Ei(g?Ci:Ui\JTc39[)/$4F<NoYUeTmUGY<!fEC#9pVfkT
%[o.'O^R&gf.C>sS.7DkO^I9)hkuE)A?Bf#-P2M_.pu"tC,;3c*]M\>nr'7i,SrWfDEQSm;JQZ1$7=L8!ecpM>131NVn*G^8)#KjP
%mY"0'Ga%Nl/'D,#-5PT#EpDL]!9Gc]?,N4^UuC)hFq<S(;!Ij[:_5a#4M_(P'l6r)%/)bEXga/(2KE.>^:ZkO>1CZ[Xf@.0q-<:3
%TE:S!UYuU)<?E,gW?5%[>*@6&0VILag(=d7b7V3`<'h:K*%(ol$8[D"Lca)OQq:VgEG=Q:7mGM%>FXTD*M*H-KJr?8Lo]91p*I*=
%du;O8B)\A"S(`!IIB'_sEKCQnA7=Xg$@jZ2,OX2>X%^:S7j.8a/O@&/JB^ha13i;FNZ+<=n_jb'PgAt8%6t1A&TYi#ag@cl>+a%!
%aqa!lS<V<"9.!D-[C[kV/q&U+RD+\haAqDVKMWa,4uE.8NtK=Y\h:"\]^RIS&MRbR"*TWbnrh6"0<-HE#6i(@i:V<bA\**.GG44'
%*M0?!4Hq$)pN)"nJAAH4%mG=cB2+?K0oG=k8/j04iR3ZhegF=CFL`\uI<kdaZ^'ekrr0+I#SR0h#9M)OT!UC`C^D*K.f"!'pLnf#
%iQh/;2m+Btfh5q4F`m`/Cd^ge70u/HqD6ek%5cB(O(bGWA>GXe)<YLhQ3qQ>.S<ROrefr#ol4(VK/<jaSF/W=:5TH;.k!6V$th$O
%SMJ6S+j/,+cCuI?Q)_kmA[=tc+%LTIi$JiSV"kR8gdmelMIEi4=oRtbZe,-##M`@'a\m@LE^KG[Ba-'6*gA(R=i3RB0e%2XRljq?
%P4dS+(Th?,8fZUin<=>@)2fBF%RB6R-0o)s+1'-WKuag+_Hg[VA[ud#o]co'V6Cj_\imbP=+gepah$`J5Q`[.1;N&"95utHWU%sk
%V^s)(#b`?sqcAPc%7m,;pYIW;/@>Q%EFgA@MtY&N`R=hS\#QOqe5Dsj[`[.G+uu#`$Fj_:n7)e6[&TGr65@L:I?7;k$0nJ5O]Lp@
%\o8?S4?o>27b]sk-sB2/">Z$[1tT>OED6?p9$Ee.9KUD6%AT$jSXn#Ks7<!).bRhE:+P2IJ'pZo(AZGt'G-c$>o$GR,$o%>V+B&[
%0=iDD#i9t'?DX?<6::RM5N%i<9rK6tH*;8'CNYZ*gHCh9B&C\[Y#dW*RB[jE5cH)&#Y&-^5LiNu;==tTW4Uei2g*X.>RI/>H<D*T
%EIgsJ6UkZT28c4kqs7I`EKiM`_YDhhZ.8kt>a<">cb>q%!fodN+L4H(Pf$$PTL(GU!]4F2a9+p,UHP%eVK6e_oOn9EjA1p:ke`R-
%"sjVSs-I233-Ah#7)e2?o[U*IX)Ib`EXZsP43I!YKg"5IcPRDb93mA,aLIgBJgj[ZPZ\II-j'QJ1-T;<N2,DlEjh(/s4nofGP&^k
%[rfcc3b2#`e%G'H7?V"=$63'L4%*>AfK+):f5c.jbEQ2IboQN^>DlX%?JlS.6r[]k'TtjMHCUrjN>Rn[5)7&cEIkbSe2WJ)cq!_4
%^7lIr%3Ka(.K%^(NQ@$iFhFI12JSKN8&FZ!":C&[5TcLho4#?(npYdWFdX*2nSkUFEqM]H=k-_1'-utABZs:OmtKPOoD!<MTaE7t
%?^"$WNjO>f@YO"H*M<'t3js-m8I[N`ru'+6]Ai]`n3\d,83#Cj@J(1+`UKsgP:$ppH;p!(fO;r(C=_0A3t)l37.F:G98UYXA?NL+
%Pr)%+rnSmN<C?)>@-,BG]E_nkn"5Ug%Xpl(A0[b-\F/SF%7P<iW/B?+r//&b1YSdfFh@,5F?215X/-4^9$kD**R%gF_3AVa5dO/E
%=VuB40P(8O?c_[ujO)F3!)ffFa@''#/Tp78^563(c>D:4YWT1:/"`9Qmp).!ULh\dYPl<!_4inf/"!;1QO][!pADIn4o)2:)7s32
%Kn4-R>.Ke=T>U3n>'a7U&qc[&&fN;3)iea(KN<t7HVJO?P<dG8%`j&Z6%P\88OS]orQ`-'W];o*V*((=]EiOc<o<1#&ShlKk]gFF
%'tmO:Q4d_!7Q:`$)Z8p_.[EO\S;3^KHSMK"[]K?3@g`4/J<IQGM7k6*,L=ntjl5B`Q:6_79%>U?8+JlfL_2CUcIZWR$bF7W.R-hN
%9=D_rn1Z?@#-VQ5<:f92]gSCp2.G\VI+_&<c+do7o`pl_9fGmSQe;S<KQC!sc1Gi>Wq39eZ.<u<lku#s43^UFM^L_e!^U]:26+"^
%4c7)^$/VF^mrFGTpWVaFL]$_LZbN*KmP5Ad%crOK#4$o\7<D,$83g#u&tk#Js5bhmon8t.<j4diD1\PHp>5j1%uY%caeaq<f2FK+
%N.jT?3YCH1SIj$AmMV8F<O]CKqW)tPE68SVo`Au#30PhW[*OE9/aaaq@7qWm4k>AU;#[@#lE7s$RjM5apRXSac/3MMnk'?Vp.F&;
%c#(_FA2abk;8e&2E'q.t`Uh,u9$i[]ORgC(U:.'[(_-VI%C]q;"o(Qd6=A4i^a+dcU=$_-nMR%7_%X`4**:<r7$!GXe_BGh"ANb6
%+TF=D66PSClZ(K(EqH+?C>"%kEE.2\@f\j',$uAdO8N%^r1mDNW>#C'DEj_=U>Yj4W'LcEYTgE95QHGN,tm!-VO]!9CMC4L!cPEj
%XKnrsK)iYd61e6_0eI[nVun)`cdC'4*bu`co,sa&>]EMI-L&3jN]8\TmMfosr9/i,m$&HB.F:'s\B8[6mo1S<.*O6#Y>YjaacQji
%"@;T,Qa@r1H-*_j%9+>Ip!7V?#a2nWPc(AiUdBYh45T@(b`?d#WI!P=$F9A4khmNs_H5Z2Al$:@1>R4'ECEg,'W?]_Z`NEd\&&C:
%'nseXN-t]A+5;6CPNjW+NBhK9`;+><<N;4@Bb.dP0_caE[b9H2"AW)EnU2Y[]1odFXqch:<(_=\lQKP^[t(S"g#\uHRI)E=RA4f#
%Q2XdtL[J=,=mY!T_pF[I2D1!Sk'4,]au3"3I+5k78/2=90Q`jC9G^O1apti&Ji#\[!r0=_TeF&N(@=>7;7lRd;NZ_iOqDuFkAXGT
%.-.X,O1NT:3=JK@Q5+gdiPI+<9/2slOMtI^d>uE>d,f*\,PEYW@G-g4;FMYASB'TR*+p7Na9F5#Pj/4J#7nrjPgJ"-=EblKl7S"^
%s.P[XU.r?(0'gem%o,LBo"bqertiGJT,gfMea%BdAW'sX:E$E]9/7f+O1>2q2IT0<.t(pQ3lRfV.M#'^<!QJ3dt]snDo;+s[C&JK
%c9mgej%S82<)*J)O38CEqR1%K;tPs8kUkSrF[!b8Q'<ea4S,hPr6Z!A?qG..UU8=ffoK-uO$PNVDn"Jha(uH&W<d8."i_A\$il--
%s2?!c'p9t)6Ao*%,tV/`o$?0?W^JZ",\pE@ouB[YV@'-t:H$S%7$'qE&o.38/W89i^hLq>g_rQkOK(MC:]oEpZFYAi@Kc?H+]iP?
%r2f_/7j4;6_GVml.]*0UoMk\IXO>9%s.+MV\OWUuEq5ROhjJbg$")2%1*Tqc,A$N_&*hmK"HM^Fp8]^l7JhXgK)nXN8MRi@!7K4)
%r%`M3*6ng"Mij:+S5TuPiN`A/S3[.@P)782LYpE(p+?j6>s'Bd:+991\)*>=?JK'V;2leM;.k"Dmj(`B0WJ04KNmOpQiM=WU8bUH
%A^ap_7=7Vl,^WVSd1qZ9<2Qa<'OZurc0Wu(=4-0/YE;5]6."<T(GP#Jm?Ybh%/gcG#]D/s_8=iLCkp3?PQZSHpF]qu:(84cmkXb=
%3DSK3/VBLt\Y%ka&t9q%k!.$p;l_,.-0+h4(=kfm+LU,6G%I`(@\L^'Je_FDS]_YVloe?td(.'WeS#SCoT`>8N)f0r8JY<B"T5^P
%^`D^?M:8JVbtNZ\5_eXeokCIXcl;X+Ra'/BpjVLc,#cEd74*sEBe2Bi/-FQjJccp#h"Wk&EgJk.C"cQRf(bFffhjHAnQ#?BLF$!;
%'WB?BPVM'G(I\[n0_#q&*[M2042kA_+7(sC]-g[(NgQ3ia]I_CHTKVMkpc(b03iM$;,)iB-JF7SMikQnPf8,R1^MZ$K5,W9>VC<O
%9[M+Ai<$=+-)bgK_]L<Q\8@=f(h0I]]elRe-]\)r2l5&;TKR<-s&fi<<)H&<!,DEOR]e)6ST+q56km?dXQ$i]Co*/83J.15ZR[6t
%k:HM30-MT.@NY._/`GM`%LT=NQ4g#(7tWkM8pCTcZX*+1L._^gM[?$nPRqkmYq>6;CZjWhUErE/#HeT0[/"r.cutS;3u561FsHP+
%,EI4Mj9>WN1olAQAb#B,rUBasb>So3bajS,i*)/,=[e4VB_7b,3iq8DQ"+5Y9?@[:*0Z-4Po9L!`L3aK5cjM^4hWhQF1<DLj/MX;
%lF>*W1OK#UWM8Zp:Vj5VZ:0aZnKMjSMZ]Noo92B6ofc_Y7;ZYEOZlATHBqLrBmh4-8R7_/;'f)a@3'FaDc`?17d?LmSR"Dg&<Lo;
%?R$CA?*@o2A+HW_hS0T.2s;dke:#iMr9"+HG0\(A7i^^Jk<ASj,O!P\j4<Sj#N'EgOr/M?\'X<P<C\tI8/(T`0t82R`U<fT=BNF>
%.7"^FG2u;Yj<P39)MBSUY?=:3koSq`>Y9[rkft#3GE*@kPg!#\j3[4D]LnIAa:d>IK_NS&H<n0>P]/MI8U0/HTeaf%db/7m$"h,g
%=on6?a0$62^6B-`8PA*a&FHkVmrq?#Z%YUGa<QS#Eo^`0'Ba$-o6b[EQ?.S.7+Vj>.prIZ^CjMEUH#!Me:(>I)_!fAnl;?1P!'br
%/=#<gA.+Fu3Wg>g(!VQ#&Z\k!'i9'K:PD[3YarV[Om+so1^[Q%ET>qX*""F6kZq$QAF9$;./`mM<LlJHj1,)GlC,&uHtq`+k*s!X
%m0qH0l0lSO<OtfFMLD=KF.%nU=RJf#jk/u'cJ3:$#>fPrWp[sp;LJ%58"5?McrI\AFIlN25i,Pb.K^o9CkksN:n-]\0o$Z01t=sJ
%_N1&\>A$"!c*s\kf1XF_9X<s`A:,hlT#:-QfN#Z=MY%u:bur`qo57Qo478op:MM%UVo*PuKlQumpK@g4<5FQfXFTr+\^qSS>k%f_
%l>uWu[+\f1#5BnqK4fr%(pue>1%=u6L,I]%0CF3h&1_Z_/'l47H1*ip]HF8\>Ot,87qgO[A0(*=I>E!67FHF#jhthgS]!ZlTmO)u
%9[ouZmP9]>s8-;nTCr,.*#S<?^%.Sl<)fteGUed0!W=>(#^.6aGX#Q<L0MJD)/C?tYBjnmh:!;iS342P,#3PhE*/1Bhbe..4T%g;
%OeJY\pc;(<hfAa,$H:2VTtQ>E#HqlRoZai0,li"J-hW=(kdBSY50IT:S3'NoO;Wb!Bb@TRi;J,0)J)A37Ws4N?[lPZUDf?&7S=ZX
%`B'Q2L+'NM=Tu"R\*g%F]j+T=omNkBJWEF*o4b1!/$\<c4Xr2_P!M!Hm\16edQE'*l=H=TlTo=%W*&_a?A'd$k@qQ.9e.kCF%>B&
%P)sCGG@<)G;!"^W4aZT'5NekAlZ-,9RR&$*Gj#.:(lsKm<OKm5m#e#UY2D,#NE:d"Z@:?jqhhPt\PM+%;q3h@]8N4>r>eWRoHt@D
%c3C4-:<R`5+j?QCge*-YqWE>$8I[P2CXGWj/^8Cf%"KAc40lu391>mCkb,>#3)U:,6D8(f(U]eiT/$guGcjBWWEb"[7j&@e"W6kH
%f'Qt&)/INY)%mea(%"JFIYJ90'd\@t/Eu4cQ_&r*Q3m:&?lP2'b\c1=.K:*eAm/d\8KMRF*S^i.>#p>o]:V;Fqf*F3E5W=Vl769B
%+=H(\4ESbQed8OA2F`f<B85B,;fk/\GAsPl0a)&3qjemD<eIq/%**:k6.c5*hMuP^G>J]28mAC3ZW6IONosVNJ1b=0h)YIE^h_%W
%\-S[Zg[n>g5",\X@M(K?@d_LIlA2>rUHX_heT1H7?hn$CHXn9_8#7VQUXLo>6j[HhB;;Ct^Sd@:W8,N[C]W4nNZ@q-aKgFgRMhXg
%kR3#"SAk6Bj6M*22^O!`)+;Slp&9>W;G*j,&V/W1g<1^IqI,E5dN=sCV;&d69PX:XA*h)/(eMLUPOV*4WSkWkVCd4Jk1HFK?ijHJ
%0'BXB)SUAtNI=$\s-401:Zb?gJOuf&n;L_,=+e)c<SSlZ*r/5G?V`a\/3;a`9Fs*(ji/$-qjK[laAl:s)dNVK8UgU#@sXobAoUla
%+=m9na6NPl\ARn>)Skm><Phm*g94K#o0Z#4Wh4hQDkG2.A/3tud12mdk./>X>^t)B0\*@?Vr93dOQ(ZKa(\r75a/>r"\i4^3;DLf
%rME"Ea$f1BCl$.qI#I=d;g2%H*9P]13Saj0g^iBCk6O1i'ZIaI9\S/-8eTH%$!A0T%FZDCBu/0E+-shpkIIeKp?Z*pn9l3ehR03$
%YZV9pZmo5hi\N:IB94h)*c1ZS(A4%M2oA5J^`s"$9?ZF_YX3uK+`I]&rQZCm7DLT@O,"J7'3#XjU8RS&cXm]0?*Sm%8bEd!#9iWD
%:9m*8_1Z,I%4Pmm+R)7K4AYB61Ml*6\BO?&.kF-1OcnOYdoqp?3W,#*h5b*L`c:e)jL=!p4LAZUVqd-Bbd>EqQJ+j^,KfEhq/C+c
%:Y;d`kB`pAKir]"l&f!f=<-u$lWi:b8!B/6!NrdA>GhGoaYTtKa'MWK\SG@L%L\N<6n.b8;HUV?#5lc47l)^rY@Ef]gSO2"O9"jP
%%lotc0R$@CP/ITV"50Zh,E=>3U4r3^FlMCNKOaT^e7eX+Ul$7B=i)8/Ydb?imr*u;<*B@kJd&<#dIGiY'S%6JDuOu82k\u[-d2jY
%"1eNg,*8QJCbPIhQj14;J\RLa4Zj<7Pi!LL%RsPA)_7qa.nC7X_C_:`j\oS+O&aA`h72(Q.u!=mGFqps%;VA8M?Ap]lb1&(:.6%,
%s'=7,;'JVH6d!'H5PAJ:>3OB\X?rX7]@85<,s+l/4%T$,ms_J)En'^Nc_I#Z_n2a-X,?Bp^Ej:&Hdcb6G8>?!bp!bLY'f4?j[1K=
%eCBMpIGT0M3L6l2A9g[)aq2PLRM;6i"UZ,6&i^Yt/EjP!AK03)Ae`T0.Q5B-esJ:^6U(e>]=\K\!(UP]LuOm3m#7[`hMP8ZEjND/
%qhRJ&\#LuN+]tU$@&pI1;hn1UcOelL(+*dSf7RW@n6L9imPH*3:D!nDfnp'VcTIY:_!"apV##[8":HQF3#sr:s1V7jkB^BR\89B6
%(U5RhaB.nZca"`^)=aGUX3cGf.V7/#PkJ#!p3ae-Eeg.h^:T0^c9%[!0L$fg/!JF!1[(LJ(fC!EQ2gdN"+ECd&o/SF'$YH!iL'%W
%,cNgJ=E,:MQ&+W=bmm!8$OZ@X%qP]4eI\#WPPnDdJ"gX?CJ+$W0!`EKV^`h'KOB&i+eA,cj5m9!,)fE6)N<Ala]dtgcb%I,$9ef+
%dPm<hLc]d:9V.;-?.%`<`k"]P_09BUE#-.iPIgsFVIKK#.;!`4hUGpuSpRO'5jtmW@P2aFWXkqqM6'ABTai5n."Ednli4fYrl6O;
%'uhH]U%rC$s+t?9-ctN.>;N9c8kr_<c5Gir)JV=`l<J%7Bo]LaNprB':M-%n[#3hC`CegYpl[VUZ;amOR?aZd;8Ll:fdUrJ3"2P)
%?Qu3/+*N!2o?S,QDkGBArRZtXqi]$@ShTee56',bZWEpjWY[7;&P2DOP!(L6e>K[W7ph:X#SYEBX8FVEQ)T\%L^Nh47#:*63(fI:
%^]H?-T7jeA.!&JKXhH9M8R%!gYL4Nl:Eq\%>F:^PbQ!PqE?Fj;qQ'*jpP:HnaB;!hDF^:!TA/gj.3DhuCS&*B6fC?tdC8Kn/CZ9s
%BGKQrk@u.]dq3kl@CYod%?[s=^H9/ml;U^sE9:V,``&hlS[UD:MoANCGq<SNq#`,(aPUu<+sq*9nN2PtOhL(<be3q\1C[sTBP?4i
%H\JM+"*nTr$'u/YJ5PFaq8a*"@B-+PMcKV5^l)4E_\280BEDMn-:IO#PI>Un6J*KC\V_Ho@XSJ9NGF`i5!3JX;92Q-<j&%7,Hl:-
%Ufd?5_L\:E=\]2[Jg9Pus6\("p1Id:XD#*/d\>2,dB,p[%X5:L=b";s?E-e9##.`&SEXqS#SfZQ!q)*]97Ha8.T%'e7Xm6FWL2dG
%Z;e#:pY2?t,[K<UJ7spl$k#06=G9I!?+)7]bX?(nAce-7m8f'BheE.C2C^$\-h#@Wg77JNk%SIC,Z?eWML3gZm`W1($Y;5glLD'L
%X:E6naG%ri/u[JVY>Fr$pV-S:%[aYIcM5.fANB<`j,Q]=2oa%$Z0%;^>rlAb.DU'\;gF^XI2(Js2[)@/:o"JkI1CG"AF_G>GO3na
%r3b:@jX_QD>-,d^+cOH\'<p1n>iY;9HO=/AiZ26lhhm4?qmrgP50ZD.]SpZ,3>ul,C=<*9T/h^LgU!(<RC9,e_d]&m&Pg'X_uN6Y
%cJHAdF)mDOE)3KeCF`Yiq[I@i144fb--bsqaJq/?BsY)Nc;=h"mX*"N\D6WnWbJd1"))AWRA-3BZd/(FMB^6aHq*jW(.;DKmdh8!
%Aa:5+"@)l/OpCfM<Pp01Zh[6gJUW41;9SC[O5;c;D1ansfSW7N2a^ZNN4beOpInu%>^1gT0`<Bt*bff*SaP.48CQYA/AO+TYX`$X
%/>m/^je\dXbG;hlq(0?JG?BpYZZsF.b'3O2)3M/ofOMa51:e)aH_kRW=dkIH04W7=I_Q-8BcT5dq[%L:)YP$[B]Ul#<TFXa<onoE
%cFk5R-p=AtkSSm>*[+%QK&3d2UpFsSVKSS%mSuHB^H8e`HKKK<@m:[nApQr>>#[tO!)ge0Xr0S[TVn`iWS%rM-c;!$r"Tq[3KDT@
%eSah0*dP[G:`li\R1ck^f4Xp9TkSh1#9UqAqt63HnA;"pJ)EM;.83D6$4(Z$:'t(,$sq&\kp@GTU+dn-')ANK:(AgImp)XL%jO]E
%Y&T(qe:U1P>Pi)Fo_AD#VpF!^)BjVE_A2&Gms-^"m>=d7;6\?XWJ'$$'1hE4][-&uX6dWUn!pK,@u#F;_a,k0!dJ`>BOQ]J]uu@1
%\>'#9l9;#^[@kdVJDD,//)(ObY4Y%1Hhc;@4S]_RCigMFZ<gDbp35F<XM?gAOuh;S7?=I^L;HqOgluOgMgKBl5Mtc'1W8Q6YTI/W
%7^rj/ES+/nQ51bD:K"\m\OnGGY$TX"8airSH?a?-V_1A:ifSn,SWH@VA&-)M9?,bU*61nj*InA%s+B!tkBPC::<iker\!sJ!oo?!
%r%8G/o=9_dKGS`MQ)E!4=+)E@Ylcj#gK/M`aUoc@DGE?.9WHlAi7!/XTR-*2?NK)jajVRtF4^@W(I3_*F.pPTmCiZ&,"N8d3NM<&
%NR?MHC$C_kl3o#agt$\"\,L5PK9qOShTKb4CGtC[*7@+#H;D\9RN*+O4K1A3M0N+K(*)S?Ye*Rnc;j.0)%HK0$!DOY?\rk-45fSq
%qg-&o+X#fZHXpUAk'32eY=/:o.V);8,8.+[KZ#jq,7_Z>3Lu'<lrC+fmH37Q)p&S`CC$r*pX!3dmAX*2pHC-*qW+s,^:Hr@R5rbH
%,t.g#DZRl2Jl`\b,>]`2rq0$O5G/PgmL?PsN8*4H(Z@"XrSiqj0OEdj5ZV.O#Bl`#(i:4uk+!c'GhTN,**u6ElmT\+AEP2,'!s?b
%#pk9EX7N\,/?VP)0k*ZAO-kc8gf"aFTq\*Bjmtl-4e=3^S=F!d&d)GN:5,SgpnV*"1GXk'X/P+D^ml]rJ!J\DT-:$r4[n-B:N/aC
%p:l%MrUI`:.!emf,ETm.F?=tZmB!Y$P1.HE!B&r8l"$&.^;KN`PcMrm^8fEa4Ym(STiY:2P;FfH[P"3R$n"P:p[e_L>H$OY<`pK8
%XTXX&8[uf,\'M[ebJc`.8>_$r(V(Hs!QU6aM:*RIejEC+btEB7IlekQUV2XFF@9&![#n6h/\'8SIKS@Efm[*;KC@^MmMl$qqJ1f>
%n!XdO!lWZ$Ik=Z3is3XnQke3ALR^D:]*qC`>D-`2^RjiYJN7U<c&M'UB;4c[9DC7e-4JmPhrjc.aKB+>XrJu@A!+s!.!0GrPq+Mu
%.%*uDm-03aEXeFZDX,o$LV`5MF#,2[26,`V45?Z:1!7^reO\dB'&n#:,.2uf8M.GNjhe;=C9_\?ocZ769IZ>h]&HgW7O&S\Vp%n$
%kAdQSQM6CNhAd5Qk+@'g*X*4JrAl:NInBsq2_2h<MPjO9S/!:uT`p4pFlsMsarX8&1lHE;,<Acrn)S_k=P$E^*\"IFjR8J_UU1#G
%,O7r\<W\uIG$]a!R/,%TTjcY'5:VG>OQGX5I=G3eVUKeh2>2tZTJHhQ`6OD'H"U<c9IopQE@p#ccp#`Ce_V!"k<:]=B=.3^M_boZ
%.sO'acd.3qQ\Mo)GYV*bqPK#.`LE1\XO,ZGJ''RH=!Gqt$/4Lm93!Z4RcFbH*djC/0cV'sf]15(6S1(n*$ic/?W2dpLgNnNW/"8D
%&Y;ZbNi=RuS6<pJ0jcpr/]p3V8t]NpZ'qE^F71X"cV0kR3TpHD@JB;Gb"<"Rq(.k6n;TZiVmZZVqgE"\C`-'Mfu"D%Ar7n(8$7O/
%lhK@m3`%Mo6Q5`&NFWPJP&@[eC_DrON5)OY;e&fJ>IaK/.q'o(rP$ue4@C_mIF/,8SQ,$D#h;SB/<+7W.,r1H-W%peO@K*1]u3k6
%HJ`p_U5Hc<AS_$%AI&.>5J@N.aS*:Kn"21\<SJDF!r3)d.Dk[;@[Co]-WT7`:mSib<D_Q<MVV-Va&=WoMcVgU(9s!fc&ZB'.\5oB
%N+]d=I98`pf`kX^<l#2/TC])jrbPoM:N<#'i=`G%-K;^;3c?4$<ll'YQ8m@af3oC6W9M3@'iP=m%4#1p(fAJdci3b7G7Y#%1OVI9
%gsYfCih\(SDdAi5<(O_1P<eZ*7iK:[Kc+>DE_j2PYP,W6\FamU8&Lt7HZ(*@#mM*m5YUBK/?7S;7+HC?iZP<-B@2bb-<?_R_JdBL
%;N8;ski-94.Ps):N>6[u5&L<a%H%Kkr@Q)Q,HlKQ#_E1%SolB!rV^X,cM[F-Y1U"bI!I<KX\.-r<J7P@WP[V8lE@9&<F1&cE%JEX
%!dg-G;6Mrga\e!fKB+5q.Q);)ft'(3Q\Zshg;&&hD>\Y*H@3C;>F(k$D'H%A]O\,QZIN-97(*g5)D-U]XbQMR<>Ghjni,E4#B$L;
%YCBJ51Z@sS7TA9A3H@<i8`9CZW7.._?g&/''fC#2JuNskYufQ4CW+A*Mh?`/03W%WGdqP$CAi^e%G5)[;kC<h5lg94?jmOj5bI!'
%^=NT@[u\`sZVGVujoT]ind)ulZSo*^>LM982R)ujPj./T;ZO--fP2O8E:T@iLlm4gSGu!O>5T^J&r8RN.Q5)?@f,_fF(PYp"aQj_
%GLkKq"%5PTOQi23q4HP?=]=B:F.)a.nj+C@=.R4.GlnEiV^lG<a4MQ`Hh*Fqil`kH[Hc,<Y>'5md`$IeAaCj"/D#=JnF!@cS.Fk2
%Xk.>#X5g#7pm',c9&cEP]MD%20e`V.?d`Do!r)c1hX9]>Q8fBkBX%tf9/Kd+.aHb^j;KgqG;5^sgDX5?mCqltJ\DPmI2*Ec:KbMS
%V2G>OZ@Asu%FfI3bb%O(U\r/p9[UQE7H3H_9G7I?IB@P2[_jlhTjm9N3.32)1"[fOHFoWFAFj(%;N.3V#+c^`(0+]Bhh)Gj_n*8B
%'C[hHGP>/9"qts"kt<W?5;1GWS&4itS_)E89G"#0UkN!H;8D:EiKB<][4)M&-0=E=rpqbQkgqF5H2(4t,tN&akC(jor;D@W&,h9A
%e?%<sJ`e$W/MW?0>+=<\lGPU.p`_lsM'ce)G`9MMEAugf@^lE%SOkS]Oa+@N+Q/WtrqaD*bm%M&9VOh.<-Dc?'5/^GZHEu7S(2S#
%dmoE,Bai=3o6=oFLJi?2?hF6[!'FV#p?'D[b/QHI4:\;*[eLVSlK>)uksq;(GM-)r28+#5ifYXp&K^RY(snWt;Y.5$!m\c+Yk7d\
%"R0'9*XrGO8FPB,Y:\cp"L$`%q;VgMbgJ$=rJic15]adT!p($tN/\u6E@d&PUE8,oPXko*E^#@ung_EG`F>Uhq67W"Z=Q;>c%FJ!
%$uV)Tcec6rSpIT*K4`"l<iuU6ZWHck_D`QtCu.o0UK\Ec`@p?NDP)(@o*(alc88eE>HbYNr@NgKjK8UOQPQgnb06D*6O#_gOQlEP
%f+VO6%u0pp&TuFLUNEZKfVWC_X>./(`E1M;q3VsQ<>#,N-?j7hZOsf2$dHh>=X`mlgsb+1,MITZcD7HW+l$BRXtS&Lnd'l(L-9sa
%EjuLV6)T\<GHt2O*=;AQ\G6#rgUGrbaATW6@1UQh;7=!8LdIQ]ihr\R,E/ofj*qM'%1Eeh[@`RC^62ECknF4&r%&R7@[Y@;To$h"
%'5GN]Q:oF82(X#B!FRFfqU[S727Q!L+0C4YB$'El<@sOm@n/TnM(NBS5^8Q2&Ln8g*%15s4PVXNhr&l`!:H\bc1uK/8=;GT0?"YJ
%"'oiM_e0PD,X"RF8\JO-i`STO]ZN@/W/-93b+4oKho2q4+6+-?cbFeuM1DS&Le<EWQjA//L)`LIcRH1C,!IfJ:nm3aQOjJQc8B6X
%A0o4Z)t&=qnY5#d4!R&Jge@DRYmi?.bgI^[/OD6YO<82qYK[Ua[fU>t<:@`6,`;])F;/n"/]f-H\M%t]\^/OagU)6R,VFlArr+kb
%#(Abq0>Q^1/OcPq.&@@k]+fpI"s3?/514IElBiuq*bdVV>@He]FrrDKZFJ+CEp)a3b.ZBdr&XO!Hi>d<>>GK1RAObdJ&]=Gr#EEu
%G@36i`3u:de5^U%B0s]f&H;cC>=YGMlJc-bh6`i'hh>V`)W'=*@$Scir^fnpMV&./g?Z-g\36Wf>o3AOFMg]DI;jjfn,F#$h0f(6
%fL,[Q4T<T@V.Jcb%omULbAl'dT3BACP5QF`=T,r9cN[aqA&\k7-tZJHbaSr*D(XaQWhS3ENF9f]A:Wf*b(br@UVnef>-\SR#cCZ5
%/F3$Y4L#)5%f]uKABJ!V_=07BH4s./$6I-5!36\8H$-f*07gD*Wgd-IS!h8E/<XLb*RMb$9s9O5S0&3gpM6s=B!KO5-X&"0$Fp5A
%5dsOSX3NIpKVPddp$5HoKJtUgL$TFZOsJF!g"%7_9se+]TK5oHdT\fumgbCEmE^7'*eh2@+b[F\=T(a/HZ)4Ln`XpH/jZe(p(fNt
%6I.dp5#V4a'Z,XSedi$Q$ht([8[%bHd&.o5gKl)!+>0KiaRX-JZ;&F4H_,eApK=_jUu(8ZV@$W/3^ndFn,U40-Z=8C>7:O*]mlQM
%:15tldFP69Z-<PBH9VQtg$djWMFM^.D/j;=ZZJKT%^H&CVrW:3&cQ*W:Z56*nI!5=etL$5<VfjB#sa(@)F\>7ge)MeQE-Ku.!l&(
%>)/Of5@,bAM,4[L$S5EWag,8f!,P[NY*BY6''bak"R87nnE]s$N!J'37rYWop+m;T#PSQ0TKW'@R=5$b+E,;jr+07Y9Ol4T1WmUi
%O*$0!SoCcSq1Orb#Nc,^eZ$L_9g7hpF1bX:CgSp6"Oo8@J]%hQ7m4%^0YdJDlN9_?RPRI!3r_UHCBu;Xjk[iA$/Rbi?rBBS(uaW>
%WsV"lB)B^Y?U>WlBG6nOJHtuBLcthKO4--a5-2J<1GX8TE#FG+n0qPt)]fN_2XYe'Vj#Bd')J8YogbNJ#n7"JqW7=2<cqYZCdTRC
%\QOA0a%9JVM\Hqr@R+RW:3tS@9,P8sS/3n@/T=C5pZ?Z+I"66Sl-Qb*PYl,&#_(Hei+V8Z[EPr7(9]i9#1Y"ff6#pi5TNEilbtDs
%Nc_5uVhak`(#HM%[^o$l@,ffiL!@h^MRfI3pBZfLY'2f%]`K`*n)L6Qj1/eL<WhI8Xtg^!jXrW38I)BtD7&DP5/o8.ZCfJ0Jg+Qu
%ORh;d5EB"7+<pj70Kst^\257J:gfa#BIr.G/+rWReCZ1[cMF.F+8ce.B2Fu%DKAOK.S$3Y&fOi3_nkX<.iOY>9?Sm:es,,sq2ee%
%bleb@^ff[U?\)cp.`mu4,RnB^K:,XV<;N!uj3ILB7kC<FY7r]EEtBYFZF/^QiFfC)7L@^r#GJ8;hiqfi@tBe@:3[K<PElbueB"a,
%Y'Rs6-Fg!g"`/U-qYO?<ein_&Sd9$%AW-B4<"ibWUWT:R]@UDe1.;u0G#Q]E]jGuhSd#.'#AdH%lPY9/&mb)d"YK18g<jlJ)BGu_
%leSPmJ*LEqk6MBUfl\1RTM@+`P=/U%^&_IgO)1REa[6)nVEleEdSg)949@hp=f>^W1)%qL!Va#:YjZe.Hl#V(=:XEZo[4@#r5:b3
%MNeS3`m`3`%@HlN,@9:aK\2EnjAV9n-U^oDW(-?Q3?^kPKN=+<;jliK$MmUp>]Z.jBKq$RXR)&S4+>d.Tj#a9P]c1ER9E=_=MAt]
%rgM13k1BKYIt5D6Jue"$oB3s;*mn$&c5';CPN_g5a>D/nPf!>4"bk>RQ^OeBFgs)M=`kk[8%qikbI-W;hn`)ViIbh+`]QU2>FKDn
%;C#K-\oNYkXVC8]e)o,Q-_(t30I-=!moHK@9*8fhfj(__P(rC$i$,nRoGT$HMYNGhKcGLm!`bB_Y2`?C/*Z(h]nVh*Qtm,4pEU]G
%\PlJ*p3=@br]5p.YWpbqPt+(SNEs1og,f2+''&I$>/4E:LQF#Qe(*g/p\L!V(Q98)oC5317PV*pNT*l,+PcfIYiV)9(3omA\*0Po
%.[4H&s%EMI\ZMcBILf@mBW-S"e1<.)8?s6J[]::E;5NS:(hA9q2.SI>If+m$O)*J#Y"+LR?`R$@;-P`C.M&%q7^Sjh(*bG53k"L'
%8Go02%JXuM*@7;a8f6_e)@Q+4HC_EZ"^i#EFQYqjo#PIpnPEr^j7LE8lOmGUV8dQJh.t7@b:D\sg/_:)MEc=P-t:(BZX%B[CmfKT
%([/Fu"IWF,)>eIXJI#o)n:QbJL-R5L&>p#r[t9;)JMjj`5EW*:_Rp\a't!bTb#8bU.V5p@K_@^SVmDg<dVZl[BHRa.eo!k`SZf0p
%#kIA]o'khR3&]7:r/^pK'\i'B,cfknHqVJ./+irBQnb"A-]_%2??k?f-j.8]:YMhD19Y_>j.k_0WIep!qD36f?!redXt/<h+h+fV
%o6[XiB!RU:]Gd'5kLdQh(gBqWTa]^8n\`ak3>/*#PMl2<HKe_r^T/(bcPE')_(=eR.1$<^@4Pfn?bE/A9V_<YEfB_V00)T`28jH=
%JthP?BuOerF:$lA+^YG4'1H;H[X)F<olgh<^=f["#;S1mK%T")3DZ.j[,jmI#GA\%:Zm!f@@%s^pROKMrjb?id@uE_nLkL]l#300
%`cLnu[WVUE!Ea(LO*_msoiN@4gm;c="oIC<^Osud,oVf=oC@g+.'(!fOZb?S]Skrqh6Zs\-(=bXQp4)T&Yhb&1["c`'H$3CWqDTP
%[u8?SqOW'_C`q!7+Ic?L8qp0k1q7?cg5]>LLh>kgp9F*FlrE6F"K,f$cb#@U:mA0tZJg3ibLf^[PD0^SpHt2CW;fKbg^u;*G?kVj
%cq,ZR>S/-l-@lSp]NKP_`&U(tq=7$Im*S.ci[]R\VM=3]mX]lOgP;8!?YR'hJDUql@9Cmi'[mJWkl%aAR=(oFB@i<+@WUq?G8Zl@
%R;sSU%H*o0?`IKJ/(?9R%S$kmI6@%4$T@'nU)C6sbZ;oV4cuP;,<!Kd`Y`h(M^5]Y-Rc\l.qBeq/t*sL_R>ORoT_-+?;@(qo.lSC
%9rBdhZ_%ot3QI5=R*4T?*j*^B&mJF\$>Tk8m)3R%B.kn</c&AJmf#WM%7E-Z^fn^N$<CE;(^nH$?3)SF$M17'LpqgA84VnKT3<hm
%OA&.%^P&6d'olHa!$m;"CJX$6H$D_jScKMBN9kCMq@o7!!-Sk723bOc?)=S$]2rafB!X9SJK.]W2)IpoKjR/\g,+tIIlB^fq7#Qc
%j8d@#KLQ%p(/=t%gfg]CZQo`TnU-(GP(.tqB4SIR>-^G!Y9(?#&`,[JV']2I2,\lfpVUpul&q0R=>`glSX)//G];nNS@):AlMQmE
%nf8m=hjs=KWe`rf[V4Ij$J)=")fU>@cDRDiK)?WiYka49B3\6ggQTogL(Xh!`E)O?4M=3f"G$+9Nub&17CqXr;o8tLEB%%"=,`DV
%d<]Sbb'[B_O_Aod>#rH_:0l]MMSq\37dtDI`2QtcTcK0D4-K9L&;p1n2nhI`RYt,C-JFlA/XSDFG?;kcQNHfV;C.Hu[#oMNT2jrs
%6CZoW+^nf$c]NZT*-G[aA0bOd.HYYO<Y#,9rZpd:Ki?QZKeAN2V[:Sh_1)LIY-/H*!,]GpKV]1*:^?I+%^h7`3[-.n)PR!B@tEZ[
%1Pu-m@P<K<eOLLf/%:,;"XS=/Q(1_DCp-h#='WSLU/s+T5,0'EchY]iV*5+`^9UODYX&`ZdPc)PYo>oK34iHoWE)G+l1d4[Y;.VI
%F\.Hs.6O/MgG3\`KUEjUkdQdBjJ'8$Y,;c(UoBgV.<)Z`3pJL"Sa)8.(VIE=CJ$fYEHaC)ABJ50rLAUK@m.\Mk#!o^:JS8uG(\9$
%5D2lOKVr6@"Z>WKL5dL4Y<?E+4<?;eQJBTYTArcs,iq7.)i%E6jJO/5nEVZ^->bk_f>'lrQ'(7(E';u1J)5_B\s24YrU,'kE`:V*
%DX:nh$-;Nel:3nB%;Q.B!qS3"O71OJhM09DGH8bqRF]`FRjuBqqNkRIKo_r4iBB8=jOU>Y*K_l)6)M+/-c[';mX+K:"/k`hB=q'9
%@^lmUcTRqC?^OFY8tkg!HbOZOYGlAe]:VePf\QTu@\)WiikLui[6F*2*`\,^CS#e);:7Z5A6^98?bDqd8"#SCH:Yn\a4+&7m7HR&
%dO0>G/[:TX#g-_T=fM=(G6."4BpJR5p;'T(P:`Q?l2`'p7icQMQ8Z)B<oa-^"el'j<u*sR8;aTA;``!4N!3Ngm[CIWYNhIYIFl[=
%D#:P@r6.Q%U8lat0pT*t2?!7RT#l:[q!rb%]/3DTZ=3CLHm'R2DWkZDp9-rabnk`\^Y3Rgk`15I;&[[SfQ#Xn-VmX@6`#G7ge[2=
%LY^(ZetI0cMa&41cH#D3aC3Nf;f`*?XWlu*`:NRVr2t7b_FT2+IfBE&o-IY71bT_O3T-%09`LTApb(@<Sbl:u\$:gIV#uqhK3NJ.
%KFu5!fLWlb-M'@G?u/Wa=RTU;#M?j^%eRL4#HW1t,%5d.6(S0/:*40U)reRclV,uciZOZDEYKtuUQXoL7o34"UZ]8dc:r+<nstY3
%Y'fS6AG=U/,27%2%]qM/*%m.j<1R<tSpP"\7g(BPQ1<^E98]QgHb(Hfo+h&i4RPn,h$S01MM0kIKH&9WD&XO8f9MfpAXKB;0,sh[
%7iE!dW%,;iA(h^i'&)c+d6sC/JCRY>c.,FT8uV7Dq]C=^qWiV(n]:+hpYIj-=p>&I0)^-hQ.eHc^O<9TpQZWgj6F#_#Ycpe>a#Vh
%6."*XrB8#hi6]gfbG^6`GU[4Sa+'^;WS75f(shrP&7a*3SGfTolD`1`IXo@l.9;s]"U#HSf%78NH;Q#:#L+;7kZK7Be2?<qdI`H\
%=FnUG%ZN+FakgZ6F96Hcf+=u@>7"OmTd<E?[Fbu<_HS]TEufbFR[C*Q=FkLu-apt:5$3I1Fm32H+38/As'=nLSF>(J`S"!m_<jha
%UJK'8jZB\Te.\uc0ZEG<2]T%s6GsWTYUcc?D;@9U1Mlr]0ZQ2[Z`LLKRdU>A5tsF)=O#/i;\>XV2:>mgfTrjqcMbtn*Det+dKi6X
%T[-h^dp?3%IF``AgEXbPI?b(%;aXm33ND>HVL@(9nZT-^+.VM\cEALoi'99T)$Z<2VJfDsipY)K&a;cTGG.eY@eWA7ho@KCm\*a3
%(P8"3OZ'&E"@>0Nnl&?5R^L$4c5=NeCDiQHI'oa5695$7iO$Y(n7e5lA5Lr\c5L7+]SS),m$Y@Qh7PXJ/f4Q*f23rV,PhJ6+.P7S
%U>.mC1he*mr:fLJ>nAE%h%8OXeTLl@*Dj<'HU_05V=PXJV&N1nh=>#sir*hQdW\rn(*>U_YiGXd[ZlgtUk9?U.$*p93]a\%kAIFJ
%qlVSq5qh\>&4O=.gj#Uo[3JkhbF%37n>_TH4\adAkfpdnSX/J_f^sE2#=)(]No.=-PMmaNi%LIXI`5_+Rkj!'^?[W_S;0.W,l;25
%o0R6i*q@&P=FPj2]OCB>Is"WO-:+[^Ds9,[UJ6)G0AGj:[TjPsZ6;s9`;?<9c^tAfH+24>o80je\6IAD1I[+9hjYK*]XK]t@"!!*
%m\fRIHSR^I7$g14X'PJ2(r8SuU2Q'T896,$L6`O0?p#cr;W[XM^lV658k7*sUM)!O,1L)4p!>g:!Ao"8!RLB5/gWNmHT[k&cN]_K
%78**^gk+-PbBa`ic"eokL:4Wn*NbY1pr17L`\aDSr_[bZl^Vd;Rb3L1*#L];N*$\\j#42-0=2NC7>m(]B(DWK5W6d`coBhZICPZ#
%SV2^2.X0L1YO5lc^Z)E[%s"AKRsH@_YEHf2`N\c.L?:5;#5-p1nr[C/Tl.4HJP[2'.K1C@B>btgP?#@uU#l8QCO;[dA1s1`HF9Z@
%H<m5:Ae$Ae]gkL7cVmdf1EXe%(>T.dmSY3MVWB_o""sP"O^]HRn/2CqQPE?.LmH7*=HS>gB3@]8baRhEr;89MotYoY]`%fEmZDQO
%#hptR3r8X\2[WK"]o\>:FB(F.Y??s4VSp<5ImLOmRgSK1UgpSG[Eqtp6.rOEkiGJ<Y/.5qVEHHuelDZq5H`r:c[5L_ZMM1^N6U`.
%F[@GT_;1"u/FLF[Tg$@U.Y'!!-h-k\rbJ<jG)X0PR#H,qi(;i8aVRZ-Vk&J1Ld(IP*UhG-lQJu^!m=q]cm6nek;8!+a#K-+OUh*O
%!pG"qB-<:0Dd_Db[6?"US`!)5$_&&g.3mO/!23E;ET8Fg"\h3.A"gs,L%2FFA77+@F!pMOr$4'P>@tit?'lQ"M8pu5N2gO)H)#.Q
%Th'8$]?5Hf^KO5a%qX6-K(`4Y7;;7"j##!fk5DGEYnc9B#oCkVQRn6_e'67(.:G+m:/-?-q_F09+OP3e4=]XV[AH\sj<@>HR7NH%
%_8n=-rA>`^1PN'!oS+4<cV3;N,%#`>?`dVqP43^_$+DF3E#kW'Au58/>V<dLmDhDsGr3*d.YdZ/mVd+lWP^l`8fHTRe7%[2PR[Lb
%/%M`CJK+S?k-?X0p_bnL=ro=Rbai#>q?2kWZBe8pcO`F9]XHu]0e1V'a!SSM-UU`Zn(]QuV"[4^^Rf#a\SI8Qi)cI4\oWm0^@5fL
%dG'EkGE.*"::s4',cJ]@\jbR$XP\i:H[n^C-Xc5Aq?`ft&[:_WY4J?lcB9pYIuN_Mj9c'\`LUf_E8%D0JDq[23J,s*`c^_VS-%f\
%XAn[:j/+j/OeV2c<QoU)@'8e8#-[bN4$2C%$%>\WS\b,0f9)/qXgH:Zon(HtP2Zf3I?Y>%T@%`8!jd_>=n8^`&A!iU-<2Vj<;$lW
%q3K"I*hPc1m..$70pO`^caAIL[q!LbcWgWq)BOUfEDJG```-C9eoQ"]"`F-)25tY&RTm[r&^$^eG%#\'CjS3FQN7P?YH(E\NGo[o
%s*6j#o3[.HN&@:GR>Icol[G4fO#;U)]tJ*?L+"b2QCEkSA<Q,!Ec8t[/-?o4-ZJe+NA#,6ZmD#)$.^6e5[;+M\t#(#Y`7A774'Qd
%6jGHK/`[l!o(N?*C+)](eP"I8OkXYeeX`ncL*D6GHQ+s2-)LO8eOO%"(+NOGo<+H\GEuQ("H@T4Q);.;*(56TK:2&aj)as0Yt-mu
%@ZP91Fst"QfhfAc4sLoWEu3M+De\Oi&''h7,WuDSH&Z'H7/F$l4H0:^"8Vn^9AW/90oilik+\.[#2CJ*6/TB%FCZ\9,8cA=f9YZu
%$&"X\lEFK&PB4iZa72i<*sAcX!?7N0p=6j4<"usVXME9!I6E6n#].Wc^'"Z]@Ja=6Zd8a;][Ada.@s_An8Bg[,S-^YM6;>eYjT#<
%d[7`0/3c's'Rl^/fT6;N3-i_?7*sT?itf&*(o1it[3T-G#_Pu]WO0iW7`ahCEeR\!&HKJUJnNpp."RR&EoS%3(/6O'WB)MF\m-c2
%*6^Idf4Kh]&$oZ."K,]A=7P@s==s4:Zg+1Z)BoV<Om57d#hm5_:;MSoWR_#qNmuieAWs!j8-r8d2oKej<KG>]l%%-qf[^eFi,USq
%&:$<O4VhJ.EY=[&LcFljq8dm+?/2bmGl-);iWZO05\$s%CAF]<(1";7JCqoc%<SJ"cq5/N<T7:$MC;d/M?q,h20Q1g^ocfVYBq?A
%\g7TD*Yo>HDJ0q@:]Cmkg"J]KY97;>jjJ`OTef<lEmI5YR/#K?\1kFA>p9pZ137B)^Q&pjf<T8X*1einmpHKoCGb!/b[N[dQF.L,
%Ri7&9_'CN0*4Hh^C1inQOE4c?_<=SWOn71Tr+2\[ioQib9'gZ8-\JT^Wj<f`7S(4S;7+\!qKg4B6lBUTd:CHna_P:3a-%\?4(a?<
%9pBme(t*r`%nZ(>MS8A141m.(:D.63WimlP[.;b=R_h4mgD(YRea69E>lgTnj^8^%R?gn0q7/rrZDM@uc^5;AY7t>Rho/pb]aL0N
%a,r!oE_"<!"f;SG?k-M*dQ\B"s/STgUA)8cI$=VQ4Y1"b2'^i=eGUPDN@7M&_'`D-YlRB,<72j%0dZhmca!I%*#tCjE^82*6mO:h
%76>m:GA.6-o!cT;%;Tc'l4mit:oi+*eP4Y-2^iX<%U*WD)ZWc'k(<n&jip?g']Rh6G*rEdmYIc:Z]1f!%B9+0GN'Vd';t4<WX,D$
%P.KWJoVf%/^VXQ#XL'!Or1FD'6X9^S#kU4>W]Q$XDiJ4.ho_OSYN=XSK.[-g,6Euk=P9L#n;ciu'iW&l$C>Ne8cU:bO-5\)Ood)W
%!KK`!'uR`pB)+TNs!P>Na67n8L,9h+cA-9FbQe9F7#<]R[9<;RfEi_[^s`W\/dQ>scdrFW7<S<(63u"he/g.%4fBo%Muf>@RS/TK
%`NQ!LnIEU")i^$ao#,?)K-=-,o$NAjYq#\S_-r.rJkU3=kH^+YVEYb7bY]+]<,I=jj<t.4\(,!d)lusR_n(DPPZ"M98E3jS8"CrG
%+_P<^7TXR6q9/h4GF&XaoSaIOO=$_r+EBW5]=4Yln'>r!\5a,9S2R#!_llAKfHH?7J3$c-g2XgdSi1G'n+!(;NquIP"V_O5k!P7,
%dW3@o-_JeZSmA=/G#nSBFm^IQ#q13$q2LYd$\:n,O^62'1c/$0@;(Z,bmC^KND@pNqiKL'i?n8TL,<*sD"`a@V08C-Dl9Y]/AHlQ
%b:uG#8_p8;og`_b'fATL$J_^^+K/:LV1*OAf>Ct/kl+.nB#TZ?=Uo^B#bu5+=`HtUKg=K7J.[^@h]F?QH+6KKc6T@@jhA`>P:#\I
%^es?mhshG@BcRp2B<`;X@9@QMaEL9+]iS<3CORP+F[r(+jD;6VdEdTrgl.S^FqV_H,:<d6YV!\Kc$2&Ke<Q$T/Jm2T8p9PEP683:
%F>E3f7R2P'.\ZV6]m+cI09n$%b:t9M[Qb>AlcsRPa32Hs\BZ:H&Qt:)d%#_^F@?nNl+Y<1hlF8`EZ&KBRjYQ&:4S4?=Y<O'\>4uM
%Ye53d-.4,?)qCO0%eTK#*u\3%GSFdn7];-\#2^L>[j]u,fXBC/%g\em,:!l/:T)qP^\0icRsf=TTga*fb.-d6%S6U],c1=`b2bYV
%LFYnjP_7=^B6Lr&*!2Z4A^(h0Q:mDX>(9gQ`31!T._[I&'hl";jgX5<_/4@Y18j"!OsW1W-T#389_qej,!37%ZL2Emqb/8t&<sZ]
%AnI_*>h0):39JUoJf&m[Ub%L"1)32:\q+p\Z]@=pBW/cNHJCeU_$o!ZG:]AhEnqqmW3M>]f/qHn-!NuGX#U`X+=V>]a977Db3mNL
%`&,6HUrnLBS-2omk"c]TrTc!1!\>qP&Dua/%eUVLMC)<X9I5(=DuiH:3E[@g?K3Sjp'*Efm$nIUNI7:gGAT[*iQmH55D24ohr:08
%j7l>N#"qN4?KK\4kiZW/IqCuNfl%Q[rY$W$c@TA]1B+*KnB@ma.H8Q@loB>T&KK2E"WpH6'KuN.h!#!GU22i(EAm7*Dr`Bg?O-G`
%K&pl=B,kuG>W'fqr-&<<csW?ZcMKW*Qkt>)4t6hWBE3qIDTp(#2$DtQZe_j/Qgbi-93]CrWl7_6gZ2dX(HR,.*H8sNUXC^t<K-Xt
%%fQ7I(?%q)Upf\kTRBl.mP^4cKQ\'80dYO2MBU2]gX\l]'&HQN!DU"`oH`mB[,Tk]GLGr5k@jIN2k_%kZ_t)'iMUcmB'HhO1irm[
%85/GT!uM:*Z#6sA-&<IR"/!--OGZ-F9#(r)U9#(aP:<CHPWTTqo+@N]q+ZTd7i<7p(B_a&JQ3c*O7YLUEYL+<9>+u1^.-a(AYhI5
%!ZO0ZeM6s>*L-GC@]oIDad4WJ/CW(b?Nr'f1JGYdILk4Xa]N$r4ajl9(/F=`OQEg.iu6JU8iou#98'$DWA-UFo/dYe5t0,fN@5+t
%fq&ki+^,7Dk2&V"IJ-uHg8(@soF<i9?l%D[T>V.sY/@3J'iO`Ug`!k&s*bK_:@0H5I+!$^KU<ikY--\icR'm?[t>&k^(#4<c3m]3
%K_Kh4kFM+sLBimU[&3S<?>s9)msc.=NBt=NCKLOh/0jL?5LqTc2_"XlZ-o4OW79%j'DbZRGY%+CKoT1t`YG6N^Kf5dV<se0*S+r*
%TW-IS9Lh4$dpHTk;h:UZCX9>6r$dZ70k9a+)&rWVCe]OVQ0u9nXa9["=8M^7%`[A[o-qfC1q_j,)r;B4s4u!0%(rPijSAbg=8,SB
%*-XQCI&GD>eK,*jbSRDhP$E2.VFK5u:.ng`)bP6);='LtUbbI#q'MH7KhG:D:%*LWqV<CL"hUW58)f36`Nc_pLJgp-!.D(((ADht
%Gh#"#%Yct%f\)5ZOJ;5$Z?c.H)@E)E;s0tM:.=+?kkTIN\&>Irr2pAlD.tK\Z]7YO!4'">6djKkUmsc$!)U#@;rrG*Ls>C),mM]:
%S.X7l09a_3Y-Kp%<LosT-^q"p@p!Plq"4u7(Qf3"dPHOtF[#Hh'/G_j%m-UPVL?YufkOe[OkYW8?)CQ<4DIRYhT>hK]\lZa"<<P!
%defsphDt(Pn7qf@oc_@@Q?#FYW9^e".P\bfW8Ap#l.$=Z>UP6%HjI(F:;O!+/i9=h__K[(F7cP!s&bO#?qgFH23*)]hQ'dR[X,C*
%d58*X[2O=HF9pD*.e\<%^n:H+A_0>.#NH.V2rqonM4d^o"e_r.F+;b[<\8m*F<![BmVcVE%#H]:hncF<A[o"#U0>:g':[1S=jW=)
%n'K)@j&'P3Hqd"A0+A14=T6(@cCi.9,Da3\Jc:9S$ZWs9h*!nWI8#S%#(q>[EGe6RYmH*>TNr3$n"]?PdKWaV-`q"1;r'TB<Nk]$
%$<,&[_61,Mk&2Rik,.,)/I!Zb;HiEGP[p(VF)+2;<=XX=['ZVMW7ECtkoQRTW4&M!J;MZMK;nCK"eoL&<@)KhPW9sO>B7K`]k=nT
%<mO1>+U03XDPLrTL=%ips1GUr9j`j^FF5",V"u(X0i5i;o5O.r;OXR8hJ<pB^:6C!X+?_"a-:>^,nLb$''46Y_3hQKh;+<3#8004
%i`;L5>OqBr+1_,$Ws"TaYVR'Y'uK'tH#5E39Onnp6W1558bs;HQmDXaK+(5`]1+B#ajnb;R"+dFn\Dd_QI'B*<`SqE>&jV1nYOU2
%EV>E'h(.i^MYDb8d4J[FM)O,%;p7up3:*e$!=RqnWfru7GMQe"`&is;AhSU6Du^db&R2Ok')+@2('jAFC&te(fqH2jCmf3T0p\';
%p;OEB?2oi&n2mGX.5NKj?tPn4KIJ/=.`&!"N0:VQQ2hEU?u(nnBd5]Eq+[0'UDT8257jL22\-@^`g&ffOZ]2:kHPC:i.e#Tk_N>q
%KS]1L2t5q0d77pZ[%ROLCkSMG=eiqTZm?2_K,.Jh$QqOdJLM"+fsXN@60l#F1nb4'UCLkb,8G9:mDi=5p?/A:]>["(f.C.2H>AeM
%(=[f6&uW0SD!$RCb=#&Q*5R7`ecQbiiVY$[k;1_Q8iiZYg2"!bR4-gmglWmRU__7!5f>N<+IR,JU>o9IRYDVh=2K'FP#.RtOZj&m
%if_8CJni@LnK[>UNpNA<nsk#`P$^?dR3'nLQ4TAj9BPJQ@Wff-[R_;D=U2a/c;Cr_-sid2U)WJ*o$6e0;jTd)=B??ML0FF1a4\=s
%a&PN6M)QOgiP.#>8I=`-/=]\#>h=$SoGVj69_YP>APKnm=[c.&/7^\<,_D_APZNE[+[WI4g7QFAfpY/\,:C;kAk^upjHt9#PqFe/
%-DHEeblQItQWWS\#fM7hp?]8!!"Y>d=>G#\(trau-=T7\m.Y;fF^ST[@3!0O-Q\0iqq`GN?)n=t^`$MX;gObY^nN^bKp[&+4>(RF
%AU$_40,;jnTNH8\5f8ARi0PJ+'3d"0!?%'6RIX+0P$j@j>@88J3GO"]E0SJt>=IPr#^>F-XMG[AeQSLDIW_flp1&_P#Vo3GE(6le
%7`iWZ-$ql:*)"G2;/%@^/eue!813mHCD!)IRQ2RM+/\Q$HOE_lk,Ggp`oog0l:^$-&?4usVj]E..8stI#-gVI-!7&WmXqZrEkhN9
%/H.MneWS!,GF(s[mP,)Zcn\J<C9l9g-9H5V'"<^=(8]Mm@0R_NY3J"n$#ZjXf)"p[IWtT,LEG@mIf$_6IJeB*]DLh[s7ZHNqo@a3
%Vt8ZPQOiLJ+7E"?Sr\C!GrkD<pJ8iE:P[uJ_rL@Yq=N;#?\eOMl08$6HoaCgrqI"rE7)i4GB`L?rNb>Z#;0Y:>Q~>
%AI9_PrivateDataEnd
